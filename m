Return-Path: <linux-kselftest-owner@vger.kernel.org>
X-Original-To: lists+linux-kselftest@lfdr.de
Delivered-To: lists+linux-kselftest@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id B8B3551AD02
	for <lists+linux-kselftest@lfdr.de>; Wed,  4 May 2022 20:36:41 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1377201AbiEDSkL (ORCPT <rfc822;lists+linux-kselftest@lfdr.de>);
        Wed, 4 May 2022 14:40:11 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34408 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1377343AbiEDSjq (ORCPT
        <rfc822;linux-kselftest@vger.kernel.org>);
        Wed, 4 May 2022 14:39:46 -0400
Received: from us-smtp-delivery-124.mimecast.com (us-smtp-delivery-124.mimecast.com [170.10.129.124])
        by lindbergh.monkeyblade.net (Postfix) with ESMTP id EF57B5F7E
        for <linux-kselftest@vger.kernel.org>; Wed,  4 May 2022 11:33:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1651689209;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=A/CHAf2jvhDCdKp394HpPEU/UHXmBVMIuCgm7VdwCAk=;
        b=T96uRmG/hByBJHi2tVLsyYDffNYcLYQBfA2P80eHGPHhxcxrmxEWK9kAjTJNLme6IoxTYo
        3Kie355W1gK6MmVjiWD3tFF/Z5rgBrMANys8rtNiddANoTJCd+d5Nlzu6uAJWvhu4GyD9k
        0cCMSa5IGFZyZTYJ6YaEJIlbMldtj4s=
Received: from mimecast-mx02.redhat.com (mx3-rdu2.redhat.com
 [66.187.233.73]) by relay.mimecast.com with ESMTP with STARTTLS
 (version=TLSv1.2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 us-mta-191-0y36m28zN3OwZyQaO0WW8Q-1; Wed, 04 May 2022 14:33:16 -0400
X-MC-Unique: 0y36m28zN3OwZyQaO0WW8Q-1
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.rdu2.redhat.com [10.11.54.1])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mimecast-mx02.redhat.com (Postfix) with ESMTPS id 30619397969A;
        Wed,  4 May 2022 18:33:12 +0000 (UTC)
Received: from [10.18.17.215] (dhcp-17-215.bos.redhat.com [10.18.17.215])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 7701140CF8EF;
        Wed,  4 May 2022 18:33:11 +0000 (UTC)
Content-Type: multipart/mixed; boundary="------------jCz2Xk9HZ5nWhl7YWm0gKoKD"
Message-ID: <e5249756-2fb8-e0f8-69f9-9ebb12a54618@redhat.com>
Date:   Wed, 4 May 2022 14:33:11 -0400
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.8.0
Subject: Re: [PATCH v10 0/8] cgroup/cpuset: Major cpu partition code
 restructuring
Content-Language: en-US
To:     =?UTF-8?Q?Michal_Koutn=c3=bd?= <mkoutny@suse.com>
Cc:     Tejun Heo <tj@kernel.org>, Zefan Li <lizefan.x@bytedance.com>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Jonathan Corbet <corbet@lwn.net>,
        Shuah Khan <shuah@kernel.org>, cgroups@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-doc@vger.kernel.org,
        linux-kselftest@vger.kernel.org,
        Andrew Morton <akpm@linux-foundation.org>,
        Roman Gushchin <guro@fb.com>, Phil Auld <pauld@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Juri Lelli <juri.lelli@redhat.com>,
        Frederic Weisbecker <frederic@kernel.org>,
        Marcelo Tosatti <mtosatti@redhat.com>
References: <20220503162149.1764245-1-longman@redhat.com>
 <20220504112801.GB15266@blackbody.suse.cz>
From:   Waiman Long <longman@redhat.com>
In-Reply-To: <20220504112801.GB15266@blackbody.suse.cz>
X-Scanned-By: MIMEDefang 2.84 on 10.11.54.1
X-Spam-Status: No, score=-5.9 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,NICE_REPLY_A,
        RCVD_IN_DNSWL_LOW,SPF_HELO_NONE,SPF_NONE,T_SCC_BODY_TEXT_LINE
        autolearn=unavailable autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kselftest.vger.kernel.org>
X-Mailing-List: linux-kselftest@vger.kernel.org

This is a multi-part message in MIME format.
--------------jCz2Xk9HZ5nWhl7YWm0gKoKD
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

On 5/4/22 07:28, Michal Koutný wrote:
> Hello.
>
> On Tue, May 03, 2022 at 12:21:41PM -0400, Waiman Long <longman@redhat.com> wrote:
>> v10:
>>   - Relax constraints for changes made to "cpuset.cpus"
>>     and "cpuset.cpus.partition" as suggested. Now almost all changes
>>     are allowed.
> I see there were also some other changes from v9 (like the first patches
> of series).
> Any chance you have a public git repo with both versions for a
> convenient range-diff?

That is true. Both patches 1 and 2 are new and the changes are pretty 
straight forward. Patch 1 of v9 has been merged with a latent bug. Patch 
4 of this series is a replacement of patch 3 "cgroup/cpuset: Refining 
features and constraints of a  partition" of v9. The other patches are 
similar to their versions in v9 with some adjustment based on the 
different code base.

I don't have a public repo. Attached is the file diff between v9 and v10 
in cpuset.c with some other unrelated cpuset patches included.

Cheers,
Longman

--------------jCz2Xk9HZ5nWhl7YWm0gKoKD
Content-Type: text/x-patch; charset=UTF-8; name="cpuset.c.v9.diff"
Content-Disposition: attachment; filename="cpuset.c.v9.diff"
Content-Transfer-Encoding: base64

ZGlmZiAtLWdpdCBhL2tlcm5lbC9jZ3JvdXAvY3B1c2V0LmMgYi9rZXJuZWwvY2dyb3VwL2Nw
dXNldC5jCmluZGV4IDg3MDNhODQ1MmMzMy4uOTBlZTBlNGQ4ZDdlIDEwMDY0NAotLS0gYS9r
ZXJuZWwvY2dyb3VwL2NwdXNldC5jCisrKyBiL2tlcm5lbC9jZ3JvdXAvY3B1c2V0LmMKQEAg
LTcxLDcgKzcxLDcgQEAgREVGSU5FX1NUQVRJQ19LRVlfRkFMU0UoY3B1c2V0c19lbmFibGVk
X2tleSk7CiAKIC8qCiAgKiBUaGVyZSBjb3VsZCBiZSBhYm5vcm1hbCBjcHVzZXQgY29uZmln
dXJhdGlvbnMgZm9yIGNwdSBvciBtZW1vcnkKLSAqIG5vZGUgYmluZGluZywgYWRkIHRoaXMg
a2V5IHRvIHByb3ZpZGUgYSBxdWljayBsb3ctY29zdCBqdWRnZW1lbnQKKyAqIG5vZGUgYmlu
ZGluZywgYWRkIHRoaXMga2V5IHRvIHByb3ZpZGUgYSBxdWljayBsb3ctY29zdCBqdWRnbWVu
dAogICogb2YgdGhlIHNpdHVhdGlvbi4KICAqLwogREVGSU5FX1NUQVRJQ19LRVlfRkFMU0Uo
Y3B1c2V0c19pbnNhbmVfY29uZmlnX2tleSk7CkBAIC05MywxNiArOTMsMjAgQEAgZW51bSBw
cnNfZXJyY29kZSB7CiAJUEVSUl9JTlZDUFVTLAogCVBFUlJfSU5WUEFSRU5ULAogCVBFUlJf
Tk9UUEFSVCwKKwlQRVJSX05PVEVYQ0wsCiAJUEVSUl9OT0NQVVMsCiAJUEVSUl9IT1RQTFVH
LAorCVBFUlJfQ1BVU0VNUFRZLAogfTsKIAogc3RhdGljIGNvbnN0IGNoYXIgKiBjb25zdCBw
ZXJyX3N0cmluZ3NbXSA9IHsKLQlbUEVSUl9JTlZDUFVTXSAgID0gIkludmFsaWQgY2hhbmdl
IHRvIGNwdXNldC5jcHVzIiwKKwlbUEVSUl9JTlZDUFVTXSAgID0gIkludmFsaWQgY3B1IGxp
c3QgaW4gY3B1c2V0LmNwdXMiLAogCVtQRVJSX0lOVlBBUkVOVF0gPSAiUGFyZW50IGlzIGFu
IGludmFsaWQgcGFydGl0aW9uIHJvb3QiLAogCVtQRVJSX05PVFBBUlRdICAgPSAiUGFyZW50
IGlzIG5vdCBhIHBhcnRpdGlvbiByb290IiwKKwlbUEVSUl9OT1RFWENMXSAgID0gIkNwdSBs
aXN0IGluIGNwdXNldC5jcHVzIG5vdCBleGNsdXNpdmUiLAogCVtQRVJSX05PQ1BVU10gICAg
PSAiUGFyZW50IHVuYWJsZSB0byBkaXN0cmlidXRlIGNwdSBkb3duc3RyZWFtIiwKIAlbUEVS
Ul9IT1RQTFVHXSAgID0gIk5vIGNwdSBhdmFpbGFibGUgZHVlIHRvIGhvdHBsdWciLAorCVtQ
RVJSX0NQVVNFTVBUWV0gPSAiY3B1c2V0LmNwdXMgaXMgZW1wdHkiLAogfTsKIAogc3RydWN0
IGNwdXNldCB7CkBAIC0xOTgsMjMgKzIwMiwyMiBAQCBzdHJ1Y3QgY3B1c2V0IHsKIC8qCiAg
KiBQYXJ0aXRpb24gcm9vdCBzdGF0ZXM6CiAgKgotICogICAwIC0gbm90IGEgcGFydGl0aW9u
IHJvb3QKLSAqCisgKiAgIDAgLSBtZW1iZXIgKG5vdCBhIHBhcnRpdGlvbiByb290KQogICog
ICAxIC0gcGFydGl0aW9uIHJvb3QKLSAqCiAgKiAgIDIgLSBwYXJ0aXRpb24gcm9vdCB3aXRo
b3V0IGxvYWQgYmFsYW5jaW5nIChpc29sYXRlZCkKLSAqCiAgKiAgLTEgLSBpbnZhbGlkIHBh
cnRpdGlvbiByb290Ci0gKiAgICAgICBOb25lIG9mIHRoZSBjcHVzIGluIGNwdXNfYWxsb3dl
ZCBjYW4gYmUgcHV0IGludG8gdGhlIHBhcmVudCdzCi0gKiAgICAgICBzdWJwYXJ0c19jcHVz
LiBJbiB0aGlzIGNhc2UsIHRoZSBjcHVzZXQgaXMgbm90IGEgcmVhbCBwYXJ0aXRpb24KLSAq
ICAgICAgIHJvb3QgYW55bW9yZS4gIEhvd2V2ZXIsIHRoZSBDUFVfRVhDTFVTSVZFIGJpdCB3
aWxsIHN0aWxsIGJlIHNldAotICogICAgICAgYW5kIHRoZSBjcHVzZXQgY2FuIGJlIHJlc3Rv
cmVkIGJhY2sgdG8gYSBwYXJ0aXRpb24gcm9vdCBpZiB0aGUKLSAqICAgICAgIHBhcmVudCBj
cHVzZXQgY2FuIGdpdmUgbW9yZSBDUFVzIGJhY2sgdG8gdGhpcyBjaGlsZCBjcHVzZXQuCisg
KiAgLTIgLSBpbnZhbGlkIGlzb2xhdGVkIHBhcnRpdGlvbiByb290CiAgKi8KLSNkZWZpbmUg
UFJTX0RJU0FCTEVECQkwCi0jZGVmaW5lIFBSU19FTkFCTEVECQkxCisjZGVmaW5lIFBSU19N
RU1CRVIJCTAKKyNkZWZpbmUgUFJTX1JPT1QJCTEKICNkZWZpbmUgUFJTX0lTT0xBVEVECQky
Ci0jZGVmaW5lIFBSU19FUlJPUgkJLTEKKyNkZWZpbmUgUFJTX0lOVkFMSURfUk9PVAktMQor
I2RlZmluZSBQUlNfSU5WQUxJRF9JU09MQVRFRAktMgorCitzdGF0aWMgaW5saW5lIGJvb2wg
aXNfcHJzX2ludmFsaWQoaW50IHByc19zdGF0ZSkKK3sKKwlyZXR1cm4gcHJzX3N0YXRlIDwg
MDsKK30KIAogLyoKICAqIFRlbXBvcmFyeSBjcHVtYXNrcyBmb3Igd29ya2luZyB3aXRoIHBh
cnRpdGlvbnMgdGhhdCBhcmUgcGFzc2VkIGFtb25nCkBAIC0yOTQsMzAgKzI5Nyw0MCBAQCBz
dGF0aWMgaW5saW5lIGludCBpc19zcHJlYWRfc2xhYihjb25zdCBzdHJ1Y3QgY3B1c2V0ICpj
cykKIAlyZXR1cm4gdGVzdF9iaXQoQ1NfU1BSRUFEX1NMQUIsICZjcy0+ZmxhZ3MpOwogfQog
Ci1zdGF0aWMgaW5saW5lIGludCBpc19wYXJ0aXRpb25fcm9vdChjb25zdCBzdHJ1Y3QgY3B1
c2V0ICpjcykKK3N0YXRpYyBpbmxpbmUgaW50IGlzX3BhcnRpdGlvbl92YWxpZChjb25zdCBz
dHJ1Y3QgY3B1c2V0ICpjcykKIHsKIAlyZXR1cm4gY3MtPnBhcnRpdGlvbl9yb290X3N0YXRl
ID4gMDsKIH0KIAorc3RhdGljIGlubGluZSBpbnQgaXNfcGFydGl0aW9uX2ludmFsaWQoY29u
c3Qgc3RydWN0IGNwdXNldCAqY3MpCit7CisJcmV0dXJuIGNzLT5wYXJ0aXRpb25fcm9vdF9z
dGF0ZSA8IDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzZXRfcGFydGl0aW9uX2ludmFs
aWQoc3RydWN0IGNwdXNldCAqY3MpCit7CisJaWYgKGlzX3BhcnRpdGlvbl92YWxpZChjcykp
CisJCWNzLT5wYXJ0aXRpb25fcm9vdF9zdGF0ZSA9IC1jcy0+cGFydGl0aW9uX3Jvb3Rfc3Rh
dGU7Cit9CisKIC8qCiAgKiBTZW5kIG5vdGlmaWNhdGlvbiBldmVudCBvZiB3aGVuZXZlciBw
YXJ0aXRpb25fcm9vdF9zdGF0ZSBjaGFuZ2VzLgogICovCi1zdGF0aWMgaW5saW5lIHZvaWQg
bm90aWZ5X3BhcnRpdGlvbl9jaGFuZ2Uoc3RydWN0IGNwdXNldCAqY3MsCi0JCQkJCSAgIGlu
dCBvbGRfcHJzLCBpbnQgbmV3X3BycykKK3N0YXRpYyBpbmxpbmUgdm9pZCBub3RpZnlfcGFy
dGl0aW9uX2NoYW5nZShzdHJ1Y3QgY3B1c2V0ICpjcywgaW50IG9sZF9wcnMpCiB7Ci0JaWYg
KG9sZF9wcnMgPT0gbmV3X3BycykKKwlpZiAob2xkX3BycyA9PSBjcy0+cGFydGl0aW9uX3Jv
b3Rfc3RhdGUpCiAJCXJldHVybjsKIAljZ3JvdXBfZmlsZV9ub3RpZnkoJmNzLT5wYXJ0aXRp
b25fZmlsZSk7CiAKIAkvKiBSZXNldCBwcnNfZXJyIGlmIG5vdCBpbnZhbGlkICovCi0JaWYg
KG5ld19wcnMgIT0gUFJTX0VSUk9SKQorCWlmIChpc19wYXJ0aXRpb25fdmFsaWQoY3MpKQog
CQlXUklURV9PTkNFKGNzLT5wcnNfZXJyLCBQRVJSX05PTkUpOwogfQogCiBzdGF0aWMgc3Ry
dWN0IGNwdXNldCB0b3BfY3B1c2V0ID0gewogCS5mbGFncyA9ICgoMSA8PCBDU19PTkxJTkUp
IHwgKDEgPDwgQ1NfQ1BVX0VYQ0xVU0lWRSkgfAogCQkgICgxIDw8IENTX01FTV9FWENMVVNJ
VkUpKSwKLQkucGFydGl0aW9uX3Jvb3Rfc3RhdGUgPSBQUlNfRU5BQkxFRCwKKwkucGFydGl0
aW9uX3Jvb3Rfc3RhdGUgPSBQUlNfUk9PVCwKIH07CiAKIC8qKgpAQCAtNDU5LDcgKzQ3Miw3
IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBwYXJ0aXRpb25faXNfcG9wdWxhdGVkKHN0cnVjdCBj
cHVzZXQgKmNzLAogCWNwdXNldF9mb3JfZWFjaF9jaGlsZChjaGlsZCwgY3NzLCBjcykgewog
CQlpZiAoY2hpbGQgPT0gZXhjbHVkZWRfY2hpbGQpCiAJCQljb250aW51ZTsKLQkJaWYgKGlz
X3BhcnRpdGlvbl9yb290KGNoaWxkKSkKKwkJaWYgKGlzX3BhcnRpdGlvbl92YWxpZChjaGls
ZCkpCiAJCQljb250aW51ZTsKIAkJaWYgKGNncm91cF9pc19wb3B1bGF0ZWQoY2hpbGQtPmNz
cy5jZ3JvdXApKSB7CiAJCQlyY3VfcmVhZF91bmxvY2soKTsKQEAgLTY1Niw2ICs2NjksMzUg
QEAgc3RhdGljIGlubGluZSB2b2lkIGZyZWVfY3B1c2V0KHN0cnVjdCBjcHVzZXQgKmNzKQog
CWtmcmVlKGNzKTsKIH0KIAorLyoKKyAqIHZhbGlkYXRlX2NoYW5nZV9sZWdhY3koKSAtIFZh
bGlkYXRlIGNvbmRpdGlvbnMgc3BlY2lmaWMgdG8gbGVnYWN5ICh2MSkKKyAqICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIGJlaGF2aW9yLgorICovCitzdGF0aWMgaW50IHZhbGlkYXRl
X2NoYW5nZV9sZWdhY3koc3RydWN0IGNwdXNldCAqY3VyLCBzdHJ1Y3QgY3B1c2V0ICp0cmlh
bCkKK3sKKwlzdHJ1Y3QgY2dyb3VwX3N1YnN5c19zdGF0ZSAqY3NzOworCXN0cnVjdCBjcHVz
ZXQgKmMsICpwYXI7CisJaW50IHJldDsKKworCVdBUk5fT05fT05DRSghcmN1X3JlYWRfbG9j
a19oZWxkKCkpOworCisJLyogRWFjaCBvZiBvdXIgY2hpbGQgY3B1c2V0cyBtdXN0IGJlIGEg
c3Vic2V0IG9mIHVzICovCisJcmV0ID0gLUVCVVNZOworCWNwdXNldF9mb3JfZWFjaF9jaGls
ZChjLCBjc3MsIGN1cikKKwkJaWYgKCFpc19jcHVzZXRfc3Vic2V0KGMsIHRyaWFsKSkKKwkJ
CWdvdG8gb3V0OworCisJLyogT24gbGVnYWN5IGhpZXJhcmNoeSwgd2UgbXVzdCBiZSBhIHN1
YnNldCBvZiBvdXIgcGFyZW50IGNwdXNldC4gKi8KKwlyZXQgPSAtRUFDQ0VTOworCXBhciA9
IHBhcmVudF9jcyhjdXIpOworCWlmIChwYXIgJiYgIWlzX2NwdXNldF9zdWJzZXQodHJpYWws
IHBhcikpCisJCWdvdG8gb3V0OworCisJcmV0ID0gMDsKK291dDoKKwlyZXR1cm4gcmV0Owor
fQorCiAvKgogICogdmFsaWRhdGVfY2hhbmdlKCkgLSBVc2VkIHRvIHZhbGlkYXRlIHRoYXQg
YW55IHByb3Bvc2VkIGNwdXNldCBjaGFuZ2UKICAqCQkgICAgICAgZm9sbG93cyB0aGUgc3Ry
dWN0dXJhbCBydWxlcyBmb3IgY3B1c2V0cy4KQEAgLTY4MCwyMCArNzIyLDIxIEBAIHN0YXRp
YyBpbnQgdmFsaWRhdGVfY2hhbmdlKHN0cnVjdCBjcHVzZXQgKmN1ciwgc3RydWN0IGNwdXNl
dCAqdHJpYWwpCiB7CiAJc3RydWN0IGNncm91cF9zdWJzeXNfc3RhdGUgKmNzczsKIAlzdHJ1
Y3QgY3B1c2V0ICpjLCAqcGFyOwotCWludCByZXQ7Ci0KLQkvKiBUaGUgY2hlY2tzIGRvbid0
IGFwcGx5IHRvIHJvb3QgY3B1c2V0ICovCi0JaWYgKGN1ciA9PSAmdG9wX2NwdXNldCkKLQkJ
cmV0dXJuIDA7CisJaW50IHJldCA9IDA7CiAKIAlyY3VfcmVhZF9sb2NrKCk7Ci0JcGFyID0g
cGFyZW50X2NzKGN1cik7CiAKLQkvKiBPbiBsZWdhY3kgaGllcmFyY2h5LCB3ZSBtdXN0IGJl
IGEgc3Vic2V0IG9mIG91ciBwYXJlbnQgY3B1c2V0LiAqLwotCXJldCA9IC1FQUNDRVM7Ci0J
aWYgKCFpc19pbl92Ml9tb2RlKCkgJiYgIWlzX2NwdXNldF9zdWJzZXQodHJpYWwsIHBhcikp
CisJaWYgKCFpc19pbl92Ml9tb2RlKCkpCisJCXJldCA9IHZhbGlkYXRlX2NoYW5nZV9sZWdh
Y3koY3VyLCB0cmlhbCk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwkvKiBSZW1haW5p
bmcgY2hlY2tzIGRvbid0IGFwcGx5IHRvIHJvb3QgY3B1c2V0ICovCisJaWYgKGN1ciA9PSAm
dG9wX2NwdXNldCkKIAkJZ290byBvdXQ7CiAKKwlwYXIgPSBwYXJlbnRfY3MoY3VyKTsKKwog
CS8qCiAJICogSWYgZWl0aGVyIEkgb3Igc29tZSBzaWJsaW5nICghPSBtZSkgaXMgZXhjbHVz
aXZlLCB3ZSBjYW4ndAogCSAqIG92ZXJsYXAKQEAgLTg2OSw3ICs5MTIsNyBAQCBzdGF0aWMg
aW50IGdlbmVyYXRlX3NjaGVkX2RvbWFpbnMoY3B1bWFza192YXJfdCAqKmRvbWFpbnMsCiAJ
CQl1cGRhdGVfZG9tYWluX2F0dHJfdHJlZShkYXR0ciwgJnRvcF9jcHVzZXQpOwogCQl9CiAJ
CWNwdW1hc2tfYW5kKGRvbXNbMF0sIHRvcF9jcHVzZXQuZWZmZWN0aXZlX2NwdXMsCi0JCQkg
ICAgaG91c2VrZWVwaW5nX2NwdW1hc2soSEtfRkxBR19ET01BSU4pKTsKKwkJCSAgICBob3Vz
ZWtlZXBpbmdfY3B1bWFzayhIS19UWVBFX0RPTUFJTikpOwogCiAJCWdvdG8gZG9uZTsKIAl9
CkBAIC04OTksNyArOTQyLDcgQEAgc3RhdGljIGludCBnZW5lcmF0ZV9zY2hlZF9kb21haW5z
KGNwdW1hc2tfdmFyX3QgKipkb21haW5zLAogCQlpZiAoIWNwdW1hc2tfZW1wdHkoY3AtPmNw
dXNfYWxsb3dlZCkgJiYKIAkJICAgICEoaXNfc2NoZWRfbG9hZF9iYWxhbmNlKGNwKSAmJgog
CQkgICAgICBjcHVtYXNrX2ludGVyc2VjdHMoY3AtPmNwdXNfYWxsb3dlZCwKLQkJCQkJIGhv
dXNla2VlcGluZ19jcHVtYXNrKEhLX0ZMQUdfRE9NQUlOKSkpKQorCQkJCQkgaG91c2VrZWVw
aW5nX2NwdW1hc2soSEtfVFlQRV9ET01BSU4pKSkpCiAJCQljb250aW51ZTsKIAogCQlpZiAo
cm9vdF9sb2FkX2JhbGFuY2UgJiYKQEAgLTkxMSw3ICs5NTQsNyBAQCBzdGF0aWMgaW50IGdl
bmVyYXRlX3NjaGVkX2RvbWFpbnMoY3B1bWFza192YXJfdCAqKmRvbWFpbnMsCiAJCQljc2Fb
Y3NuKytdID0gY3A7CiAKIAkJLyogc2tpcCBAY3AncyBzdWJ0cmVlIGlmIG5vdCBhIHBhcnRp
dGlvbiByb290ICovCi0JCWlmICghaXNfcGFydGl0aW9uX3Jvb3QoY3ApKQorCQlpZiAoIWlz
X3BhcnRpdGlvbl92YWxpZChjcCkpCiAJCQlwb3NfY3NzID0gY3NzX3JpZ2h0bW9zdF9kZXNj
ZW5kYW50KHBvc19jc3MpOwogCX0KIAlyY3VfcmVhZF91bmxvY2soKTsKQEAgLTk4OCw3ICsx
MDMxLDcgQEAgc3RhdGljIGludCBnZW5lcmF0ZV9zY2hlZF9kb21haW5zKGNwdW1hc2tfdmFy
X3QgKipkb21haW5zLAogCiAJCQlpZiAoYXBuID09IGItPnBuKSB7CiAJCQkJY3B1bWFza19v
cihkcCwgZHAsIGItPmVmZmVjdGl2ZV9jcHVzKTsKLQkJCQljcHVtYXNrX2FuZChkcCwgZHAs
IGhvdXNla2VlcGluZ19jcHVtYXNrKEhLX0ZMQUdfRE9NQUlOKSk7CisJCQkJY3B1bWFza19h
bmQoZHAsIGRwLCBob3VzZWtlZXBpbmdfY3B1bWFzayhIS19UWVBFX0RPTUFJTikpOwogCQkJ
CWlmIChkYXR0cikKIAkJCQkJdXBkYXRlX2RvbWFpbl9hdHRyX3RyZWUoZGF0dHIgKyBuc2xv
dCwgYik7CiAKQEAgLTExMTcsNyArMTE2MCw3IEBAIHN0YXRpYyB2b2lkIHJlYnVpbGRfc2No
ZWRfZG9tYWluc19sb2NrZWQodm9pZCkKIAlpZiAodG9wX2NwdXNldC5ucl9zdWJwYXJ0c19j
cHVzKSB7CiAJCXJjdV9yZWFkX2xvY2soKTsKIAkJY3B1c2V0X2Zvcl9lYWNoX2Rlc2NlbmRh
bnRfcHJlKGNzLCBwb3NfY3NzLCAmdG9wX2NwdXNldCkgewotCQkJaWYgKCFpc19wYXJ0aXRp
b25fcm9vdChjcykpIHsKKwkJCWlmICghaXNfcGFydGl0aW9uX3ZhbGlkKGNzKSkgewogCQkJ
CXBvc19jc3MgPSBjc3NfcmlnaHRtb3N0X2Rlc2NlbmRhbnQocG9zX2Nzcyk7CiAJCQkJY29u
dGludWU7CiAJCQl9CkBAIC0xMTY0LDYgKzEyMDcsMTQgQEAgc3RhdGljIHZvaWQgdXBkYXRl
X3Rhc2tzX2NwdW1hc2soc3RydWN0IGNwdXNldCAqY3MpCiAJc3RydWN0IGNzc190YXNrX2l0
ZXIgaXQ7CiAJc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrOwogCisJLyoKKwkgKiBUT0RPOiBX
aXRoIGNwdXNldCBwYXJ0aXRpb24gdGhhdCB0YWtlcyBDUFVzIGF3YXkgZnJvbSB0aGUgdG9w
CisJICogY3B1c2V0LCB3ZSBtYXkgd2FudCB0byBwcm9wZXJseSBhZGp1c3QgdGhlIGNwdXNf
YWxsb3dlZCBtYXNrIG9mCisJICogdGFza3MgaW4gdGhlIHRvcCBjcHVzZXQgYXMgd2VsbC4K
KwkgKi8KKwlpZiAoY3MgPT0gJnRvcF9jcHVzZXQpCisJCXJldHVybjsKKwogCWNzc190YXNr
X2l0ZXJfc3RhcnQoJmNzLT5jc3MsIDAsICZpdCk7CiAJd2hpbGUgKCh0YXNrID0gY3NzX3Rh
c2tfaXRlcl9uZXh0KCZpdCkpKQogCQlzZXRfY3B1c19hbGxvd2VkX3B0cih0YXNrLCBjcy0+
ZWZmZWN0aXZlX2NwdXMpOwpAQCAtMTIwMywxMyArMTI1NCwxNSBAQCBlbnVtIHN1YnBhcnRz
X2NtZCB7CiAJcGFydGNtZF91cGRhdGUsCQkvKiBVcGRhdGUgcGFyZW50J3Mgc3VicGFydHNf
Y3B1cyAqLwogfTsKIAorc3RhdGljIGludCB1cGRhdGVfZmxhZyhjcHVzZXRfZmxhZ2JpdHNf
dCBiaXQsIHN0cnVjdCBjcHVzZXQgKmNzLAorCQkgICAgICAgaW50IHR1cm5pbmdfb24pOwog
LyoqCiAgKiB1cGRhdGVfcGFyZW50X3N1YnBhcnRzX2NwdW1hc2sgLSB1cGRhdGUgc3VicGFy
dHNfY3B1cyBtYXNrIG9mIHBhcmVudCBjcHVzZXQKICAqIEBjcHVzZXQ6ICBUaGUgY3B1c2V0
IHRoYXQgcmVxdWVzdHMgY2hhbmdlIGluIHBhcnRpdGlvbiByb290IHN0YXRlCiAgKiBAY21k
OiAgICAgUGFydGl0aW9uIHJvb3Qgc3RhdGUgY2hhbmdlIGNvbW1hbmQKICAqIEBuZXdtYXNr
OiBPcHRpb25hbCBuZXcgY3B1bWFzayBmb3IgcGFydGNtZF91cGRhdGUKICAqIEB0bXA6ICAg
ICBUZW1wb3JhcnkgYWRkbWFzayBhbmQgZGVsbWFzawotICogUmV0dXJuOiAgIDAsIDEgb3Ig
YW4gZXJyb3IgY29kZQorICogUmV0dXJuOiAgIDAgb3IgYSBwYXJ0aXRpb24gcm9vdCBzdGF0
ZSBlcnJvciBjb2RlCiAgKgogICogRm9yIHBhcnRjbWRfZW5hYmxlLCB0aGUgY3B1c2V0IGlz
IGJlaW5nIHRyYW5zZm9ybWVkIGZyb20gYSBub24tcGFydGl0aW9uCiAgKiByb290IHRvIGEg
cGFydGl0aW9uIHJvb3QuIFRoZSBjcHVzX2FsbG93ZWQgbWFzayBvZiB0aGUgZ2l2ZW4gY3B1
c2V0IHdpbGwKQEAgLTEyMTcsNDMgKzEyNzAsMzIgQEAgZW51bSBzdWJwYXJ0c19jbWQgewog
ICogZWZmZWN0aXZlX2NwdXMuIFRoZSBmdW5jdGlvbiB3aWxsIHJldHVybiAwIGlmIGFsbCB0
aGUgQ1BVcyBsaXN0ZWQgaW4KICAqIGNwdXNfYWxsb3dlZCBjYW4gYmUgZ3JhbnRlZCBvciBh
biBlcnJvciBjb2RlIHdpbGwgYmUgcmV0dXJuZWQuCiAgKgotICogRm9yIHBhcnRjbWRfZGlz
YWJsZSwgdGhlIGNwdXNldCBpcyBiZWluZyB0cmFuc29mcm1lZCBmcm9tIGEgcGFydGl0aW9u
CisgKiBGb3IgcGFydGNtZF9kaXNhYmxlLCB0aGUgY3B1c2V0IGlzIGJlaW5nIHRyYW5zZm9y
bWVkIGZyb20gYSBwYXJ0aXRpb24KICAqIHJvb3QgYmFjayB0byBhIG5vbi1wYXJ0aXRpb24g
cm9vdC4gQW55IENQVXMgaW4gY3B1c19hbGxvd2VkIHRoYXQgYXJlIGluCiAgKiBwYXJlbnQn
cyBzdWJwYXJ0c19jcHVzIHdpbGwgYmUgdGFrZW4gYXdheSBmcm9tIHRoYXQgY3B1bWFzayBh
bmQgcHV0IGJhY2sKLSAqIGludG8gcGFyZW50J3MgZWZmZWN0aXZlX2NwdXMuIDAgc2hvdWxk
IGFsd2F5cyBiZSByZXR1cm5lZC4KKyAqIGludG8gcGFyZW50J3MgZWZmZWN0aXZlX2NwdXMu
IDAgd2lsbCBhbHdheXMgYmUgcmV0dXJuZWQuCiAgKgotICogRm9yIHBhcnRjbWRfdXBkYXRl
LCBpZiB0aGUgb3B0aW9uYWwgbmV3bWFzayBpcyBzcGVjaWZpZWQsIHRoZSBjcHUKLSAqIGxp
c3QgaXMgdG8gYmUgY2hhbmdlZCBmcm9tIGNwdXNfYWxsb3dlZCB0byBuZXdtYXNrLiBPdGhl
cndpc2UsCi0gKiBjcHVzX2FsbG93ZWQgaXMgYXNzdW1lZCB0byByZW1haW4gdGhlIHNhbWUu
IFRoZSBjcHVzZXQgc2hvdWxkIGVpdGhlcgotICogYmUgYSBwYXJ0aXRpb24gcm9vdCBvciBh
biBpbnZhbGlkIHBhcnRpdGlvbiByb290LiBUaGUgcGFydGl0aW9uIHJvb3QKLSAqIHN0YXRl
IG1heSBjaGFuZ2UgaWYgbmV3bWFzayBpcyBOVUxMIGFuZCBub25lIG9mIHRoZSByZXF1ZXN0
ZWQgQ1BVcyBjYW4KLSAqIGJlIGdyYW50ZWQgYnkgdGhlIHBhcmVudC4gVGhlIGZ1bmN0aW9u
IHdpbGwgcmV0dXJuIDEgaWYgY2hhbmdlcyB0bwotICogcGFyZW50J3Mgc3VicGFydHNfY3B1
cyBhbmQgZWZmZWN0aXZlX2NwdXMgaGFwcGVuIG9yIDAgb3RoZXJ3aXNlLgotICogRXJyb3Ig
Y29kZSBzaG91bGQgb25seSBiZSByZXR1cm5lZCB3aGVuIG5ld21hc2sgaXMgbm9uLU5VTEwu
CisgKiBGb3IgcGFydGNtZF91cGRhdGUsIGlmIHRoZSBvcHRpb25hbCBuZXdtYXNrIGlzIHNw
ZWNpZmllZCwgdGhlIGNwdSBsaXN0IGlzCisgKiB0byBiZSBjaGFuZ2VkIGZyb20gY3B1c19h
bGxvd2VkIHRvIG5ld21hc2suIE90aGVyd2lzZSwgY3B1c19hbGxvd2VkIGlzCisgKiBhc3N1
bWVkIHRvIHJlbWFpbiB0aGUgc2FtZS4gVGhlIGNwdXNldCBzaG91bGQgZWl0aGVyIGJlIGEg
dmFsaWQgb3IgaW52YWxpZAorICogcGFydGl0aW9uIHJvb3QuIFRoZSBwYXJ0aXRpb24gcm9v
dCBzdGF0ZSBtYXkgY2hhbmdlIGZyb20gdmFsaWQgdG8gaW52YWxpZAorICogb3IgdmljZSB2
ZXJzYS4gQW4gZXJyb3IgY29kZSB3aWxsIG9ubHkgYmUgcmV0dXJuZWQgaWYgdHJhbnNpdGlv
bmluZyBmcm9tCisgKiBpbnZhbGlkIHRvIHZhbGlkIHZpb2xhdGVzIHRoZSBleGNsdXNpdml0
eSBydWxlLgogICoKICAqIFRoZSBwYXJ0Y21kX2VuYWJsZSBhbmQgcGFydGNtZF9kaXNhYmxl
IGNvbW1hbmRzIGFyZSB1c2VkIGJ5CiAgKiB1cGRhdGVfcHJzdGF0ZSgpLiBUaGUgcGFydGNt
ZF91cGRhdGUgY29tbWFuZCBpcyB1c2VkIGJ5CiAgKiB1cGRhdGVfY3B1bWFza3NfaGllcigp
IHdpdGggbmV3bWFzayBOVUxMIGFuZCB1cGRhdGVfY3B1bWFzaygpIHdpdGgKICAqIG5ld21h
c2sgc2V0LgotICoKLSAqIFRoZSBjaGVja2luZyBpcyBtb3JlIHN0cmljdCB3aGVuIGVuYWJs
aW5nIHBhcnRpdGlvbiByb290IHRoYW4gdGhlCi0gKiBvdGhlciB0d28gY29tbWFuZHMuCi0g
KgotICogQmVjYXVzZSBvZiB0aGUgaW1wbGljaXQgY3B1IGV4Y2x1c2l2ZSBuYXR1cmUgb2Yg
YSBwYXJ0aXRpb24gcm9vdCwKLSAqIGNwdW1hc2sgY2hhbmdlcyB0aGF0IHZpb2xhdGVzIHRo
ZSBjcHUgZXhjbHVzaXZpdHkgcnVsZSB3aWxsIG5vdCBiZQotICogcGVybWl0dGVkIHdoZW4g
Y2hlY2tlZCBieSB2YWxpZGF0ZV9jaGFuZ2UoKS4gVGhlIHZhbGlkYXRlX2NoYW5nZSgpCi0g
KiBmdW5jdGlvbiB3aWxsIGFsc28gcHJldmVudCBhbnkgY2hhbmdlcyB0byB0aGUgY3B1IGxp
c3QgaWYgaXQgaXMgbm90Ci0gKiBhIHN1cGVyc2V0IG9mIGNoaWxkcmVuJ3MgY3B1IGxpc3Rz
LgogICovCi1zdGF0aWMgaW50IHVwZGF0ZV9wYXJlbnRfc3VicGFydHNfY3B1bWFzayhzdHJ1
Y3QgY3B1c2V0ICpjcHVzZXQsIGludCBjbWQsCitzdGF0aWMgaW50IHVwZGF0ZV9wYXJlbnRf
c3VicGFydHNfY3B1bWFzayhzdHJ1Y3QgY3B1c2V0ICpjcywgaW50IGNtZCwKIAkJCQkJICBz
dHJ1Y3QgY3B1bWFzayAqbmV3bWFzaywKIAkJCQkJICBzdHJ1Y3QgdG1wbWFza3MgKnRtcCkK
IHsKLQlzdHJ1Y3QgY3B1c2V0ICpwYXJlbnQgPSBwYXJlbnRfY3MoY3B1c2V0KTsKKwlzdHJ1
Y3QgY3B1c2V0ICpwYXJlbnQgPSBwYXJlbnRfY3MoY3MpOwogCWludCBhZGRpbmc7CS8qIE1v
dmluZyBjcHVzIGZyb20gZWZmZWN0aXZlX2NwdXMgdG8gc3VicGFydHNfY3B1cyAqLwogCWlu
dCBkZWxldGluZzsJLyogTW92aW5nIGNwdXMgZnJvbSBzdWJwYXJ0c19jcHVzIHRvIGVmZmVj
dGl2ZV9jcHVzICovCiAJaW50IG9sZF9wcnMsIG5ld19wcnM7Ci0JYm9vbCBwYXJ0X2Vycm9y
ID0gZmFsc2U7CS8qIFBhcnRpdGlvbiBlcnJvcj8gKi8KKwlpbnQgcGFydF9lcnJvciA9IFBF
UlJfTk9ORTsJLyogUGFydGl0aW9uIGVycm9yPyAqLwogCiAJcGVyY3B1X3J3c2VtX2Fzc2Vy
dF9oZWxkKCZjcHVzZXRfcndzZW0pOwogCkBAIC0xMjYyLDM5ICsxMzA0LDQxIEBAIHN0YXRp
YyBpbnQgdXBkYXRlX3BhcmVudF9zdWJwYXJ0c19jcHVtYXNrKHN0cnVjdCBjcHVzZXQgKmNw
dXNldCwgaW50IGNtZCwKIAkgKiBUaGUgbmV3IGNwdW1hc2ssIGlmIHByZXNlbnQsIG9yIHRo
ZSBjdXJyZW50IGNwdXNfYWxsb3dlZCBtdXN0CiAJICogbm90IGJlIGVtcHR5LgogCSAqLwot
CWlmICghaXNfcGFydGl0aW9uX3Jvb3QocGFyZW50KSB8fAotCSAgIChuZXdtYXNrICYmIGNw
dW1hc2tfZW1wdHkobmV3bWFzaykpIHx8Ci0JICAgKCFuZXdtYXNrICYmIGNwdW1hc2tfZW1w
dHkoY3B1c2V0LT5jcHVzX2FsbG93ZWQpKSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQkvKgot
CSAqIEVuYWJsaW5nIHBhcnRpdGlvbiByb290IGlzIG5vdCBhbGxvd2VkIGlmIHRoZXJlIGFy
ZSBvbmxpbmUgY2hpbGRyZW4uCi0JICovCi0JaWYgKChjbWQgPT0gcGFydGNtZF9lbmFibGUp
ICYmIGNzc19oYXNfb25saW5lX2NoaWxkcmVuKCZjcHVzZXQtPmNzcykpCi0JCXJldHVybiAt
RUJVU1k7CisJaWYgKCFpc19wYXJ0aXRpb25fdmFsaWQocGFyZW50KSkgeworCQlyZXR1cm4g
aXNfcGFydGl0aW9uX2ludmFsaWQocGFyZW50KQorCQkgICAgICAgPyBQRVJSX0lOVlBBUkVO
VCA6IFBFUlJfTk9UUEFSVDsKKwl9CisJaWYgKChuZXdtYXNrICYmIGNwdW1hc2tfZW1wdHko
bmV3bWFzaykpIHx8CisJICAgKCFuZXdtYXNrICYmIGNwdW1hc2tfZW1wdHkoY3MtPmNwdXNf
YWxsb3dlZCkpKQorCQlyZXR1cm4gUEVSUl9DUFVTRU1QVFk7CiAKIAlhZGRpbmcgPSBkZWxl
dGluZyA9IGZhbHNlOwotCW9sZF9wcnMgPSBuZXdfcHJzID0gY3B1c2V0LT5wYXJ0aXRpb25f
cm9vdF9zdGF0ZTsKKwlvbGRfcHJzID0gbmV3X3BycyA9IGNzLT5wYXJ0aXRpb25fcm9vdF9z
dGF0ZTsKIAlpZiAoY21kID09IHBhcnRjbWRfZW5hYmxlKSB7CiAJCS8qCiAJCSAqIEVuYWJs
aW5nIHBhcnRpdGlvbiByb290IGlzIG5vdCBhbGxvd2VkIGlmIGNwdXNfYWxsb3dlZAogCQkg
KiBkb2Vzbid0IG92ZXJsYXAgcGFyZW50J3MgY3B1c19hbGxvd2VkLgogCQkgKi8KLQkJaWYg
KCFjcHVtYXNrX2ludGVyc2VjdHMoY3B1c2V0LT5jcHVzX2FsbG93ZWQsIHBhcmVudC0+Y3B1
c19hbGxvd2VkKSkKLQkJCXJldHVybiAtRUlOVkFMOworCQlpZiAoIWNwdW1hc2tfaW50ZXJz
ZWN0cyhjcy0+Y3B1c19hbGxvd2VkLCBwYXJlbnQtPmNwdXNfYWxsb3dlZCkpCisJCQlyZXR1
cm4gUEVSUl9JTlZDUFVTOwogCiAJCS8qCiAJCSAqIEEgcGFyZW50IGNhbiBiZSBsZWZ0IHdp
dGggbm8gQ1BVIGFzIGxvbmcgYXMgdGhlcmUgaXMgbm8KIAkJICogdGFzayBkaXJlY3RseSBh
c3NvY2lhdGVkIHdpdGggdGhlIHBhcmVudCBwYXJ0aXRpb24uCiAJCSAqLwotCQlpZiAocGFy
dGl0aW9uX2lzX3BvcHVsYXRlZChwYXJlbnQsIGNwdXNldCkgJiYKLQkJICAgIGNwdW1hc2tf
c3Vic2V0KHBhcmVudC0+ZWZmZWN0aXZlX2NwdXMsIGNwdXNldC0+Y3B1c19hbGxvd2VkKSkK
LQkJCXJldHVybiAtRUlOVkFMOworCQlpZiAocGFydGl0aW9uX2lzX3BvcHVsYXRlZChwYXJl
bnQsIGNzKSAmJgorCQkgICAhY3B1bWFza19pbnRlcnNlY3RzKGNzLT5jcHVzX2FsbG93ZWQs
IHBhcmVudC0+ZWZmZWN0aXZlX2NwdXMpKQorCQkJcmV0dXJuIFBFUlJfTk9DUFVTOwogCi0J
CWNwdW1hc2tfY29weSh0bXAtPmFkZG1hc2ssIGNwdXNldC0+Y3B1c19hbGxvd2VkKTsKKwkJ
Y3B1bWFza19jb3B5KHRtcC0+YWRkbWFzaywgY3MtPmNwdXNfYWxsb3dlZCk7CiAJCWFkZGlu
ZyA9IHRydWU7CiAJfSBlbHNlIGlmIChjbWQgPT0gcGFydGNtZF9kaXNhYmxlKSB7Ci0JCWRl
bGV0aW5nID0gY3B1bWFza19hbmQodG1wLT5kZWxtYXNrLCBjcHVzZXQtPmNwdXNfYWxsb3dl
ZCwKKwkJLyoKKwkJICogTmVlZCB0byByZW1vdmUgY3B1cyBmcm9tIHBhcmVudCdzIHN1YnBh
cnRzX2NwdXMgZm9yIHZhbGlkCisJCSAqIHBhcnRpdGlvbiByb290LgorCQkgKi8KKwkJZGVs
ZXRpbmcgPSAhaXNfcHJzX2ludmFsaWQob2xkX3BycykgJiYKKwkJCSAgIGNwdW1hc2tfYW5k
KHRtcC0+ZGVsbWFzaywgY3MtPmNwdXNfYWxsb3dlZCwKIAkJCQkgICAgICAgcGFyZW50LT5z
dWJwYXJ0c19jcHVzKTsKIAl9IGVsc2UgaWYgKG5ld21hc2spIHsKIAkJLyoKQEAgLTEzMDYs
NyArMTM1MCw3IEBAIHN0YXRpYyBpbnQgdXBkYXRlX3BhcmVudF9zdWJwYXJ0c19jcHVtYXNr
KHN0cnVjdCBjcHVzZXQgKmNwdXNldCwgaW50IGNtZCwKIAkJICogYWRkbWFzayA9IG5ld21h
c2sgJiBwYXJlbnQtPmNwdXNfYWxsb3dlZAogCQkgKgkJICAgICAmIH5wYXJlbnQtPnN1YnBh
cnRzX2NwdXMKIAkJICovCi0JCWNwdW1hc2tfYW5kbm90KHRtcC0+ZGVsbWFzaywgY3B1c2V0
LT5jcHVzX2FsbG93ZWQsIG5ld21hc2spOworCQljcHVtYXNrX2FuZG5vdCh0bXAtPmRlbG1h
c2ssIGNzLT5jcHVzX2FsbG93ZWQsIG5ld21hc2spOwogCQlkZWxldGluZyA9IGNwdW1hc2tf
YW5kKHRtcC0+ZGVsbWFzaywgdG1wLT5kZWxtYXNrLAogCQkJCSAgICAgICBwYXJlbnQtPnN1
YnBhcnRzX2NwdXMpOwogCkBAIC0xMzE3LDc3ICsxMzYxLDg1IEBAIHN0YXRpYyBpbnQgdXBk
YXRlX3BhcmVudF9zdWJwYXJ0c19jcHVtYXNrKHN0cnVjdCBjcHVzZXQgKmNwdXNldCwgaW50
IGNtZCwKIAkJICogTWFrZSBwYXJ0aXRpb24gaW52YWxpZCBpZiBwYXJlbnQncyBlZmZlY3Rp
dmVfY3B1cyBjb3VsZAogCQkgKiBiZWNvbWUgZW1wdHkgYW5kIHRoZXJlIGFyZSB0YXNrcyBp
biB0aGUgcGFyZW50LgogCQkgKi8KLQkJcGFydF9lcnJvciA9IHBhcnRpdGlvbl9pc19wb3B1
bGF0ZWQocGFyZW50LCBjcHVzZXQpICYmCi0JCQljcHVtYXNrX3N1YnNldChwYXJlbnQtPmVm
ZmVjdGl2ZV9jcHVzLCB0bXAtPmFkZG1hc2spICYmCi0JCQkhY3B1bWFza19pbnRlcnNlY3Rz
KHRtcC0+ZGVsbWFzaywgY3B1X2FjdGl2ZV9tYXNrKTsKLQotCQlpZiAoKFJFQURfT05DRShj
cHVzZXQtPnByc19lcnIpID09IFBFUlJfTk9ORSkgJiYgcGFydF9lcnJvcikKLQkJCVdSSVRF
X09OQ0UoY3B1c2V0LT5wcnNfZXJyLCBQRVJSX0lOVkNQVVMpOworCQlpZiAoYWRkaW5nICYm
IHBhcnRpdGlvbl9pc19wb3B1bGF0ZWQocGFyZW50LCBjcykgJiYKKwkJICAgIGNwdW1hc2tf
c3Vic2V0KHBhcmVudC0+ZWZmZWN0aXZlX2NwdXMsIHRtcC0+YWRkbWFzaykgJiYKKwkJICAg
ICFjcHVtYXNrX2ludGVyc2VjdHModG1wLT5kZWxtYXNrLCBjcHVfYWN0aXZlX21hc2spKSB7
CisJCQlwYXJ0X2Vycm9yID0gUEVSUl9OT0NQVVM7CisJCQlhZGRpbmcgPSBmYWxzZTsKKwkJ
CWRlbGV0aW5nID0gY3B1bWFza19hbmQodG1wLT5kZWxtYXNrLCBjcy0+Y3B1c19hbGxvd2Vk
LAorCQkJCQkgICAgICAgcGFyZW50LT5zdWJwYXJ0c19jcHVzKTsKKwkJfQogCX0gZWxzZSB7
CiAJCS8qCiAJCSAqIHBhcnRjbWRfdXBkYXRlIHcvbyBuZXdtYXNrOgogCQkgKgotCQkgKiBh
ZGRtYXNrID0gY3B1c19hbGxvd2VkICYgcGFyZW50LT5lZmZlY3RpdmVfY3B1cwotCQkgKgot
CQkgKiBUaGlzIGdldHMgaW52b2tlZCBlaXRoZXIgZHVlIHRvIGEgaG90cGx1ZyBldmVudCBv
cgotCQkgKiBmcm9tIHVwZGF0ZV9jcHVtYXNrc19oaWVyKCkgd2hlcmUgd2UgY2FuJ3QgcmV0
dXJuIGFuCi0JCSAqIGVycm9yLiBUaGlzIGNhbiBjYXVzZSBhIHBhcnRpdGlvbiByb290IHRv
IGJlY29tZSBpbnZhbGlkCi0JCSAqIGluIHRoZSBjYXNlIG9mIGEgaG90cGx1Zy4KKwkJICog
ZGVsbWFzayA9IGNwdXNfYWxsb3dlZCAmIHBhcmVudC0+c3VicGFydHNfY3B1cworCQkgKiBh
ZGRtYXNrID0gY3B1c19hbGxvd2VkICYgcGFyZW50LT5jcHVzX2FsbG93ZWQKKwkJICoJCQkg
ICYgfnBhcmVudC0+c3VicGFydHNfY3B1cwogCQkgKgorCQkgKiBUaGlzIGdldHMgaW52b2tl
ZCBlaXRoZXIgZHVlIHRvIGEgaG90cGx1ZyBldmVudCBvciBmcm9tCisJCSAqIHVwZGF0ZV9j
cHVtYXNrc19oaWVyKCkuIFRoaXMgY2FuIGNhdXNlIHRoZSBzdGF0ZSBvZiBhCisJCSAqIHBh
cnRpdGlvbiByb290IHRvIHRyYW5zaXRpb24gZnJvbSB2YWxpZCB0byBpbnZhbGlkIG9yIHZp
Y2UKKwkJICogdmVyc2EuIFNvIHdlIHN0aWxsIG5lZWQgdG8gY29tcHV0ZSB0aGUgYWRkbWFz
ayBhbmQgZGVsbWFzay4KKwogCQkgKiBBIHBhcnRpdGlvbiBlcnJvciBoYXBwZW5zIHdoZW46
CiAJCSAqIDEpIENwdXNldCBpcyB2YWxpZCBwYXJ0aXRpb24sIGJ1dCBwYXJlbnQgZG9lcyBu
b3QgZGlzdHJpYnV0ZQogCQkgKiAgICBvdXQgYW55IENQVXMuCiAJCSAqIDIpIFBhcmVudCBo
YXMgdGFza3MgYW5kIGFsbCBpdHMgZWZmZWN0aXZlIENQVXMgd2lsbCBoYXZlCiAJCSAqICAg
IHRvIGJlIGRpc3RyaWJ1dGVkIG91dC4KIAkJICovCi0JCWFkZGluZyA9IGNwdW1hc2tfYW5k
KHRtcC0+YWRkbWFzaywgY3B1c2V0LT5jcHVzX2FsbG93ZWQsCi0JCQkJICAgICBwYXJlbnQt
PmVmZmVjdGl2ZV9jcHVzKTsKLQkJcGFydF9lcnJvciA9IChpc19wYXJ0aXRpb25fcm9vdChj
cHVzZXQpICYmCi0JCQkgICAgICAhcGFyZW50LT5ucl9zdWJwYXJ0c19jcHVzKSB8fAotCQkJ
ICAgICAoY3B1bWFza19lcXVhbChwYXJlbnQtPmVmZmVjdGl2ZV9jcHVzLCB0bXAtPmFkZG1h
c2spICYmCi0JCQkgICAgICBwYXJ0aXRpb25faXNfcG9wdWxhdGVkKHBhcmVudCwgY3B1c2V0
KSk7CisJCWNwdW1hc2tfYW5kKHRtcC0+YWRkbWFzaywgY3MtPmNwdXNfYWxsb3dlZCwKKwkJ
CQkJICBwYXJlbnQtPmNwdXNfYWxsb3dlZCk7CisJCWFkZGluZyA9IGNwdW1hc2tfYW5kbm90
KHRtcC0+YWRkbWFzaywgdG1wLT5hZGRtYXNrLAorCQkJCQlwYXJlbnQtPnN1YnBhcnRzX2Nw
dXMpOworCQlpZiAoKGlzX3BhcnRpdGlvbl92YWxpZChjcykgJiYgIXBhcmVudC0+bnJfc3Vi
cGFydHNfY3B1cykgfHwKKwkJICAgIChhZGRpbmcgJiYKKwkJICAgICBjcHVtYXNrX3N1YnNl
dChwYXJlbnQtPmVmZmVjdGl2ZV9jcHVzLCB0bXAtPmFkZG1hc2spICYmCisJCSAgICAgcGFy
dGl0aW9uX2lzX3BvcHVsYXRlZChwYXJlbnQsIGNzKSkpIHsKKwkJCXBhcnRfZXJyb3IgPSBQ
RVJSX05PQ1BVUzsKKwkJCWFkZGluZyA9IGZhbHNlOworCQl9CiAKLQkJaWYgKGlzX3BhcnRp
dGlvbl9yb290KGNwdXNldCkgJiYgcGFydF9lcnJvcikKLQkJCVdSSVRFX09OQ0UoY3B1c2V0
LT5wcnNfZXJyLCBQRVJSX05PQ1BVUyk7CisJCWlmIChwYXJ0X2Vycm9yICYmIGlzX3BhcnRp
dGlvbl92YWxpZChjcykgJiYKKwkJICAgIHBhcmVudC0+bnJfc3VicGFydHNfY3B1cykKKwkJ
CWRlbGV0aW5nID0gY3B1bWFza19hbmQodG1wLT5kZWxtYXNrLCBjcy0+Y3B1c19hbGxvd2Vk
LAorCQkJCQkgICAgICAgcGFyZW50LT5zdWJwYXJ0c19jcHVzKTsKIAl9CisJaWYgKHBhcnRf
ZXJyb3IpCisJCVdSSVRFX09OQ0UoY3MtPnByc19lcnIsIHBhcnRfZXJyb3IpOwogCiAJaWYg
KGNtZCA9PSBwYXJ0Y21kX3VwZGF0ZSkgewogCQkvKgotCQkgKiBDaGVjayBmb3IgcG9zc2li
bGUgdHJhbnNpdGlvbiBiZXR3ZWVuIFBSU19FUlJPUiBhbmQKLQkJICogUFJTX0VOQUJMRUQv
UFJTX0lTT0xBVEVELgorCQkgKiBDaGVjayBmb3IgcG9zc2libGUgdHJhbnNpdGlvbiBiZXR3
ZWVuIHZhbGlkIGFuZCBpbnZhbGlkCisJCSAqIHBhcnRpdGlvbiByb290LgogCQkgKi8KLQkJ
c3dpdGNoIChjcHVzZXQtPnBhcnRpdGlvbl9yb290X3N0YXRlKSB7Ci0JCWNhc2UgUFJTX0VO
QUJMRUQ6CisJCXN3aXRjaCAoY3MtPnBhcnRpdGlvbl9yb290X3N0YXRlKSB7CisJCWNhc2Ug
UFJTX1JPT1Q6CiAJCWNhc2UgUFJTX0lTT0xBVEVEOgogCQkJaWYgKHBhcnRfZXJyb3IpCi0J
CQkJbmV3X3BycyA9IFBSU19FUlJPUjsKKwkJCQluZXdfcHJzID0gLW9sZF9wcnM7CiAJCQli
cmVhazsKLQkJY2FzZSBQUlNfRVJST1I6Ci0JCQlpZiAocGFydF9lcnJvcikKLQkJCQlicmVh
azsKLQkJCWlmIChpc19zY2hlZF9sb2FkX2JhbGFuY2UoY3B1c2V0KSkKLQkJCQluZXdfcHJz
ID0gUFJTX0VOQUJMRUQ7Ci0JCQllbHNlCi0JCQkJbmV3X3BycyA9IFBSU19JU09MQVRFRDsK
KwkJY2FzZSBQUlNfSU5WQUxJRF9ST09UOgorCQljYXNlIFBSU19JTlZBTElEX0lTT0xBVEVE
OgorCQkJaWYgKCFwYXJ0X2Vycm9yKQorCQkJCW5ld19wcnMgPSAtb2xkX3ByczsKIAkJCWJy
ZWFrOwogCQl9CiAJfQogCi0JaWYgKChvbGRfcHJzID09IFBSU19FUlJPUikgJiYgKG5ld19w
cnMgPT0gUFJTX0VSUk9SKSkKLQkJcmV0dXJuIDA7CS8qIE5vdGhpbmcgbmVlZCB0byBiZSBk
b25lICovCi0KLQlpZiAobmV3X3BycyA9PSBQUlNfRVJST1IpIHsKLQkJLyoKLQkJICogUmVt
b3ZlIGFsbCBpdHMgY3B1cyBmcm9tIHBhcmVudCdzIHN1YnBhcnRzX2NwdXMuCi0JCSAqLwot
CQlhZGRpbmcgPSBmYWxzZTsKLQkJZGVsZXRpbmcgPSBjcHVtYXNrX2FuZCh0bXAtPmRlbG1h
c2ssIGNwdXNldC0+Y3B1c19hbGxvd2VkLAotCQkJCSAgICAgICBwYXJlbnQtPnN1YnBhcnRz
X2NwdXMpOwotCX0KLQogCWlmICghYWRkaW5nICYmICFkZWxldGluZyAmJiAobmV3X3BycyA9
PSBvbGRfcHJzKSkKIAkJcmV0dXJuIDA7CiAKKwkvKgorCSAqIFRyYW5zaXRpb25pbmcgZnJv
bSBpbnZhbGlkIHRvIHZhbGlkIChwYXJ0Y21kX3VwZGF0ZSkgbWF5IHJlcXVpcmUKKwkgKiBz
ZXR0aW5nIENTX0NQVV9FWENMVVNJVkUgYW5kIGNsZWFyaW5nIENTX1NDSEVEX0xPQURfQkFM
QU5DRSBsYXRlci4KKwkgKi8KKwlpZiAoKG9sZF9wcnMgIT0gbmV3X3BycykgJiYgaXNfcHJz
X2ludmFsaWQob2xkX3BycykpIHsKKwkJaWYgKCFpc19jcHVfZXhjbHVzaXZlKGNzKSAmJgor
CQkgICAgKHVwZGF0ZV9mbGFnKENTX0NQVV9FWENMVVNJVkUsIGNzLCAxKSA8IDApKQorCQkJ
cmV0dXJuIFBFUlJfTk9URVhDTDsKKwl9CisKIAkvKgogCSAqIENoYW5nZSB0aGUgcGFyZW50
J3Mgc3VicGFydHNfY3B1cy4KIAkgKiBOZXdseSBhZGRlZCBDUFVzIHdpbGwgYmUgcmVtb3Zl
ZCBmcm9tIGVmZmVjdGl2ZV9jcHVzIGFuZApAQCAtMTQxNCwxMiArMTQ2NiwyNSBAQCBzdGF0
aWMgaW50IHVwZGF0ZV9wYXJlbnRfc3VicGFydHNfY3B1bWFzayhzdHJ1Y3QgY3B1c2V0ICpj
cHVzZXQsIGludCBjbWQsCiAJcGFyZW50LT5ucl9zdWJwYXJ0c19jcHVzID0gY3B1bWFza193
ZWlnaHQocGFyZW50LT5zdWJwYXJ0c19jcHVzKTsKIAogCWlmIChvbGRfcHJzICE9IG5ld19w
cnMpCi0JCWNwdXNldC0+cGFydGl0aW9uX3Jvb3Rfc3RhdGUgPSBuZXdfcHJzOworCQljcy0+
cGFydGl0aW9uX3Jvb3Rfc3RhdGUgPSBuZXdfcHJzOwogCiAJc3Bpbl91bmxvY2tfaXJxKCZj
YWxsYmFja19sb2NrKTsKLQlub3RpZnlfcGFydGl0aW9uX2NoYW5nZShjcHVzZXQsIG9sZF9w
cnMsIG5ld19wcnMpOwogCi0JcmV0dXJuIGNtZCA9PSBwYXJ0Y21kX3VwZGF0ZTsKKwlpZiAo
YWRkaW5nIHx8IGRlbGV0aW5nKQorCQl1cGRhdGVfdGFza3NfY3B1bWFzayhwYXJlbnQpOwor
CisJLyoKKwkgKiBTZXQgb3IgY2xlYXIgQ1NfU0NIRURfTE9BRF9CQUxBTkNFIHdoZW4gcGFy
dGNtZF91cGRhdGUsIGlmIG5lY2Vzc2FyeS4KKwkgKiByZWJ1aWxkX3NjaGVkX2RvbWFpbnNf
bG9ja2VkKCkgbWF5IGJlIGNhbGxlZC4KKwkgKi8KKwlpZiAoKG9sZF9wcnMgIT0gbmV3X3By
cykgJiYgKGNtZCA9PSBwYXJ0Y21kX3VwZGF0ZSkpIHsKKwkJaWYgKG9sZF9wcnMgPT0gUFJT
X0lTT0xBVEVEKQorCQkJdXBkYXRlX2ZsYWcoQ1NfU0NIRURfTE9BRF9CQUxBTkNFLCBjcywg
MSk7CisJCWVsc2UgaWYgKG5ld19wcnMgPT0gUFJTX0lTT0xBVEVEKQorCQkJdXBkYXRlX2Zs
YWcoQ1NfU0NIRURfTE9BRF9CQUxBTkNFLCBjcywgMCk7CisJfQorCW5vdGlmeV9wYXJ0aXRp
b25fY2hhbmdlKGNzLCBvbGRfcHJzKTsKKwlyZXR1cm4gMDsKIH0KIAogLyoKQEAgLTE0NTcs
NyArMTUyMiw3IEBAIHN0YXRpYyB2b2lkIHVwZGF0ZV9jcHVtYXNrc19oaWVyKHN0cnVjdCBj
cHVzZXQgKmNzLCBzdHJ1Y3QgdG1wbWFza3MgKnRtcCwKIAkJICogb3V0IGFsbCBpdHMgQ1BV
cy4KIAkJICovCiAJCWlmIChpc19pbl92Ml9tb2RlKCkgJiYgY3B1bWFza19lbXB0eSh0bXAt
Pm5ld19jcHVzKSkgewotCQkJaWYgKGlzX3BhcnRpdGlvbl9yb290KGNwKSAmJgorCQkJaWYg
KGlzX3BhcnRpdGlvbl92YWxpZChjcCkgJiYKIAkJCSAgICBjcHVtYXNrX2VxdWFsKGNwLT5j
cHVzX2FsbG93ZWQsIGNwLT5zdWJwYXJ0c19jcHVzKSkKIAkJCQlnb3RvIHVwZGF0ZV9wYXJl
bnRfc3VicGFydHM7CiAKQEAgLTE0NzQsNyArMTUzOSw3IEBAIHN0YXRpYyB2b2lkIHVwZGF0
ZV9jcHVtYXNrc19oaWVyKHN0cnVjdCBjcHVzZXQgKmNzLCBzdHJ1Y3QgdG1wbWFza3MgKnRt
cCwKIAogCQkvKgogCQkgKiBTa2lwIHRoZSB3aG9sZSBzdWJ0cmVlIGlmIHRoZSBjcHVtYXNr
IHJlbWFpbnMgdGhlIHNhbWUKLQkJICogd2l0aCBubyBwYXJ0aXRpb24gcm9vdCBzdGF0ZSBh
bmQgZm9yY2UgZmxhZyBub3Qgc2V0LgorCQkgKiBhbmQgaGFzIG5vIHBhcnRpdGlvbiByb290
IHN0YXRlIGFuZCBmb3JjZSBmbGFnIG5vdCBzZXQuCiAJCSAqLwogCQlpZiAoIWNwLT5wYXJ0
aXRpb25fcm9vdF9zdGF0ZSAmJiAhZm9yY2UgJiYKIAkJICAgIGNwdW1hc2tfZXF1YWwodG1w
LT5uZXdfY3B1cywgY3AtPmVmZmVjdGl2ZV9jcHVzKSkgewpAQCAtMTQ5MiwyMSArMTU1Nywy
MSBAQCBzdGF0aWMgdm9pZCB1cGRhdGVfY3B1bWFza3NfaGllcihzdHJ1Y3QgY3B1c2V0ICpj
cywgc3RydWN0IHRtcG1hc2tzICp0bXAsCiAJCW9sZF9wcnMgPSBuZXdfcHJzID0gY3AtPnBh
cnRpdGlvbl9yb290X3N0YXRlOwogCQlpZiAoKGNwICE9IGNzKSAmJiBvbGRfcHJzKSB7CiAJ
CQlzd2l0Y2ggKHBhcmVudC0+cGFydGl0aW9uX3Jvb3Rfc3RhdGUpIHsKLQkJCWNhc2UgUFJT
X0VOQUJMRUQ6CisJCQljYXNlIFBSU19ST09UOgogCQkJY2FzZSBQUlNfSVNPTEFURUQ6CiAJ
CQkJdXBkYXRlX3BhcmVudCA9IHRydWU7CiAJCQkJYnJlYWs7CiAKLQkJCWNhc2UgUFJTX0RJ
U0FCTEVEOgotCQkJY2FzZSBQUlNfRVJST1I6CisJCQlkZWZhdWx0OgogCQkJCS8qCiAJCQkJ
ICogV2hlbiBwYXJlbnQgaXMgbm90IGEgcGFydGl0aW9uIHJvb3Qgb3IgaXMKIAkJCQkgKiBp
bnZhbGlkLCBjaGlsZCBwYXJ0aXRpb24gcm9vdHMgYmVjb21lCiAJCQkJICogaW52YWxpZCB0
b28uCiAJCQkJICovCi0JCQkJbmV3X3BycyA9IFBSU19FUlJPUjsKKwkJCQlpZiAoaXNfcGFy
dGl0aW9uX3ZhbGlkKGNwKSkKKwkJCQkJbmV3X3BycyA9IC1jcC0+cGFydGl0aW9uX3Jvb3Rf
c3RhdGU7CiAJCQkJV1JJVEVfT05DRShjcC0+cHJzX2VyciwKLQkJCQkJICAocGFyZW50LT5w
YXJ0aXRpb25fcm9vdF9zdGF0ZSA9PSBQUlNfRVJST1IpCisJCQkJCSAgIGlzX3BhcnRpdGlv
bl9pbnZhbGlkKHBhcmVudCkKIAkJCQkJICAgPyBQRVJSX0lOVlBBUkVOVCA6IFBFUlJfTk9U
UEFSVCk7CiAJCQkJYnJlYWs7CiAJCQl9CkBAIC0xNTE3LDI1ICsxNTgyLDI1IEBAIHN0YXRp
YyB2b2lkIHVwZGF0ZV9jcHVtYXNrc19oaWVyKHN0cnVjdCBjcHVzZXQgKmNzLCBzdHJ1Y3Qg
dG1wbWFza3MgKnRtcCwKIAkJcmN1X3JlYWRfdW5sb2NrKCk7CiAKIAkJaWYgKHVwZGF0ZV9w
YXJlbnQpIHsKLQkJCWlmICh1cGRhdGVfcGFyZW50X3N1YnBhcnRzX2NwdW1hc2soY3AsIHBh
cnRjbWRfdXBkYXRlLCBOVUxMLCB0bXApKQotCQkJCXVwZGF0ZV90YXNrc19jcHVtYXNrKHBh
cmVudCk7CisJCQl1cGRhdGVfcGFyZW50X3N1YnBhcnRzX2NwdW1hc2soY3AsIHBhcnRjbWRf
dXBkYXRlLCBOVUxMLAorCQkJCQkJICAgICAgIHRtcCk7CiAJCQkvKgotCQkJICogVGhlIGNw
dXNldCBwYXJ0aXRpb25fcm9vdF9zdGF0ZSBtYXkgYmUgY2hhbmdlZAotCQkJICogdG8gUFJT
X0VSUk9SLiBDYXB0dXJlIGl0LgorCQkJICogVGhlIGNwdXNldCBwYXJ0aXRpb25fcm9vdF9z
dGF0ZSBtYXkgYmVjb21lCisJCQkgKiBpbnZhbGlkLiBDYXB0dXJlIGl0LgogCQkJICovCiAJ
CQluZXdfcHJzID0gY3AtPnBhcnRpdGlvbl9yb290X3N0YXRlOwogCQl9CiAKIAkJc3Bpbl9s
b2NrX2lycSgmY2FsbGJhY2tfbG9jayk7CiAKLQkJaWYgKGNwLT5ucl9zdWJwYXJ0c19jcHVz
ICYmIChuZXdfcHJzIDw9IDApKSB7CisJCWlmIChjcC0+bnJfc3VicGFydHNfY3B1cyAmJiAh
aXNfcGFydGl0aW9uX3ZhbGlkKGNwKSkgewogCQkJLyoKIAkJCSAqIFB1dCBhbGwgYWN0aXZl
IHN1YnBhcnRzX2NwdXMgYmFjayB0byBlZmZlY3RpdmVfY3B1cy4KIAkJCSAqLwogCQkJY3B1
bWFza19vcih0bXAtPm5ld19jcHVzLCB0bXAtPm5ld19jcHVzLAogCQkJCSAgIGNwLT5zdWJw
YXJ0c19jcHVzKTsKIAkJCWNwdW1hc2tfYW5kKHRtcC0+bmV3X2NwdXMsIHRtcC0+bmV3X2Nw
dXMsCi0JCQkJICAgIGNwdV9hY3RpdmVfbWFzayk7CisJCQkJICAgY3B1X2FjdGl2ZV9tYXNr
KTsKIAkJCWNwLT5ucl9zdWJwYXJ0c19jcHVzID0gMDsKIAkJCWNwdW1hc2tfY2xlYXIoY3At
PnN1YnBhcnRzX2NwdXMpOwogCQl9CkBAIC0xNTUyLDcgKzE2MTcsOCBAQCBzdGF0aWMgdm9p
ZCB1cGRhdGVfY3B1bWFza3NfaGllcihzdHJ1Y3QgY3B1c2V0ICpjcywgc3RydWN0IHRtcG1h
c2tzICp0bXAsCiAKIAkJY3AtPnBhcnRpdGlvbl9yb290X3N0YXRlID0gbmV3X3ByczsKIAkJ
c3Bpbl91bmxvY2tfaXJxKCZjYWxsYmFja19sb2NrKTsKLQkJbm90aWZ5X3BhcnRpdGlvbl9j
aGFuZ2UoY3AsIG9sZF9wcnMsIG5ld19wcnMpOworCisJCW5vdGlmeV9wYXJ0aXRpb25fY2hh
bmdlKGNwLCBvbGRfcHJzKTsKIAogCQlXQVJOX09OKCFpc19pbl92Ml9tb2RlKCkgJiYKIAkJ
CSFjcHVtYXNrX2VxdWFsKGNwLT5jcHVzX2FsbG93ZWQsIGNwLT5lZmZlY3RpdmVfY3B1cykp
OwpAQCAtMTU2OCw3ICsxNjM0LDcgQEAgc3RhdGljIHZvaWQgdXBkYXRlX2NwdW1hc2tzX2hp
ZXIoc3RydWN0IGNwdXNldCAqY3MsIHN0cnVjdCB0bXBtYXNrcyAqdG1wLAogCQlpZiAoIWNw
dW1hc2tfZW1wdHkoY3AtPmNwdXNfYWxsb3dlZCkgJiYKIAkJICAgIGlzX3NjaGVkX2xvYWRf
YmFsYW5jZShjcCkgJiYKIAkJICAgKCFjZ3JvdXBfc3Vic3lzX29uX2RmbChjcHVzZXRfY2dy
cF9zdWJzeXMpIHx8Ci0JCSAgICBpc19wYXJ0aXRpb25fcm9vdChjcCkpKQorCQkgICAgaXNf
cGFydGl0aW9uX3ZhbGlkKGNwKSkpCiAJCQluZWVkX3JlYnVpbGRfc2NoZWRfZG9tYWlucyA9
IHRydWU7CiAKIAkJcmN1X3JlYWRfbG9jaygpOwpAQCAtMTU5MiwxMCArMTY1OCwxNSBAQCBz
dGF0aWMgdm9pZCB1cGRhdGVfc2libGluZ19jcHVtYXNrcyhzdHJ1Y3QgY3B1c2V0ICpwYXJl
bnQsIHN0cnVjdCBjcHVzZXQgKmNzLAogCXN0cnVjdCBjcHVzZXQgKnNpYmxpbmc7CiAJc3Ry
dWN0IGNncm91cF9zdWJzeXNfc3RhdGUgKnBvc19jc3M7CiAKKwlwZXJjcHVfcndzZW1fYXNz
ZXJ0X2hlbGQoJmNwdXNldF9yd3NlbSk7CisKIAkvKgogCSAqIENoZWNrIGFsbCBpdHMgc2li
bGluZ3MgYW5kIGNhbGwgdXBkYXRlX2NwdW1hc2tzX2hpZXIoKQogCSAqIGlmIHRoZWlyIHVz
ZV9wYXJlbnRfZWNwdXMgZmxhZyBpcyBzZXQgaW4gb3JkZXIgZm9yIHRoZW0KIAkgKiB0byB1
c2UgdGhlIHJpZ2h0IGVmZmVjdGl2ZV9jcHVzIHZhbHVlLgorCSAqCisJICogVGhlIHVwZGF0
ZV9jcHVtYXNrc19oaWVyKCkgZnVuY3Rpb24gbWF5IHNsZWVwLiBTbyB3ZSBoYXZlIHRvCisJ
ICogcmVsZWFzZSB0aGUgUkNVIHJlYWQgbG9jayBiZWZvcmUgY2FsbGluZyBpdC4KIAkgKi8K
IAlyY3VfcmVhZF9sb2NrKCk7CiAJY3B1c2V0X2Zvcl9lYWNoX2NoaWxkKHNpYmxpbmcsIHBv
c19jc3MsIHBhcmVudCkgewpAQCAtMTYwMyw4ICsxNjc0LDEzIEBAIHN0YXRpYyB2b2lkIHVw
ZGF0ZV9zaWJsaW5nX2NwdW1hc2tzKHN0cnVjdCBjcHVzZXQgKnBhcmVudCwgc3RydWN0IGNw
dXNldCAqY3MsCiAJCQljb250aW51ZTsKIAkJaWYgKCFzaWJsaW5nLT51c2VfcGFyZW50X2Vj
cHVzKQogCQkJY29udGludWU7CisJCWlmICghY3NzX3RyeWdldF9vbmxpbmUoJnNpYmxpbmct
PmNzcykpCisJCQljb250aW51ZTsKIAorCQlyY3VfcmVhZF91bmxvY2soKTsKIAkJdXBkYXRl
X2NwdW1hc2tzX2hpZXIoc2libGluZywgdG1wLCBmYWxzZSk7CisJCXJjdV9yZWFkX2xvY2so
KTsKKwkJY3NzX3B1dCgmc2libGluZy0+Y3NzKTsKIAl9CiAJcmN1X3JlYWRfdW5sb2NrKCk7
CiB9CkBAIC0xNjYyLDI3ICsxNzM4LDM1IEBAIHN0YXRpYyBpbnQgdXBkYXRlX2NwdW1hc2so
c3RydWN0IGNwdXNldCAqY3MsIHN0cnVjdCBjcHVzZXQgKnRyaWFsY3MsCiAjZW5kaWYKIAog
CWlmIChjcy0+cGFydGl0aW9uX3Jvb3Rfc3RhdGUpIHsKLQkJLyogQ3B1bWFzayBvZiBhIHBh
cnRpdGlvbiByb290IGNhbm5vdCBiZSBlbXB0eSAqLwotCQlpZiAoY3B1bWFza19lbXB0eSh0
cmlhbGNzLT5jcHVzX2FsbG93ZWQpKQotCQkJcmV0dXJuIC1FSU5WQUw7Ci0JCWlmICh1cGRh
dGVfcGFyZW50X3N1YnBhcnRzX2NwdW1hc2soY3MsIHBhcnRjbWRfdXBkYXRlLAotCQkJCQl0
cmlhbGNzLT5jcHVzX2FsbG93ZWQsICZ0bXApIDwgMCkKLQkJCXJldHVybiAtRUlOVkFMOwor
CQl1cGRhdGVfcGFyZW50X3N1YnBhcnRzX2NwdW1hc2soY3MsIHBhcnRjbWRfdXBkYXRlLAor
CQkJCQkgICAgICAgdHJpYWxjcy0+Y3B1c19hbGxvd2VkLCAmdG1wKTsKIAl9CiAKKwljb21w
dXRlX2VmZmVjdGl2ZV9jcHVtYXNrKHRyaWFsY3MtPmVmZmVjdGl2ZV9jcHVzLCB0cmlhbGNz
LAorCQkJCSAgcGFyZW50X2NzKGNzKSk7CiAJc3Bpbl9sb2NrX2lycSgmY2FsbGJhY2tfbG9j
ayk7CiAJY3B1bWFza19jb3B5KGNzLT5jcHVzX2FsbG93ZWQsIHRyaWFsY3MtPmNwdXNfYWxs
b3dlZCk7CiAKIAkvKgotCSAqIE1ha2Ugc3VyZSB0aGF0IHN1YnBhcnRzX2NwdXMgaXMgYSBz
dWJzZXQgb2YgY3B1c19hbGxvd2VkLgorCSAqIE1ha2Ugc3VyZSB0aGF0IHN1YnBhcnRzX2Nw
dXMsIGlmIG5vdCBlbXB0eSwgaXMgYSBzdWJzZXQgb2YKKwkgKiBjcHVzX2FsbG93ZWQuIENs
ZWFyIHN1YnBhcnRzX2NwdXMgaWYgdGhlcmUgaXMgYW4gZXJyb3Igb3IKKwkgKiBlbXB0eSBl
ZmZlY3RpdmUgY3B1cyB3aXRoIHRhc2tzLgogCSAqLwogCWlmIChjcy0+bnJfc3VicGFydHNf
Y3B1cykgewotCQljcHVtYXNrX2FuZChjcy0+c3VicGFydHNfY3B1cywgY3MtPnN1YnBhcnRz
X2NwdXMsCi0JCQkgICAgY3MtPmNwdXNfYWxsb3dlZCk7Ci0JCWNzLT5ucl9zdWJwYXJ0c19j
cHVzID0gY3B1bWFza193ZWlnaHQoY3MtPnN1YnBhcnRzX2NwdXMpOworCQlpZiAoY3MtPnBy
c19lcnIgfHwKKwkJICAgKHBhcnRpdGlvbl9pc19wb3B1bGF0ZWQoY3MsIE5VTEwpICYmCisJ
CSAgICBjcHVtYXNrX3N1YnNldCh0cmlhbGNzLT5lZmZlY3RpdmVfY3B1cywgY3MtPnN1YnBh
cnRzX2NwdXMpKSkgeworCQkJY3MtPm5yX3N1YnBhcnRzX2NwdXMgPSAwOworCQkJY3B1bWFz
a19jbGVhcihjcy0+c3VicGFydHNfY3B1cyk7CisJCX0gZWxzZSB7CisJCQljcHVtYXNrX2Fu
ZChjcy0+c3VicGFydHNfY3B1cywgY3MtPnN1YnBhcnRzX2NwdXMsCisJCQkJICAgIGNzLT5j
cHVzX2FsbG93ZWQpOworCQkJY3MtPm5yX3N1YnBhcnRzX2NwdXMgPSBjcHVtYXNrX3dlaWdo
dChjcy0+c3VicGFydHNfY3B1cyk7CisJCX0KIAl9CiAJc3Bpbl91bmxvY2tfaXJxKCZjYWxs
YmFja19sb2NrKTsKIAorCS8qIGVmZmVjdGl2ZV9jcHVzIHdpbGwgYmUgdXBkYXRlZCBoZXJl
ICovCiAJdXBkYXRlX2NwdW1hc2tzX2hpZXIoY3MsICZ0bXAsIGZhbHNlKTsKIAogCWlmIChj
cy0+cGFydGl0aW9uX3Jvb3Rfc3RhdGUpIHsKQEAgLTIwNTksMTYgKzIxNDMsMTcgQEAgc3Rh
dGljIGludCB1cGRhdGVfZmxhZyhjcHVzZXRfZmxhZ2JpdHNfdCBiaXQsIHN0cnVjdCBjcHVz
ZXQgKmNzLAogCXJldHVybiBlcnI7CiB9CiAKLS8qCi0gKiB1cGRhdGVfcHJzdGF0ZSAtIHVw
ZGF0ZSBwYXJ0aXRpdG9uX3Jvb3Rfc3RhdGUKLSAqIGNzOiB0aGUgY3B1c2V0IHRvIHVwZGF0
ZQotICogbmV3X3ByczogbmV3IHBhcnRpdGlvbiByb290IHN0YXRlCisvKioKKyAqIHVwZGF0
ZV9wcnN0YXRlIC0gdXBkYXRlIHBhcnRpdGlvbl9yb290X3N0YXRlCisgKiBAY3M6IHRoZSBj
cHVzZXQgdG8gdXBkYXRlCisgKiBAbmV3X3ByczogbmV3IHBhcnRpdGlvbiByb290IHN0YXRl
CisgKiBSZXR1cm46IDAgaWYgc3VjY2Vzc2Z1bCwgIT0gMCBpZiBlcnJvcgogICoKICAqIENh
bGwgd2l0aCBjcHVzZXRfcndzZW0gaGVsZC4KICAqLwogc3RhdGljIGludCB1cGRhdGVfcHJz
dGF0ZShzdHJ1Y3QgY3B1c2V0ICpjcywgaW50IG5ld19wcnMpCiB7Ci0JaW50IGVyciwgb2xk
X3BycyA9IGNzLT5wYXJ0aXRpb25fcm9vdF9zdGF0ZTsKKwlpbnQgZXJyID0gUEVSUl9OT05F
LCBvbGRfcHJzID0gY3MtPnBhcnRpdGlvbl9yb290X3N0YXRlOwogCWJvb2wgc2NoZWRfZG9t
YWluX3JlYnVpbHQgPSBmYWxzZTsKIAlzdHJ1Y3QgY3B1c2V0ICpwYXJlbnQgPSBwYXJlbnRf
Y3MoY3MpOwogCXN0cnVjdCB0bXBtYXNrcyB0bXBtYXNrOwpAQCAtMjA3NywyOCArMjE2Miwz
MyBAQCBzdGF0aWMgaW50IHVwZGF0ZV9wcnN0YXRlKHN0cnVjdCBjcHVzZXQgKmNzLCBpbnQg
bmV3X3BycykKIAkJcmV0dXJuIDA7CiAKIAkvKgotCSAqIENhbm5vdCBmb3JjZSBhIHBhcnRp
YWwgb3IgaW52YWxpZCBwYXJ0aXRpb24gcm9vdCB0byBhIGZ1bGwKLQkgKiBwYXJ0aXRpb24g
cm9vdC4KKwkgKiBGb3IgYSBwcmV2aW91c2x5IGludmFsaWQgcGFydGl0aW9uIHJvb3QsIGxl
YXZlIGl0IGF0IGJlaW5nCisJICogaW52YWxpZCBpZiBuZXdfcHJzIGlzIG5vdCAibWVtYmVy
Ii4KIAkgKi8KLQlpZiAobmV3X3BycyAmJiAob2xkX3BycyA9PSBQUlNfRVJST1IpKQotCQly
ZXR1cm4gLUVJTlZBTDsKKwlpZiAobmV3X3BycyAmJiBpc19wcnNfaW52YWxpZChvbGRfcHJz
KSkgeworCQljcy0+cGFydGl0aW9uX3Jvb3Rfc3RhdGUgPSAtbmV3X3ByczsKKwkJcmV0dXJu
IDA7CisJfQogCiAJaWYgKGFsbG9jX2NwdW1hc2tzKE5VTEwsICZ0bXBtYXNrKSkKIAkJcmV0
dXJuIC1FTk9NRU07CiAKLQllcnIgPSAtRUlOVkFMOwogCWlmICghb2xkX3BycykgewogCQkv
KgogCQkgKiBUdXJuaW5nIG9uIHBhcnRpdGlvbiByb290IHJlcXVpcmVzIHNldHRpbmcgdGhl
CiAJCSAqIENTX0NQVV9FWENMVVNJVkUgYml0IGltcGxpY2l0bHkgYXMgd2VsbCBhbmQgY3B1
c19hbGxvd2VkCi0JCSAqIGNhbm5vdCBiZSBOVUxMLgorCQkgKiBjYW5ub3QgYmUgZW1wdHku
CiAJCSAqLwotCQlpZiAoY3B1bWFza19lbXB0eShjcy0+Y3B1c19hbGxvd2VkKSkKKwkJaWYg
KGNwdW1hc2tfZW1wdHkoY3MtPmNwdXNfYWxsb3dlZCkpIHsKKwkJCWVyciA9IFBFUlJfQ1BV
U0VNUFRZOwogCQkJZ290byBvdXQ7CisJCX0KIAogCQllcnIgPSB1cGRhdGVfZmxhZyhDU19D
UFVfRVhDTFVTSVZFLCBjcywgMSk7Ci0JCWlmIChlcnIpCisJCWlmIChlcnIpIHsKKwkJCWVy
ciA9IFBFUlJfTk9URVhDTDsKIAkJCWdvdG8gb3V0OworCQl9CiAKIAkJZXJyID0gdXBkYXRl
X3BhcmVudF9zdWJwYXJ0c19jcHVtYXNrKGNzLCBwYXJ0Y21kX2VuYWJsZSwKIAkJCQkJCSAg
ICAgTlVMTCwgJnRtcG1hc2spOwpAQCAtMjEyMCwxNiArMjIxMCwxNiBAQCBzdGF0aWMgaW50
IHVwZGF0ZV9wcnN0YXRlKHN0cnVjdCBjcHVzZXQgKmNzLCBpbnQgbmV3X3BycykKIAkJICog
QSBjaGFuZ2UgaW4gbG9hZCBiYWxhbmNlIHN0YXRlIG9ubHksIG5vIGNoYW5nZSBpbiBjcHVt
YXNrcy4KIAkJICovCiAJCXVwZGF0ZV9mbGFnKENTX1NDSEVEX0xPQURfQkFMQU5DRSwgY3Ms
IChuZXdfcHJzICE9IFBSU19JU09MQVRFRCkpOwotCQllcnIgPSAwOworCQlzY2hlZF9kb21h
aW5fcmVidWlsdCA9IHRydWU7CiAJCWdvdG8gb3V0OwkvKiBTY2hlZCBkb21haW4gaXMgcmVi
dWlsdCBpbiB1cGRhdGVfZmxhZygpICovCiAJfSBlbHNlIHsKIAkJLyoKLQkJICogU3dpdGNo
IGJhY2sgdG8gbWVtYmVyIGlzIGFsd2F5cyBhbGxvd2VkIGV2ZW4gaWYgaXQKKwkJICogU3dp
dGNoaW5nIGJhY2sgdG8gbWVtYmVyIGlzIGFsd2F5cyBhbGxvd2VkIGV2ZW4gaWYgaXQKIAkJ
ICogZGlzYWJsZXMgY2hpbGQgcGFydGl0aW9ucy4KIAkJICovCi0JCWVyciA9IDA7CiAJCXVw
ZGF0ZV9wYXJlbnRfc3VicGFydHNfY3B1bWFzayhjcywgcGFydGNtZF9kaXNhYmxlLCBOVUxM
LAogCQkJCQkgICAgICAgJnRtcG1hc2spOworCiAJCS8qCiAJCSAqIElmIHRoZXJlIGFyZSBj
aGlsZCBwYXJ0aXRpb25zLCB0aGV5IHdpbGwgYWxsIGJlY29tZSBpbnZhbGlkLgogCQkgKi8K
QEAgLTIxNTEsMTIgKzIyNDEsNyBAQCBzdGF0aWMgaW50IHVwZGF0ZV9wcnN0YXRlKHN0cnVj
dCBjcHVzZXQgKmNzLCBpbnQgbmV3X3BycykKIAkJfQogCX0KIAotCS8qCi0JICogVXBkYXRl
IGNwdW1hc2sgb2YgcGFyZW50J3MgdGFza3MgZXhjZXB0IHdoZW4gaXQgaXMgdGhlIHRvcAot
CSAqIGNwdXNldCBhcyBzb21lIHN5c3RlbSBkYWVtb25zIGNhbm5vdCBiZSBtYXBwZWQgdG8g
b3RoZXIgQ1BVcy4KLQkgKi8KLQlpZiAocGFyZW50ICE9ICZ0b3BfY3B1c2V0KQotCQl1cGRh
dGVfdGFza3NfY3B1bWFzayhwYXJlbnQpOworCXVwZGF0ZV90YXNrc19jcHVtYXNrKHBhcmVu
dCk7CiAKIAlpZiAocGFyZW50LT5jaGlsZF9lY3B1c19jb3VudCkKIAkJdXBkYXRlX3NpYmxp
bmdfY3B1bWFza3MocGFyZW50LCBjcywgJnRtcG1hc2spOwpAQCAtMjE2NCwyMCArMjI0OSwy
NCBAQCBzdGF0aWMgaW50IHVwZGF0ZV9wcnN0YXRlKHN0cnVjdCBjcHVzZXQgKmNzLCBpbnQg
bmV3X3BycykKIAlpZiAoIXNjaGVkX2RvbWFpbl9yZWJ1aWx0KQogCQlyZWJ1aWxkX3NjaGVk
X2RvbWFpbnNfbG9ja2VkKCk7CiBvdXQ6Ci0JaWYgKCFlcnIpIHsKLQkJc3Bpbl9sb2NrX2ly
cSgmY2FsbGJhY2tfbG9jayk7Ci0JCWNzLT5wYXJ0aXRpb25fcm9vdF9zdGF0ZSA9IG5ld19w
cnM7Ci0JCXNwaW5fdW5sb2NrX2lycSgmY2FsbGJhY2tfbG9jayk7Ci0JCS8qCi0JCSAqIFVw
ZGF0ZSBjaGlsZCBjcHVzZXRzIHdoZW4gZGlzYWJsaW5nIHBhcnRpdGlvbi4KLQkJICovCi0J
CWlmIChuZXdfcHJzID09IFBSU19ESVNBQkxFRCAmJiAhbGlzdF9lbXB0eSgmY3MtPmNzcy5j
aGlsZHJlbikpCi0JCQl1cGRhdGVfY3B1bWFza3NfaGllcihjcywgJnRtcG1hc2ssIHRydWUp
OwotCQlub3RpZnlfcGFydGl0aW9uX2NoYW5nZShjcywgb2xkX3BycywgbmV3X3Bycyk7Ci0J
fQorCS8qCisJICogTWFrZSBwYXJ0aXRpb24gaW52YWxpZCBpZiBhbiBlcnJvciBoYXBwZW4K
KwkgKi8KKwlpZiAoZXJyKQorCQluZXdfcHJzID0gLW5ld19wcnM7CisJc3Bpbl9sb2NrX2ly
cSgmY2FsbGJhY2tfbG9jayk7CisJY3MtPnBhcnRpdGlvbl9yb290X3N0YXRlID0gbmV3X3By
czsKKwlzcGluX3VubG9ja19pcnEoJmNhbGxiYWNrX2xvY2spOworCS8qCisJICogVXBkYXRl
IGNoaWxkIGNwdXNldHMsIGlmIHByZXNlbnQuCisJICogRm9yY2UgdXBkYXRlIGlmIHN3aXRj
aGluZyBiYWNrIHRvIG1lbWJlci4KKwkgKi8KKwlpZiAoIWxpc3RfZW1wdHkoJmNzLT5jc3Mu
Y2hpbGRyZW4pKQorCQl1cGRhdGVfY3B1bWFza3NfaGllcihjcywgJnRtcG1hc2ssICFuZXdf
cHJzKTsKIAorCW5vdGlmeV9wYXJ0aXRpb25fY2hhbmdlKGNzLCBvbGRfcHJzKTsKIAlmcmVl
X2NwdW1hc2tzKE5VTEwsICZ0bXBtYXNrKTsKLQlyZXR1cm4gZXJyOworCXJldHVybiAwOwog
fQogCiAvKgpAQCAtMjM2MSw2ICsyNDUwLDcgQEAgc3RhdGljIHZvaWQgY3B1c2V0X2F0dGFj
aChzdHJ1Y3QgY2dyb3VwX3Rhc2tzZXQgKnRzZXQpCiAJY2dyb3VwX3Rhc2tzZXRfZmlyc3Qo
dHNldCwgJmNzcyk7CiAJY3MgPSBjc3NfY3MoY3NzKTsKIAorCWNwdXNfcmVhZF9sb2NrKCk7
CiAJcGVyY3B1X2Rvd25fd3JpdGUoJmNwdXNldF9yd3NlbSk7CiAKIAlndWFyYW50ZWVfb25s
aW5lX21lbXMoY3MsICZjcHVzZXRfYXR0YWNoX25vZGVtYXNrX3RvKTsKQEAgLTI0MTQsNiAr
MjUwNCw3IEBAIHN0YXRpYyB2b2lkIGNwdXNldF9hdHRhY2goc3RydWN0IGNncm91cF90YXNr
c2V0ICp0c2V0KQogCQl3YWtlX3VwKCZjcHVzZXRfYXR0YWNoX3dxKTsKIAogCXBlcmNwdV91
cF93cml0ZSgmY3B1c2V0X3J3c2VtKTsKKwljcHVzX3JlYWRfdW5sb2NrKCk7CiB9CiAKIC8q
IFRoZSB2YXJpb3VzIHR5cGVzIG9mIGZpbGVzIGFuZCBkaXJlY3RvcmllcyBpbiBhIGNwdXNl
dCBmaWxlIHN5c3RlbSAqLwpAQCAtMjY2OSwyNiArMjc2MCwzMiBAQCBzdGF0aWMgczY0IGNw
dXNldF9yZWFkX3M2NChzdHJ1Y3QgY2dyb3VwX3N1YnN5c19zdGF0ZSAqY3NzLCBzdHJ1Y3Qg
Y2Z0eXBlICpjZnQpCiBzdGF0aWMgaW50IHNjaGVkX3BhcnRpdGlvbl9zaG93KHN0cnVjdCBz
ZXFfZmlsZSAqc2VxLCB2b2lkICp2KQogewogCXN0cnVjdCBjcHVzZXQgKmNzID0gY3NzX2Nz
KHNlcV9jc3Moc2VxKSk7Ci0JY29uc3QgY2hhciAqZXJyLCAqdHlwZTsKKwljb25zdCBjaGFy
ICplcnIsICp0eXBlID0gTlVMTDsKIAogCXN3aXRjaCAoY3MtPnBhcnRpdGlvbl9yb290X3N0
YXRlKSB7Ci0JY2FzZSBQUlNfRU5BQkxFRDoKKwljYXNlIFBSU19ST09UOgogCQlzZXFfcHV0
cyhzZXEsICJyb290XG4iKTsKIAkJYnJlYWs7CiAJY2FzZSBQUlNfSVNPTEFURUQ6CiAJCXNl
cV9wdXRzKHNlcSwgImlzb2xhdGVkXG4iKTsKIAkJYnJlYWs7Ci0JY2FzZSBQUlNfRElTQUJM
RUQ6CisJY2FzZSBQUlNfTUVNQkVSOgogCQlzZXFfcHV0cyhzZXEsICJtZW1iZXJcbiIpOwog
CQlicmVhazsKLQljYXNlIFBSU19FUlJPUjoKLQkJdHlwZSA9IGlzX3NjaGVkX2xvYWRfYmFs
YW5jZShjcykgPyAicm9vdCIgOiAiaXNvbGF0ZWQiOworCWNhc2UgUFJTX0lOVkFMSURfUk9P
VDoKKwkJdHlwZSA9ICJyb290IjsKKwkJZmFsbHRocm91Z2g7CisJY2FzZSBQUlNfSU5WQUxJ
RF9JU09MQVRFRDoKKwkJaWYgKCF0eXBlKQorCQkJdHlwZSA9ICJpc29sYXRlZCI7CiAJCWVy
ciA9IHBlcnJfc3RyaW5nc1tSRUFEX09OQ0UoY3MtPnByc19lcnIpXTsKIAkJaWYgKGVycikK
IAkJCXNlcV9wcmludGYoc2VxLCAiJXMgaW52YWxpZCAoJXMpXG4iLCB0eXBlLCBlcnIpOwog
CQllbHNlCiAJCQlzZXFfcHJpbnRmKHNlcSwgIiVzIGludmFsaWRcbiIsIHR5cGUpOwogCQli
cmVhazsKKwkJc2VxX3B1dHMoc2VxLCAiaXNvbGF0ZWQgaW52YWxpZFxuIik7CisJCWJyZWFr
OwogCX0KIAlyZXR1cm4gMDsKIH0KQEAgLTI3MDYsOSArMjgwMyw5IEBAIHN0YXRpYyBzc2l6
ZV90IHNjaGVkX3BhcnRpdGlvbl93cml0ZShzdHJ1Y3Qga2VybmZzX29wZW5fZmlsZSAqb2Ys
IGNoYXIgKmJ1ZiwKIAkgKiBDb252ZXJ0ICJyb290IiB0byBFTkFCTEVELCBhbmQgY29udmVy
dCAibWVtYmVyIiB0byBESVNBQkxFRC4KIAkgKi8KIAlpZiAoIXN0cmNtcChidWYsICJyb290
IikpCi0JCXZhbCA9IFBSU19FTkFCTEVEOworCQl2YWwgPSBQUlNfUk9PVDsKIAllbHNlIGlm
ICghc3RyY21wKGJ1ZiwgIm1lbWJlciIpKQotCQl2YWwgPSBQUlNfRElTQUJMRUQ7CisJCXZh
bCA9IFBSU19NRU1CRVI7CiAJZWxzZSBpZiAoIXN0cmNtcChidWYsICJpc29sYXRlZCIpKQog
CQl2YWwgPSBQUlNfSVNPTEFURUQ7CiAJZWxzZQpAQCAtMjk2MCw3ICszMDU3LDcgQEAgc3Rh
dGljIGludCBjcHVzZXRfY3NzX29ubGluZShzdHJ1Y3QgY2dyb3VwX3N1YnN5c19zdGF0ZSAq
Y3NzKQogCS8qCiAJICogQ2xvbmUgQHBhcmVudCdzIGNvbmZpZ3VyYXRpb24gaWYgQ0dSUF9D
UFVTRVRfQ0xPTkVfQ0hJTERSRU4gaXMKIAkgKiBzZXQuICBUaGlzIGZsYWcgaGFuZGxpbmcg
aXMgaW1wbGVtZW50ZWQgaW4gY2dyb3VwIGNvcmUgZm9yCi0JICogaGlzdHJpY2FsIHJlYXNv
bnMgLSB0aGUgZmxhZyBtYXkgYmUgc3BlY2lmaWVkIGR1cmluZyBtb3VudC4KKwkgKiBoaXN0
b3JpY2FsIHJlYXNvbnMgLSB0aGUgZmxhZyBtYXkgYmUgc3BlY2lmaWVkIGR1cmluZyBtb3Vu
dC4KIAkgKgogCSAqIEN1cnJlbnRseSwgaWYgYW55IHNpYmxpbmcgY3B1c2V0cyBoYXZlIGV4
Y2x1c2l2ZSBjcHVzIG9yIG1lbSwgd2UKIAkgKiByZWZ1c2UgdG8gY2xvbmUgdGhlIGNvbmZp
Z3VyYXRpb24gLSB0aGVyZWJ5IHJlZnVzaW5nIHRoZSB0YXNrIHRvCkBAIC0zMDA5LDcgKzMx
MDYsNyBAQCBzdGF0aWMgdm9pZCBjcHVzZXRfY3NzX29mZmxpbmUoc3RydWN0IGNncm91cF9z
dWJzeXNfc3RhdGUgKmNzcykKIAljcHVzX3JlYWRfbG9jaygpOwogCXBlcmNwdV9kb3duX3dy
aXRlKCZjcHVzZXRfcndzZW0pOwogCi0JaWYgKGlzX3BhcnRpdGlvbl9yb290KGNzKSkKKwlp
ZiAoaXNfcGFydGl0aW9uX3ZhbGlkKGNzKSkKIAkJdXBkYXRlX3Byc3RhdGUoY3MsIDApOwog
CiAJaWYgKCFjZ3JvdXBfc3Vic3lzX29uX2RmbChjcHVzZXRfY2dycF9zdWJzeXMpICYmCkBA
IC0zMTU3LDcgKzMyNTQsNyBAQCBob3RwbHVnX3VwZGF0ZV90YXNrc19sZWdhY3koc3RydWN0
IGNwdXNldCAqY3MsCiAKIAkvKgogCSAqIERvbid0IGNhbGwgdXBkYXRlX3Rhc2tzX2NwdW1h
c2soKSBpZiB0aGUgY3B1c2V0IGJlY29tZXMgZW1wdHksCi0JICogYXMgdGhlIHRhc2tzIHdp
bGwgYmUgbWlncmF0ZWNkIHRvIGFuIGFuY2VzdG9yLgorCSAqIGFzIHRoZSB0YXNrcyB3aWxs
IGJlIG1pZ3JhdGVkIHRvIGFuIGFuY2VzdG9yLgogCSAqLwogCWlmIChjcHVzX3VwZGF0ZWQg
JiYgIWNwdW1hc2tfZW1wdHkoY3MtPmNwdXNfYWxsb3dlZCkpCiAJCXVwZGF0ZV90YXNrc19j
cHVtYXNrKGNzKTsKQEAgLTMxODYsNyArMzI4Myw3IEBAIGhvdHBsdWdfdXBkYXRlX3Rhc2tz
KHN0cnVjdCBjcHVzZXQgKmNzLAogCQkgICAgIGJvb2wgY3B1c191cGRhdGVkLCBib29sIG1l
bXNfdXBkYXRlZCkKIHsKIAkvKiBBIHBhcnRpdGlvbiByb290IGlzIGFsbG93ZWQgdG8gaGF2
ZSBlbXB0eSBlZmZlY3RpdmUgY3B1cyAqLwotCWlmIChjcHVtYXNrX2VtcHR5KG5ld19jcHVz
KSAmJiAhaXNfcGFydGl0aW9uX3Jvb3QoY3MpKQorCWlmIChjcHVtYXNrX2VtcHR5KG5ld19j
cHVzKSAmJiAhaXNfcGFydGl0aW9uX3ZhbGlkKGNzKSkKIAkJY3B1bWFza19jb3B5KG5ld19j
cHVzLCBwYXJlbnRfY3MoY3MpLT5lZmZlY3RpdmVfY3B1cyk7CiAJaWYgKG5vZGVzX2VtcHR5
KCpuZXdfbWVtcykpCiAJCSpuZXdfbWVtcyA9IHBhcmVudF9jcyhjcyktPmVmZmVjdGl2ZV9t
ZW1zOwpAQCAtMzI1OSw4ICszMzU2LDggQEAgc3RhdGljIHZvaWQgY3B1c2V0X2hvdHBsdWdf
dXBkYXRlX3Rhc2tzKHN0cnVjdCBjcHVzZXQgKmNzLCBzdHJ1Y3QgdG1wbWFza3MgKnRtcCkK
IAkgKiBwYXJ0aXRpb25zLCBpZiBwcmVzZW50LCBieSBzZXR0aW5nIG5yX3N1YnBhcnRzX2Nw
dXMgdG8gMCB0bwogCSAqIHJlY2xhaW0gdGhlaXIgY3B1cy4KIAkgKi8KLQlpZiAoaXNfcGFy
dGl0aW9uX3Jvb3QoY3MpICYmIGNwdW1hc2tfZW1wdHkoJm5ld19jcHVzKSAmJgotCSAgICBj
cy0+bnJfc3VicGFydHNfY3B1cyAmJiBwYXJ0aXRpb25faXNfcG9wdWxhdGVkKGNzLCBOVUxM
KSkgeworCWlmIChjcy0+bnJfc3VicGFydHNfY3B1cyAmJiBpc19wYXJ0aXRpb25fdmFsaWQo
Y3MpICYmCisJICAgIGNwdW1hc2tfZW1wdHkoJm5ld19jcHVzKSAmJiBwYXJ0aXRpb25faXNf
cG9wdWxhdGVkKGNzLCBOVUxMKSkgewogCQlzcGluX2xvY2tfaXJxKCZjYWxsYmFja19sb2Nr
KTsKIAkJY3MtPm5yX3N1YnBhcnRzX2NwdXMgPSAwOwogCQljcHVtYXNrX2NsZWFyKGNzLT5z
dWJwYXJ0c19jcHVzKTsKQEAgLTMyNzEsMTYgKzMzNjgsMTUgQEAgc3RhdGljIHZvaWQgY3B1
c2V0X2hvdHBsdWdfdXBkYXRlX3Rhc2tzKHN0cnVjdCBjcHVzZXQgKmNzLCBzdHJ1Y3QgdG1w
bWFza3MgKnRtcCkKIAkvKgogCSAqIEZvcmNlIHRoZSBwYXJ0aXRpb24gdG8gYmVjb21lIGlu
dmFsaWQgaWYgZWl0aGVyIG9uZSBvZgogCSAqIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBo
b2xkOgotCSAqIDEpIGVtcHR5IGVmZmVjdGl2ZSBjcHVzIHdpdGggdGFza3MgaW4gcGFydGl0
aW9uCi0JICogMikgcGFyZW50IGlzIGludmFsaWQgb3IgZG9lc24ndCBncmFudCBhbnkgY3B1
cyB0byBjaGlsZCBwYXJ0aXRpb25zLgorCSAqIDEpIGVtcHR5IGVmZmVjdGl2ZSBjcHVzIGJ1
dCBub3QgdmFsaWQgZW1wdHkgcGFydGl0aW9uLgorCSAqIDIpIHBhcmVudCBpcyBpbnZhbGlk
IG9yIGRvZXNuJ3QgZ3JhbnQgYW55IGNwdXMgdG8gY2hpbGQKKwkgKiAgICBwYXJ0aXRpb25z
LgogCSAqLwotCWlmIChpc19wYXJ0aXRpb25fcm9vdChjcykgJiYKLQkgICAoKGNwdW1hc2tf
ZW1wdHkoJm5ld19jcHVzKSAmJiBwYXJ0aXRpb25faXNfcG9wdWxhdGVkKGNzLCBOVUxMKSkg
fHwKLQkgICAgIXBhcmVudC0+bnJfc3VicGFydHNfY3B1cykpIHsKKwlpZiAoaXNfcGFydGl0
aW9uX3ZhbGlkKGNzKSAmJiAoIXBhcmVudC0+bnJfc3VicGFydHNfY3B1cyB8fAorCSAgIChj
cHVtYXNrX2VtcHR5KCZuZXdfY3B1cykgJiYgcGFydGl0aW9uX2lzX3BvcHVsYXRlZChjcywg
TlVMTCkpKSkgewogCQlpbnQgb2xkX3BycywgcGFyZW50X3ByczsKIAotCQl1cGRhdGVfcGFy
ZW50X3N1YnBhcnRzX2NwdW1hc2soY3MsIHBhcnRjbWRfZGlzYWJsZSwKLQkJCQkJICAgICAg
IE5VTEwsIHRtcCk7CisJCXVwZGF0ZV9wYXJlbnRfc3VicGFydHNfY3B1bWFzayhjcywgcGFy
dGNtZF9kaXNhYmxlLCBOVUxMLCB0bXApOwogCQlpZiAoY3MtPm5yX3N1YnBhcnRzX2NwdXMp
IHsKIAkJCXNwaW5fbG9ja19pcnEoJmNhbGxiYWNrX2xvY2spOwogCQkJY3MtPm5yX3N1YnBh
cnRzX2NwdXMgPSAwOwpAQCAtMzI5MSwyOSArMzM4NywzMCBAQCBzdGF0aWMgdm9pZCBjcHVz
ZXRfaG90cGx1Z191cGRhdGVfdGFza3Moc3RydWN0IGNwdXNldCAqY3MsIHN0cnVjdCB0bXBt
YXNrcyAqdG1wKQogCiAJCW9sZF9wcnMgPSBjcy0+cGFydGl0aW9uX3Jvb3Rfc3RhdGU7CiAJ
CXBhcmVudF9wcnMgPSBwYXJlbnQtPnBhcnRpdGlvbl9yb290X3N0YXRlOwotCQlpZiAob2xk
X3BycyAhPSBQUlNfRVJST1IpIHsKKwkJaWYgKGlzX3BhcnRpdGlvbl92YWxpZChjcykpIHsK
IAkJCXNwaW5fbG9ja19pcnEoJmNhbGxiYWNrX2xvY2spOwotCQkJY3MtPnBhcnRpdGlvbl9y
b290X3N0YXRlID0gUFJTX0VSUk9SOworCQkJc2V0X3BhcnRpdGlvbl9pbnZhbGlkKGNzKTsK
IAkJCXNwaW5fdW5sb2NrX2lycSgmY2FsbGJhY2tfbG9jayk7Ci0JCQlpZiAocGFyZW50X3By
cyA9PSBQUlNfRVJST1IpCisJCQlpZiAoaXNfcHJzX2ludmFsaWQocGFyZW50X3BycykpCiAJ
CQkJV1JJVEVfT05DRShjcy0+cHJzX2VyciwgUEVSUl9JTlZQQVJFTlQpOwogCQkJZWxzZSBp
ZiAoIXBhcmVudF9wcnMpCiAJCQkJV1JJVEVfT05DRShjcy0+cHJzX2VyciwgUEVSUl9OT1RQ
QVJUKTsKIAkJCWVsc2UKIAkJCQlXUklURV9PTkNFKGNzLT5wcnNfZXJyLCBQRVJSX0hPVFBM
VUcpOwotCQkJbm90aWZ5X3BhcnRpdGlvbl9jaGFuZ2UoY3MsIG9sZF9wcnMsIFBSU19FUlJP
Uik7CisJCQlub3RpZnlfcGFydGl0aW9uX2NoYW5nZShjcywgb2xkX3Bycyk7CiAJCX0KIAkJ
Y3B1c2V0X2ZvcmNlX3JlYnVpbGQoKTsKIAl9CiAKIAkvKgotCSAqIE9uIHRoZSBvdGhlciBo
YW5kLCBhbiBlcnJvbmVvdXMgcGFydGl0aW9uIHJvb3QgbWF5IGJlIHRyYW5zaXRpb25lZAor
CSAqIE9uIHRoZSBvdGhlciBoYW5kLCBhbiBpbnZhbGlkIHBhcnRpdGlvbiByb290IG1heSBi
ZSB0cmFuc2l0aW9uZWQKIAkgKiBiYWNrIHRvIGEgcmVndWxhciBvbmUuCiAJICovCi0JZWxz
ZSBpZiAoaXNfcGFydGl0aW9uX3Jvb3QocGFyZW50KSAmJgotCQkoY3MtPnBhcnRpdGlvbl9y
b290X3N0YXRlID09IFBSU19FUlJPUikgJiYKLQkJIHVwZGF0ZV9wYXJlbnRfc3VicGFydHNf
Y3B1bWFzayhjcywgcGFydGNtZF91cGRhdGUsIE5VTEwsIHRtcCkpCi0JCWNwdXNldF9mb3Jj
ZV9yZWJ1aWxkKCk7CisJZWxzZSBpZiAoaXNfcGFydGl0aW9uX3ZhbGlkKHBhcmVudCkgJiYg
aXNfcGFydGl0aW9uX2ludmFsaWQoY3MpKSB7CisJCXVwZGF0ZV9wYXJlbnRfc3VicGFydHNf
Y3B1bWFzayhjcywgcGFydGNtZF91cGRhdGUsIE5VTEwsIHRtcCk7CisJCWlmIChpc19wYXJ0
aXRpb25fdmFsaWQoY3MpKQorCQkJY3B1c2V0X2ZvcmNlX3JlYnVpbGQoKTsKKwl9CiAKIHVw
ZGF0ZV90YXNrczoKIAljcHVzX3VwZGF0ZWQgPSAhY3B1bWFza19lcXVhbCgmbmV3X2NwdXMs
IGNzLT5lZmZlY3RpdmVfY3B1cyk7CkBAIC0zNjE5LDggKzM3MTYsOCBAQCBzdGF0aWMgc3Ry
dWN0IGNwdXNldCAqbmVhcmVzdF9oYXJkd2FsbF9hbmNlc3RvcihzdHJ1Y3QgY3B1c2V0ICpj
cykKIAlyZXR1cm4gY3M7CiB9CiAKLS8qKgotICogY3B1c2V0X25vZGVfYWxsb3dlZCAtIENh
biB3ZSBhbGxvY2F0ZSBvbiBhIG1lbW9yeSBub2RlPworLyoKKyAqIF9fY3B1c2V0X25vZGVf
YWxsb3dlZCAtIENhbiB3ZSBhbGxvY2F0ZSBvbiBhIG1lbW9yeSBub2RlPwogICogQG5vZGU6
IGlzIHRoaXMgYW4gYWxsb3dlZCBub2RlPwogICogQGdmcF9tYXNrOiBtZW1vcnkgYWxsb2Nh
dGlvbiBmbGFncwogICoKQEAgLTM2NjIsNyArMzc1OSw3IEBAIHN0YXRpYyBzdHJ1Y3QgY3B1
c2V0ICpuZWFyZXN0X2hhcmR3YWxsX2FuY2VzdG9yKHN0cnVjdCBjcHVzZXQgKmNzKQogYm9v
bCBfX2NwdXNldF9ub2RlX2FsbG93ZWQoaW50IG5vZGUsIGdmcF90IGdmcF9tYXNrKQogewog
CXN0cnVjdCBjcHVzZXQgKmNzOwkJLyogY3VycmVudCBjcHVzZXQgYW5jZXN0b3JzICovCi0J
aW50IGFsbG93ZWQ7CQkJLyogaXMgYWxsb2NhdGlvbiBpbiB6b25lIHogYWxsb3dlZD8gKi8K
Kwlib29sIGFsbG93ZWQ7CQkJLyogaXMgYWxsb2NhdGlvbiBpbiB6b25lIHogYWxsb3dlZD8g
Ki8KIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCiAJaWYgKGluX2ludGVycnVwdCgpKQpAQCAt
Mzc5MSw4ICszODg4LDggQEAgdm9pZCBjcHVzZXRfcHJpbnRfY3VycmVudF9tZW1zX2FsbG93
ZWQodm9pZCkKIAogaW50IGNwdXNldF9tZW1vcnlfcHJlc3N1cmVfZW5hYmxlZCBfX3JlYWRf
bW9zdGx5OwogCi0vKioKLSAqIGNwdXNldF9tZW1vcnlfcHJlc3N1cmVfYnVtcCAtIGtlZXAg
c3RhdHMgb2YgcGVyLWNwdXNldCByZWNsYWltcy4KKy8qCisgKiBfX2NwdXNldF9tZW1vcnlf
cHJlc3N1cmVfYnVtcCAtIGtlZXAgc3RhdHMgb2YgcGVyLWNwdXNldCByZWNsYWltcy4KICAq
CiAgKiBLZWVwIGEgcnVubmluZyBhdmVyYWdlIG9mIHRoZSByYXRlIG9mIHN5bmNocm9ub3Vz
IChkaXJlY3QpCiAgKiBwYWdlIHJlY2xhaW0gZWZmb3J0cyBpbml0aWF0ZWQgYnkgdGFza3Mg
aW4gZWFjaCBjcHVzZXQuCkBAIC0zODA3LDcgKzM5MDQsNyBAQCBpbnQgY3B1c2V0X21lbW9y
eV9wcmVzc3VyZV9lbmFibGVkIF9fcmVhZF9tb3N0bHk7CiAgKiAibWVtb3J5X3ByZXNzdXJl
Ii4gIFZhbHVlIGRpc3BsYXllZCBpcyBhbiBpbnRlZ2VyCiAgKiByZXByZXNlbnRpbmcgdGhl
IHJlY2VudCByYXRlIG9mIGVudHJ5IGludG8gdGhlIHN5bmNocm9ub3VzCiAgKiAoZGlyZWN0
KSBwYWdlIHJlY2xhaW0gYnkgYW55IHRhc2sgYXR0YWNoZWQgdG8gdGhlIGNwdXNldC4KLSAq
Ki8KKyAqLwogCiB2b2lkIF9fY3B1c2V0X21lbW9yeV9wcmVzc3VyZV9idW1wKHZvaWQpCiB7
Cg==

--------------jCz2Xk9HZ5nWhl7YWm0gKoKD--

