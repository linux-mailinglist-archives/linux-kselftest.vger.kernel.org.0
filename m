Return-Path: <linux-kselftest+bounces-18557-lists+linux-kselftest=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kselftest@lfdr.de
Delivered-To: lists+linux-kselftest@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 1559A989853
	for <lists+linux-kselftest@lfdr.de>; Mon, 30 Sep 2024 00:40:35 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 99730281066
	for <lists+linux-kselftest@lfdr.de>; Sun, 29 Sep 2024 22:40:33 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 6467613CFAD;
	Sun, 29 Sep 2024 22:40:30 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="TEtyKUyh"
X-Original-To: linux-kselftest@vger.kernel.org
Received: from mail-pl1-f175.google.com (mail-pl1-f175.google.com [209.85.214.175])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4CEF7137932;
	Sun, 29 Sep 2024 22:40:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.175
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1727649630; cv=none; b=SOrmGaXWD2CcQzLF3OwgKgkb+ZdbxwU0KBM/iD4vjghQO3rtyrj5wunfcKRdLyAj+c7/uav5mx56phn5SUYk+2DCpGvncQtbrCNBk9TSu7bIwmCz1nH5GigaootTkitMmqhs4ppK4ONtxtTe0nAS7nULBnNMlAI2pe63j4M50c4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1727649630; c=relaxed/simple;
	bh=uQ0jDg45k/9ZYKbtaF8iIOXClqemchzGQ1OtKYSbqhE=;
	h=MIME-Version:From:Date:Message-ID:Subject:To:Content-Type; b=YBnFrSP1k03BeNrBSquLCWC4drgW7ta5dTtrsqK8IQ4fqz4PQv0rEfkLwOmrMUCK3F/6tiqa4OefxwYry3x68cyDkv0t9pZtdTOTY8sDNjiCgFK9xsNYpuUcz/txZqaHgNUSWhSdjlZ4oGAIVCUwGziNitpyEmOd+V+bDbLNoqI=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=TEtyKUyh; arc=none smtp.client-ip=209.85.214.175
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Received: by mail-pl1-f175.google.com with SMTP id d9443c01a7336-20b1b146432so6156955ad.0;
        Sun, 29 Sep 2024 15:40:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1727649626; x=1728254426; darn=vger.kernel.org;
        h=to:subject:message-id:date:from:mime-version:from:to:cc:subject
         :date:message-id:reply-to;
        bh=uQ0jDg45k/9ZYKbtaF8iIOXClqemchzGQ1OtKYSbqhE=;
        b=TEtyKUyhIXN3G0Z/J0IOF+0Klo1zBOWFnPG6ef2j+3c+BBI6Ca4yg2rXy8iKRebnNQ
         31rqw/MCecVpniXFd4Nlhwgu19f2PNtZPcj8yI0ChjglXKYNZ9616PQ6KdlXG/IwwPmq
         TTol/iFMazbZKBLzb7GBOldCHcWL+nhu6sKk6R9TIswaaq59paw6wbTFAmcDs8uEyh5I
         sZfGKJs9iw/lkGftrIpZhCQYQKKICAadDx4eLfYqAt7jUxH5YbZOWMdE2V7jBPLsWLZj
         O/7GhOLKtzq5zZMOFiEQyYTCdh2cyoo0n0LCw0o2bgZ8npOOjoSnhYUpWyr0/iuGQ0hi
         iclQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1727649626; x=1728254426;
        h=to:subject:message-id:date:from:mime-version:x-gm-message-state
         :from:to:cc:subject:date:message-id:reply-to;
        bh=uQ0jDg45k/9ZYKbtaF8iIOXClqemchzGQ1OtKYSbqhE=;
        b=mZVsRTWBpq1/tyn/C19NmM/p0+zWEYVmEAvx8FKug91g2BYtX8T+x1cohjv+VWIHKa
         /YpZEGaWADpQ9y7mlqISuSwjEIp56WMnOShpm1WAGnt69pc9E1ya0iNhjDkvtI5L2tL4
         s/f6M866rhIaKtWqy3EahS6b6m7x9rNAGTcDHq1DeDxePZXfb/y11s/wcDRZbb7p++MM
         mOAl9Yz1hNBypXqnt7dVdst6GChtIUZyL4psaGCdvShW4f4GNm7gf2oE1QPpIou5IR1u
         Xng7Pjm0LJOwcl5XmI0EwBb1kzYbzSLmfwoMgm0lFYMHHwLAVtL+7uWrCnuBoJBa2Odz
         CR1Q==
X-Forwarded-Encrypted: i=1; AJvYcCX2u6YUvxGyymTk2Q1EVVVJ7IbJuJbYzChfE8pBEf6YTaVEsCUyVmJc6zOBEuk4DmyDTwg2kOsTeu5ApEQ=@vger.kernel.org, AJvYcCXG+8oerTjE/9kv9GbTJuTNqktMpLqf7+HF9sBK1WkqSQw1RakNT+wrDz+mmWO0Qij2Cf3zNQiCAOSmbWJK0xHr@vger.kernel.org
X-Gm-Message-State: AOJu0Yygyd+2NLKg2xHDE5qlfUPXDzrlszdbe49G+vjam3laUs4lJBVq
	VLMtKb77ocod/PnTnPABc3sKrqNPzbzCdYXCix9FKnOdrBMKPhZ1vTXjDiGp3ogxmirxkS9oGRc
	j/j4i6lYGdwZKPGIrqX9X6tUYx5U=
X-Google-Smtp-Source: AGHT+IGfomPUfnJcfCZPAC+RPPYG7PTZ5yiXTQWBLdubeReQL+hrwgS3eB0ZsdcANYFZ0jDlMQ922Lq0PE3h1ow3WJs=
X-Received: by 2002:a05:6a21:7884:b0:1cf:31da:c435 with SMTP id
 adf61e73a8af0-1d509b25689mr4352318637.5.1727649626337; Sun, 29 Sep 2024
 15:40:26 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-kselftest@vger.kernel.org
List-Id: <linux-kselftest.vger.kernel.org>
List-Subscribe: <mailto:linux-kselftest+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kselftest+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
From: =?UTF-8?B?T2thbiBUw7xtw7xrbMO8?= <okantumukluu@gmail.com>
Date: Mon, 30 Sep 2024 01:40:14 +0300
Message-ID: <CAJb+kEmFoTXCKh=xSfCas7B=oQP1p8vnn5eoa=zn54FRXOOntg@mail.gmail.com>
Subject: update core.c
To: shuah@kernel.org, linux-kernel@vger.kernel.org, 
	linux-kselftest@vger.kernel.org, =?UTF-8?B?TWlja2HDq2wgU2FsYcO8bg==?= <mic@digikod.net>, 
	Shuah Khan <skhan@linuxfoundation.org>, Kees Cook <keescook@chromium.org>
Content-Type: multipart/mixed; boundary="00000000000046641a062349c676"

--00000000000046641a062349c676
Content-Type: multipart/alternative; boundary="000000000000466418062349c674"

--000000000000466418062349c674
Content-Type: text/plain; charset="UTF-8"

1:The control flow was simplified by using else if statements instead of
goto structure.

2:Error conditions are handled more clearly.

3:The device_unlock call at the end of the function is guaranteed in all
cases.

Github request : https://github.com/torvalds/linux/pull/967

--000000000000466418062349c674
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">1:The control flow was simplified by using else if stateme=
nts instead of goto structure.<br><br>2:Error conditions are handled more c=
learly.<br><br>3:The device_unlock call at the end of the function is guara=
nteed in all cases.<div><br></div><div>Github request :=C2=A0<a href=3D"htt=
ps://github.com/torvalds/linux/pull/967">https://github.com/torvalds/linux/=
pull/967</a></div></div>

--000000000000466418062349c674--
--00000000000046641a062349c676
Content-Type: text/x-csrc; charset="US-ASCII"; name="core.c"
Content-Disposition: attachment; filename="core.c"
Content-Transfer-Encoding: base64
Content-ID: <f_m1o5y6uj1>
X-Attachment-Id: f_m1o5y6uj1

Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLyoKICogQ29weXJp
Z2h0IChDKSAyMDExIEluc3RpdHV0byBOb2tpYSBkZSBUZWNub2xvZ2lhCiAqCiAqIEF1dGhvcnM6
CiAqICAgIExhdXJvIFJhbW9zIFZlbmFuY2lvIDxsYXVyby52ZW5hbmNpb0BvcGVuYm9zc2Eub3Jn
PgogKiAgICBBbG9pc2lvIEFsbWVpZGEgSnIgPGFsb2lzaW8uYWxtZWlkYUBvcGVuYm9zc2Eub3Jn
PgogKi8KCiNkZWZpbmUgcHJfZm10KGZtdCkgS0JVSUxEX01PRE5BTUUgIjogJXM6ICIgZm10LCBf
X2Z1bmNfXwoKI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5o
PgojaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CiNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiNpbmNs
dWRlIDxsaW51eC9yZmtpbGwuaD4KI2luY2x1ZGUgPGxpbnV4L25mYy5oPgoKI2luY2x1ZGUgPG5l
dC9nZW5ldGxpbmsuaD4KCiNpbmNsdWRlICJuZmMuaCIKCiNkZWZpbmUgVkVSU0lPTiAiMC4xIgoK
I2RlZmluZSBORkNfQ0hFQ0tfUFJFU19GUkVRX01TCTIwMDAKCmludCBuZmNfZGV2bGlzdF9nZW5l
cmF0aW9uOwpERUZJTkVfTVVURVgobmZjX2Rldmxpc3RfbXV0ZXgpOwoKLyogTkZDIGRldmljZSBJ
RCBiaXRtYXAgKi8Kc3RhdGljIERFRklORV9JREEobmZjX2luZGV4X2lkYSk7CgppbnQgbmZjX2Z3
X2Rvd25sb2FkKHN0cnVjdCBuZmNfZGV2ICpkZXYsIGNvbnN0IGNoYXIgKmZpcm13YXJlX25hbWUp
CnsKCWludCByYyA9IDA7CgoJcHJfZGVidWcoIiVzIGRvIGZpcm13YXJlICVzXG4iLCBkZXZfbmFt
ZSgmZGV2LT5kZXYpLCBmaXJtd2FyZV9uYW1lKTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoK
CWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7Cgl9ZWxzZSBpZiAoZGV2
LT5kZXZfdXApIHsKCQlyYyA9IC1FQlVTWTsKCX1lbHNlIGlmICghZGV2LT5vcHMtPmZ3X2Rvd25s
b2FkKSB7CgkJcmMgPSAtRU9QTk9UU1VQUDsKCX1lbHNlewoJCWRldi0+ZndfZG93bmxvYWRfaW5f
cHJvZ3Jlc3MgPSB0cnVlOwoJCXJjID0gZGV2LT5vcHMtPmZ3X2Rvd25sb2FkKGRldiwgZmlybXdh
cmVfbmFtZSk7CgkJaWYgKHJjKQoJCQlkZXYtPmZ3X2Rvd25sb2FkX2luX3Byb2dyZXNzID0gZmFs
c2U7CgkJfQoKCQlkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CgkJcmV0dXJuIHJjOwp9CgovKioK
ICogbmZjX2Z3X2Rvd25sb2FkX2RvbmUgLSBpbmZvcm0gdGhhdCBhIGZpcm13YXJlIGRvd25sb2Fk
IHdhcyBjb21wbGV0ZWQKICoKICogQGRldjogVGhlIG5mYyBkZXZpY2UgdG8gd2hpY2ggZmlybXdh
cmUgd2FzIGRvd25sb2FkZWQKICogQGZpcm13YXJlX25hbWU6IFRoZSBmaXJtd2FyZSBmaWxlbmFt
ZQogKiBAcmVzdWx0OiBUaGUgcG9zaXRpdmUgdmFsdWUgb2YgYSBzdGFuZGFyZCBlcnJubyB2YWx1
ZQogKi8KaW50IG5mY19md19kb3dubG9hZF9kb25lKHN0cnVjdCBuZmNfZGV2ICpkZXYsIGNvbnN0
IGNoYXIgKmZpcm13YXJlX25hbWUsCgkJCSB1MzIgcmVzdWx0KQp7CglkZXYtPmZ3X2Rvd25sb2Fk
X2luX3Byb2dyZXNzID0gZmFsc2U7CgoJcmV0dXJuIG5mY19nZW5sX2Z3X2Rvd25sb2FkX2RvbmUo
ZGV2LCBmaXJtd2FyZV9uYW1lLCByZXN1bHQpOwp9CkVYUE9SVF9TWU1CT0wobmZjX2Z3X2Rvd25s
b2FkX2RvbmUpOwoKLyoqCiAqIG5mY19kZXZfdXAgLSB0dXJuIG9uIHRoZSBORkMgZGV2aWNlCiAq
CiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRvIGJlIHR1cm5lZCBvbgogKgogKiBUaGUgZGV2aWNl
IHJlbWFpbnMgdXAgdW50aWwgdGhlIG5mY19kZXZfZG93biBmdW5jdGlvbiBpcyBjYWxsZWQuCiAq
LwppbnQgbmZjX2Rldl91cChzdHJ1Y3QgbmZjX2RldiAqZGV2KQp7CglpbnQgcmMgPSAwOwoKCXBy
X2RlYnVnKCJkZXZfbmFtZT0lc1xuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJZGV2aWNlX2xv
Y2soJmRldi0+ZGV2KTsKCglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVW
OwoJCWdvdG8gZXJyb3I7Cgl9CgoJaWYgKGRldi0+cmZraWxsICYmIHJma2lsbF9ibG9ja2VkKGRl
di0+cmZraWxsKSkgewoJCXJjID0gLUVSRktJTEw7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2
LT5md19kb3dubG9hZF9pbl9wcm9ncmVzcykgewoJCXJjID0gLUVCVVNZOwoJCWdvdG8gZXJyb3I7
Cgl9CgoJaWYgKGRldi0+ZGV2X3VwKSB7CgkJcmMgPSAtRUFMUkVBRFk7CgkJZ290byBlcnJvcjsK
CX0KCglpZiAoZGV2LT5vcHMtPmRldl91cCkKCQlyYyA9IGRldi0+b3BzLT5kZXZfdXAoZGV2KTsK
CglpZiAoIXJjKQoJCWRldi0+ZGV2X3VwID0gdHJ1ZTsKCgkvKiBXZSBoYXZlIHRvIGVuYWJsZSB0
aGUgZGV2aWNlIGJlZm9yZSBkaXNjb3ZlcmluZyBTRXMgKi8KCWlmIChkZXYtPm9wcy0+ZGlzY292
ZXJfc2UgJiYgZGV2LT5vcHMtPmRpc2NvdmVyX3NlKGRldikpCgkJcHJfZXJyKCJTRSBkaXNjb3Zl
cnkgZmFpbGVkXG4iKTsKCmVycm9yOgoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJcmV0dXJu
IHJjOwp9CgovKioKICogbmZjX2Rldl9kb3duIC0gdHVybiBvZmYgdGhlIE5GQyBkZXZpY2UKICoK
ICogQGRldjogVGhlIG5mYyBkZXZpY2UgdG8gYmUgdHVybmVkIG9mZgogKi8KaW50IG5mY19kZXZf
ZG93bihzdHJ1Y3QgbmZjX2RldiAqZGV2KQp7CglpbnQgcmMgPSAwOwoKCXByX2RlYnVnKCJkZXZf
bmFtZT0lc1xuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2
KTsKCglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJy
b3I7Cgl9CgoJaWYgKCFkZXYtPmRldl91cCkgewoJCXJjID0gLUVBTFJFQURZOwoJCWdvdG8gZXJy
b3I7Cgl9CgoJaWYgKGRldi0+cG9sbGluZyB8fCBkZXYtPmFjdGl2ZV90YXJnZXQpIHsKCQlyYyA9
IC1FQlVTWTsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChkZXYtPm9wcy0+ZGV2X2Rvd24pCgkJZGV2
LT5vcHMtPmRldl9kb3duKGRldik7CgoJZGV2LT5kZXZfdXAgPSBmYWxzZTsKCmVycm9yOgoJZGV2
aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJcmV0dXJuIHJjOwp9CgpzdGF0aWMgaW50IG5mY19yZmtp
bGxfc2V0X2Jsb2NrKHZvaWQgKmRhdGEsIGJvb2wgYmxvY2tlZCkKewoJc3RydWN0IG5mY19kZXYg
KmRldiA9IGRhdGE7CgoJcHJfZGVidWcoIiVzIGJsb2NrZWQgJWQiLCBkZXZfbmFtZSgmZGV2LT5k
ZXYpLCBibG9ja2VkKTsKCglpZiAoIWJsb2NrZWQpCgkJcmV0dXJuIDA7CgoJbmZjX2Rldl9kb3du
KGRldik7CgoJcmV0dXJuIDA7Cn0KCnN0YXRpYyBjb25zdCBzdHJ1Y3QgcmZraWxsX29wcyBuZmNf
cmZraWxsX29wcyA9IHsKCS5zZXRfYmxvY2sgPSBuZmNfcmZraWxsX3NldF9ibG9jaywKfTsKCi8q
KgogKiBuZmNfc3RhcnRfcG9sbCAtIHN0YXJ0IHBvbGxpbmcgZm9yIG5mYyB0YXJnZXRzCiAqCiAq
IEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRoYXQgbXVzdCBzdGFydCBwb2xsaW5nCiAqIEBpbV9wcm90
b2NvbHM6IGJpdHNldCBvZiBuZmMgaW5pdGlhdG9yIHByb3RvY29scyB0byBiZSB1c2VkIGZvciBw
b2xsaW5nCiAqIEB0bV9wcm90b2NvbHM6IGJpdHNldCBvZiBuZmMgdHJhbnNwb3J0IHByb3RvY29s
cyB0byBiZSB1c2VkIGZvciBwb2xsaW5nCiAqCiAqIFRoZSBkZXZpY2UgcmVtYWlucyBwb2xsaW5n
IGZvciB0YXJnZXRzIHVudGlsIGEgdGFyZ2V0IGlzIGZvdW5kIG9yCiAqIHRoZSBuZmNfc3RvcF9w
b2xsIGZ1bmN0aW9uIGlzIGNhbGxlZC4KICovCmludCBuZmNfc3RhcnRfcG9sbChzdHJ1Y3QgbmZj
X2RldiAqZGV2LCB1MzIgaW1fcHJvdG9jb2xzLCB1MzIgdG1fcHJvdG9jb2xzKQp7CglpbnQgcmM7
CgoJcHJfZGVidWcoImRldl9uYW1lICVzIGluaXRpYXRvciBwcm90b2NvbHMgMHgleCB0YXJnZXQg
cHJvdG9jb2xzIDB4JXhcbiIsCgkJIGRldl9uYW1lKCZkZXYtPmRldiksIGltX3Byb3RvY29scywg
dG1fcHJvdG9jb2xzKTsKCglpZiAoIWltX3Byb3RvY29scyAmJiAhdG1fcHJvdG9jb2xzKQoJCXJl
dHVybiAtRUlOVkFMOwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CgoJaWYgKGRldi0+c2h1dHRp
bmdfZG93bikgewoJCXJjID0gLUVOT0RFVjsKCQlnb3RvIGVycm9yOwoJfQoKCWlmICghZGV2LT5k
ZXZfdXApIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5wb2xs
aW5nKSB7CgkJcmMgPSAtRUJVU1k7CgkJZ290byBlcnJvcjsKCX0KCglyYyA9IGRldi0+b3BzLT5z
dGFydF9wb2xsKGRldiwgaW1fcHJvdG9jb2xzLCB0bV9wcm90b2NvbHMpOwoJaWYgKCFyYykgewoJ
CWRldi0+cG9sbGluZyA9IHRydWU7CgkJZGV2LT5yZl9tb2RlID0gTkZDX1JGX05PTkU7Cgl9Cgpl
cnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQoKLyoqCiAqIG5m
Y19zdG9wX3BvbGwgLSBzdG9wIHBvbGxpbmcgZm9yIG5mYyB0YXJnZXRzCiAqCiAqIEBkZXY6IFRo
ZSBuZmMgZGV2aWNlIHRoYXQgbXVzdCBzdG9wIHBvbGxpbmcKICovCmludCBuZmNfc3RvcF9wb2xs
KHN0cnVjdCBuZmNfZGV2ICpkZXYpCnsKCWludCByYyA9IDA7CgoJcHJfZGVidWcoImRldl9uYW1l
PSVzXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpKTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoK
CWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsK
CX0KCglpZiAoIWRldi0+cG9sbGluZykgewoJCXJjID0gLUVJTlZBTDsKCQlnb3RvIGVycm9yOwoJ
fQoKCWRldi0+b3BzLT5zdG9wX3BvbGwoZGV2KTsKCWRldi0+cG9sbGluZyA9IGZhbHNlOwoJZGV2
LT5yZl9tb2RlID0gTkZDX1JGX05PTkU7CgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2
KTsKCXJldHVybiByYzsKfQoKc3RhdGljIHN0cnVjdCBuZmNfdGFyZ2V0ICpuZmNfZmluZF90YXJn
ZXQoc3RydWN0IG5mY19kZXYgKmRldiwgdTMyIHRhcmdldF9pZHgpCnsKCWludCBpOwoKCWZvciAo
aSA9IDA7IGkgPCBkZXYtPm5fdGFyZ2V0czsgaSsrKSB7CgkJaWYgKGRldi0+dGFyZ2V0c1tpXS5p
ZHggPT0gdGFyZ2V0X2lkeCkKCQkJcmV0dXJuICZkZXYtPnRhcmdldHNbaV07Cgl9CgoJcmV0dXJu
IE5VTEw7Cn0KCmludCBuZmNfZGVwX2xpbmtfdXAoc3RydWN0IG5mY19kZXYgKmRldiwgaW50IHRh
cmdldF9pbmRleCwgdTggY29tbV9tb2RlKQp7CglpbnQgcmMgPSAwOwoJdTggKmdiOwoJc2l6ZV90
IGdiX2xlbjsKCXN0cnVjdCBuZmNfdGFyZ2V0ICp0YXJnZXQ7CgoJcHJfZGVidWcoImRldl9uYW1l
PSVzIGNvbW0gJWRcbiIsIGRldl9uYW1lKCZkZXYtPmRldiksIGNvbW1fbW9kZSk7CgoJaWYgKCFk
ZXYtPm9wcy0+ZGVwX2xpbmtfdXApCgkJcmV0dXJuIC1FT1BOT1RTVVBQOwoKCWRldmljZV9sb2Nr
KCZkZXYtPmRldik7CgoJaWYgKGRldi0+c2h1dHRpbmdfZG93bikgewoJCXJjID0gLUVOT0RFVjsK
CQlnb3RvIGVycm9yOwoJfQoKCWlmIChkZXYtPmRlcF9saW5rX3VwID09IHRydWUpIHsKCQlyYyA9
IC1FQUxSRUFEWTsKCQlnb3RvIGVycm9yOwoJfQoKCWdiID0gbmZjX2xsY3BfZ2VuZXJhbF9ieXRl
cyhkZXYsICZnYl9sZW4pOwoJaWYgKGdiX2xlbiA+IE5GQ19NQVhfR1RfTEVOKSB7CgkJcmMgPSAt
RUlOVkFMOwoJCWdvdG8gZXJyb3I7Cgl9CgoJdGFyZ2V0ID0gbmZjX2ZpbmRfdGFyZ2V0KGRldiwg
dGFyZ2V0X2luZGV4KTsKCWlmICh0YXJnZXQgPT0gTlVMTCkgewoJCXJjID0gLUVOT1RDT05OOwoJ
CWdvdG8gZXJyb3I7Cgl9CgoJcmMgPSBkZXYtPm9wcy0+ZGVwX2xpbmtfdXAoZGV2LCB0YXJnZXQs
IGNvbW1fbW9kZSwgZ2IsIGdiX2xlbik7CglpZiAoIXJjKSB7CgkJZGV2LT5hY3RpdmVfdGFyZ2V0
ID0gdGFyZ2V0OwoJCWRldi0+cmZfbW9kZSA9IE5GQ19SRl9JTklUSUFUT1I7Cgl9CgplcnJvcjoK
CWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQoKaW50IG5mY19kZXBfbGlu
a19kb3duKHN0cnVjdCBuZmNfZGV2ICpkZXYpCnsKCWludCByYyA9IDA7CgoJcHJfZGVidWcoImRl
dl9uYW1lPSVzXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpKTsKCglpZiAoIWRldi0+b3BzLT5kZXBf
bGlua19kb3duKQoJCXJldHVybiAtRU9QTk9UU1VQUDsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYp
OwoKCWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJv
cjsKCX0KCglpZiAoZGV2LT5kZXBfbGlua191cCA9PSBmYWxzZSkgewoJCXJjID0gLUVBTFJFQURZ
OwoJCWdvdG8gZXJyb3I7Cgl9CgoJcmMgPSBkZXYtPm9wcy0+ZGVwX2xpbmtfZG93bihkZXYpOwoJ
aWYgKCFyYykgewoJCWRldi0+ZGVwX2xpbmtfdXAgPSBmYWxzZTsKCQlkZXYtPmFjdGl2ZV90YXJn
ZXQgPSBOVUxMOwoJCWRldi0+cmZfbW9kZSA9IE5GQ19SRl9OT05FOwoJCW5mY19sbGNwX21hY19p
c19kb3duKGRldik7CgkJbmZjX2dlbmxfZGVwX2xpbmtfZG93bl9ldmVudChkZXYpOwoJfQoKZXJy
b3I6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CgoJcmV0dXJuIHJjOwp9CgppbnQgbmZjX2Rl
cF9saW5rX2lzX3VwKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiB0YXJnZXRfaWR4LAoJCSAgICAg
ICB1OCBjb21tX21vZGUsIHU4IHJmX21vZGUpCnsKCWRldi0+ZGVwX2xpbmtfdXAgPSB0cnVlOwoK
CWlmICghZGV2LT5hY3RpdmVfdGFyZ2V0ICYmIHJmX21vZGUgPT0gTkZDX1JGX0lOSVRJQVRPUikg
ewoJCXN0cnVjdCBuZmNfdGFyZ2V0ICp0YXJnZXQ7CgoJCXRhcmdldCA9IG5mY19maW5kX3Rhcmdl
dChkZXYsIHRhcmdldF9pZHgpOwoJCWlmICh0YXJnZXQgPT0gTlVMTCkKCQkJcmV0dXJuIC1FTk9U
Q09OTjsKCgkJZGV2LT5hY3RpdmVfdGFyZ2V0ID0gdGFyZ2V0OwoJfQoKCWRldi0+cG9sbGluZyA9
IGZhbHNlOwoJZGV2LT5yZl9tb2RlID0gcmZfbW9kZTsKCgluZmNfbGxjcF9tYWNfaXNfdXAoZGV2
LCB0YXJnZXRfaWR4LCBjb21tX21vZGUsIHJmX21vZGUpOwoKCXJldHVybiBuZmNfZ2VubF9kZXBf
bGlua191cF9ldmVudChkZXYsIHRhcmdldF9pZHgsIGNvbW1fbW9kZSwgcmZfbW9kZSk7Cn0KRVhQ
T1JUX1NZTUJPTChuZmNfZGVwX2xpbmtfaXNfdXApOwoKLyoqCiAqIG5mY19hY3RpdmF0ZV90YXJn
ZXQgLSBwcmVwYXJlIHRoZSB0YXJnZXQgZm9yIGRhdGEgZXhjaGFuZ2UKICoKICogQGRldjogVGhl
IG5mYyBkZXZpY2UgdGhhdCBmb3VuZCB0aGUgdGFyZ2V0CiAqIEB0YXJnZXRfaWR4OiBpbmRleCBv
ZiB0aGUgdGFyZ2V0IHRoYXQgbXVzdCBiZSBhY3RpdmF0ZWQKICogQHByb3RvY29sOiBuZmMgcHJv
dG9jb2wgdGhhdCB3aWxsIGJlIHVzZWQgZm9yIGRhdGEgZXhjaGFuZ2UKICovCmludCBuZmNfYWN0
aXZhdGVfdGFyZ2V0KHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiB0YXJnZXRfaWR4LCB1MzIgcHJv
dG9jb2wpCnsKCWludCByYzsKCXN0cnVjdCBuZmNfdGFyZ2V0ICp0YXJnZXQ7CgoJcHJfZGVidWco
ImRldl9uYW1lPSVzIHRhcmdldF9pZHg9JXUgcHJvdG9jb2w9JXVcbiIsCgkJIGRldl9uYW1lKCZk
ZXYtPmRldiksIHRhcmdldF9pZHgsIHByb3RvY29sKTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYp
OwoKCWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJv
cjsKCX0KCglpZiAoZGV2LT5hY3RpdmVfdGFyZ2V0KSB7CgkJcmMgPSAtRUJVU1k7CgkJZ290byBl
cnJvcjsKCX0KCgl0YXJnZXQgPSBuZmNfZmluZF90YXJnZXQoZGV2LCB0YXJnZXRfaWR4KTsKCWlm
ICh0YXJnZXQgPT0gTlVMTCkgewoJCXJjID0gLUVOT1RDT05OOwoJCWdvdG8gZXJyb3I7Cgl9CgoJ
cmMgPSBkZXYtPm9wcy0+YWN0aXZhdGVfdGFyZ2V0KGRldiwgdGFyZ2V0LCBwcm90b2NvbCk7Cglp
ZiAoIXJjKSB7CgkJZGV2LT5hY3RpdmVfdGFyZ2V0ID0gdGFyZ2V0OwoJCWRldi0+cmZfbW9kZSA9
IE5GQ19SRl9JTklUSUFUT1I7CgoJCWlmIChkZXYtPm9wcy0+Y2hlY2tfcHJlc2VuY2UgJiYgIWRl
di0+c2h1dHRpbmdfZG93bikKCQkJbW9kX3RpbWVyKCZkZXYtPmNoZWNrX3ByZXNfdGltZXIsIGpp
ZmZpZXMgKwoJCQkJICBtc2Vjc190b19qaWZmaWVzKE5GQ19DSEVDS19QUkVTX0ZSRVFfTVMpKTsK
CX0KCmVycm9yOgoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJcmV0dXJuIHJjOwp9CgovKioK
ICogbmZjX2RlYWN0aXZhdGVfdGFyZ2V0IC0gZGVhY3RpdmF0ZSBhIG5mYyB0YXJnZXQKICoKICog
QGRldjogVGhlIG5mYyBkZXZpY2UgdGhhdCBmb3VuZCB0aGUgdGFyZ2V0CiAqIEB0YXJnZXRfaWR4
OiBpbmRleCBvZiB0aGUgdGFyZ2V0IHRoYXQgbXVzdCBiZSBkZWFjdGl2YXRlZAogKiBAbW9kZTog
aWRsZSBvciBzbGVlcD8KICovCmludCBuZmNfZGVhY3RpdmF0ZV90YXJnZXQoc3RydWN0IG5mY19k
ZXYgKmRldiwgdTMyIHRhcmdldF9pZHgsIHU4IG1vZGUpCnsKCWludCByYyA9IDA7CgoJcHJfZGVi
dWcoImRldl9uYW1lPSVzIHRhcmdldF9pZHg9JXVcbiIsCgkJIGRldl9uYW1lKCZkZXYtPmRldiks
IHRhcmdldF9pZHgpOwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CgoJaWYgKGRldi0+c2h1dHRp
bmdfZG93bikgewoJCXJjID0gLUVOT0RFVjsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChkZXYtPmFj
dGl2ZV90YXJnZXQgPT0gTlVMTCkgewoJCXJjID0gLUVOT1RDT05OOwoJCWdvdG8gZXJyb3I7Cgl9
CgoJaWYgKGRldi0+YWN0aXZlX3RhcmdldC0+aWR4ICE9IHRhcmdldF9pZHgpIHsKCQlyYyA9IC1F
Tk9UQ09OTjsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChkZXYtPm9wcy0+Y2hlY2tfcHJlc2VuY2Up
CgkJZGVsX3RpbWVyX3N5bmMoJmRldi0+Y2hlY2tfcHJlc190aW1lcik7CgoJZGV2LT5vcHMtPmRl
YWN0aXZhdGVfdGFyZ2V0KGRldiwgZGV2LT5hY3RpdmVfdGFyZ2V0LCBtb2RlKTsKCWRldi0+YWN0
aXZlX3RhcmdldCA9IE5VTEw7CgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJl
dHVybiByYzsKfQoKLyoqCiAqIG5mY19kYXRhX2V4Y2hhbmdlIC0gdHJhbnNjZWl2ZSBkYXRhCiAq
CiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRoYXQgZm91bmQgdGhlIHRhcmdldAogKiBAdGFyZ2V0
X2lkeDogaW5kZXggb2YgdGhlIHRhcmdldAogKiBAc2tiOiBkYXRhIHRvIGJlIHNlbnQKICogQGNi
OiBjYWxsYmFjayBjYWxsZWQgd2hlbiB0aGUgcmVzcG9uc2UgaXMgcmVjZWl2ZWQKICogQGNiX2Nv
bnRleHQ6IHBhcmFtZXRlciBmb3IgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uCiAqCiAqIFRoZSB1c2Vy
IG11c3Qgd2FpdCBmb3IgdGhlIGNhbGxiYWNrIGJlZm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24g
YWdhaW4uCiAqLwppbnQgbmZjX2RhdGFfZXhjaGFuZ2Uoc3RydWN0IG5mY19kZXYgKmRldiwgdTMy
IHRhcmdldF9pZHgsIHN0cnVjdCBza19idWZmICpza2IsCgkJICAgICAgZGF0YV9leGNoYW5nZV9j
Yl90IGNiLCB2b2lkICpjYl9jb250ZXh0KQp7CglpbnQgcmM7CgoJcHJfZGVidWcoImRldl9uYW1l
PSVzIHRhcmdldF9pZHg9JXUgc2tiLT5sZW49JXVcbiIsCgkJIGRldl9uYW1lKCZkZXYtPmRldiks
IHRhcmdldF9pZHgsIHNrYi0+bGVuKTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmIChk
ZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJa2ZyZWVfc2tiKHNrYik7CgkJ
Z290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5yZl9tb2RlID09IE5GQ19SRl9JTklUSUFUT1IgJiYg
ZGV2LT5hY3RpdmVfdGFyZ2V0ICE9IE5VTEwpIHsKCQlpZiAoZGV2LT5hY3RpdmVfdGFyZ2V0LT5p
ZHggIT0gdGFyZ2V0X2lkeCkgewoJCQlyYyA9IC1FQUREUk5PVEFWQUlMOwoJCQlrZnJlZV9za2Io
c2tiKTsKCQkJZ290byBlcnJvcjsKCQl9CgoJCWlmIChkZXYtPm9wcy0+Y2hlY2tfcHJlc2VuY2Up
CgkJCWRlbF90aW1lcl9zeW5jKCZkZXYtPmNoZWNrX3ByZXNfdGltZXIpOwoKCQlyYyA9IGRldi0+
b3BzLT5pbV90cmFuc2NlaXZlKGRldiwgZGV2LT5hY3RpdmVfdGFyZ2V0LCBza2IsIGNiLAoJCQkJ
CSAgICAgY2JfY29udGV4dCk7CgoJCWlmICghcmMgJiYgZGV2LT5vcHMtPmNoZWNrX3ByZXNlbmNl
ICYmICFkZXYtPnNodXR0aW5nX2Rvd24pCgkJCW1vZF90aW1lcigmZGV2LT5jaGVja19wcmVzX3Rp
bWVyLCBqaWZmaWVzICsKCQkJCSAgbXNlY3NfdG9famlmZmllcyhORkNfQ0hFQ0tfUFJFU19GUkVR
X01TKSk7Cgl9IGVsc2UgaWYgKGRldi0+cmZfbW9kZSA9PSBORkNfUkZfVEFSR0VUICYmIGRldi0+
b3BzLT50bV9zZW5kICE9IE5VTEwpIHsKCQlyYyA9IGRldi0+b3BzLT50bV9zZW5kKGRldiwgc2ti
KTsKCX0gZWxzZSB7CgkJcmMgPSAtRU5PVENPTk47CgkJa2ZyZWVfc2tiKHNrYik7CgkJZ290byBl
cnJvcjsKCX0KCgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsK
fQoKc3RydWN0IG5mY19zZSAqbmZjX2ZpbmRfc2Uoc3RydWN0IG5mY19kZXYgKmRldiwgdTMyIHNl
X2lkeCkKewoJc3RydWN0IG5mY19zZSAqc2U7CgoJbGlzdF9mb3JfZWFjaF9lbnRyeShzZSwgJmRl
di0+c2VjdXJlX2VsZW1lbnRzLCBsaXN0KQoJCWlmIChzZS0+aWR4ID09IHNlX2lkeCkKCQkJcmV0
dXJuIHNlOwoKCXJldHVybiBOVUxMOwp9CkVYUE9SVF9TWU1CT0wobmZjX2ZpbmRfc2UpOwoKaW50
IG5mY19lbmFibGVfc2Uoc3RydWN0IG5mY19kZXYgKmRldiwgdTMyIHNlX2lkeCkKewoJc3RydWN0
IG5mY19zZSAqc2U7CglpbnQgcmM7CgoJcHJfZGVidWcoIiVzIHNlIGluZGV4ICVkXG4iLCBkZXZf
bmFtZSgmZGV2LT5kZXYpLCBzZV9pZHgpOwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CgoJaWYg
KGRldi0+c2h1dHRpbmdfZG93bikgewoJCXJjID0gLUVOT0RFVjsKCQlnb3RvIGVycm9yOwoJfQoK
CWlmICghZGV2LT5kZXZfdXApIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglp
ZiAoZGV2LT5wb2xsaW5nKSB7CgkJcmMgPSAtRUJVU1k7CgkJZ290byBlcnJvcjsKCX0KCglpZiAo
IWRldi0+b3BzLT5lbmFibGVfc2UgfHwgIWRldi0+b3BzLT5kaXNhYmxlX3NlKSB7CgkJcmMgPSAt
RU9QTk9UU1VQUDsKCQlnb3RvIGVycm9yOwoJfQoKCXNlID0gbmZjX2ZpbmRfc2UoZGV2LCBzZV9p
ZHgpOwoJaWYgKCFzZSkgewoJCXJjID0gLUVJTlZBTDsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChz
ZS0+c3RhdGUgPT0gTkZDX1NFX0VOQUJMRUQpIHsKCQlyYyA9IC1FQUxSRUFEWTsKCQlnb3RvIGVy
cm9yOwoJfQoKCXJjID0gZGV2LT5vcHMtPmVuYWJsZV9zZShkZXYsIHNlX2lkeCk7CglpZiAocmMg
Pj0gMCkKCQlzZS0+c3RhdGUgPSBORkNfU0VfRU5BQkxFRDsKCmVycm9yOgoJZGV2aWNlX3VubG9j
aygmZGV2LT5kZXYpOwoJcmV0dXJuIHJjOwp9CgppbnQgbmZjX2Rpc2FibGVfc2Uoc3RydWN0IG5m
Y19kZXYgKmRldiwgdTMyIHNlX2lkeCkKewoJc3RydWN0IG5mY19zZSAqc2U7CglpbnQgcmM7CgoJ
cHJfZGVidWcoIiVzIHNlIGluZGV4ICVkXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpLCBzZV9pZHgp
OwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CgoJaWYgKGRldi0+c2h1dHRpbmdfZG93bikgewoJ
CXJjID0gLUVOT0RFVjsKCQlnb3RvIGVycm9yOwoJfQoKCWlmICghZGV2LT5kZXZfdXApIHsKCQly
YyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoIWRldi0+b3BzLT5lbmFibGVfc2Ug
fHwgIWRldi0+b3BzLT5kaXNhYmxlX3NlKSB7CgkJcmMgPSAtRU9QTk9UU1VQUDsKCQlnb3RvIGVy
cm9yOwoJfQoKCXNlID0gbmZjX2ZpbmRfc2UoZGV2LCBzZV9pZHgpOwoJaWYgKCFzZSkgewoJCXJj
ID0gLUVJTlZBTDsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChzZS0+c3RhdGUgPT0gTkZDX1NFX0RJ
U0FCTEVEKSB7CgkJcmMgPSAtRUFMUkVBRFk7CgkJZ290byBlcnJvcjsKCX0KCglyYyA9IGRldi0+
b3BzLT5kaXNhYmxlX3NlKGRldiwgc2VfaWR4KTsKCWlmIChyYyA+PSAwKQoJCXNlLT5zdGF0ZSA9
IE5GQ19TRV9ESVNBQkxFRDsKCmVycm9yOgoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJcmV0
dXJuIHJjOwp9CgppbnQgbmZjX3NldF9yZW1vdGVfZ2VuZXJhbF9ieXRlcyhzdHJ1Y3QgbmZjX2Rl
diAqZGV2LCBjb25zdCB1OCAqZ2IsIHU4IGdiX2xlbikKewoJcHJfZGVidWcoImRldl9uYW1lPSVz
IGdiX2xlbj0lZFxuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSwgZ2JfbGVuKTsKCglyZXR1cm4gbmZj
X2xsY3Bfc2V0X3JlbW90ZV9nYihkZXYsIGdiLCBnYl9sZW4pOwp9CkVYUE9SVF9TWU1CT0wobmZj
X3NldF9yZW1vdGVfZ2VuZXJhbF9ieXRlcyk7Cgp1OCAqbmZjX2dldF9sb2NhbF9nZW5lcmFsX2J5
dGVzKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHNpemVfdCAqZ2JfbGVuKQp7Cglwcl9kZWJ1ZygiZGV2
X25hbWU9JXNcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCXJldHVybiBuZmNfbGxjcF9nZW5l
cmFsX2J5dGVzKGRldiwgZ2JfbGVuKTsKfQpFWFBPUlRfU1lNQk9MKG5mY19nZXRfbG9jYWxfZ2Vu
ZXJhbF9ieXRlcyk7CgppbnQgbmZjX3RtX2RhdGFfcmVjZWl2ZWQoc3RydWN0IG5mY19kZXYgKmRl
diwgc3RydWN0IHNrX2J1ZmYgKnNrYikKewoJLyogT25seSBMTENQIHRhcmdldCBtb2RlIGZvciBu
b3cgKi8KCWlmIChkZXYtPmRlcF9saW5rX3VwID09IGZhbHNlKSB7CgkJa2ZyZWVfc2tiKHNrYik7
CgkJcmV0dXJuIC1FTk9MSU5LOwoJfQoKCXJldHVybiBuZmNfbGxjcF9kYXRhX3JlY2VpdmVkKGRl
diwgc2tiKTsKfQpFWFBPUlRfU1lNQk9MKG5mY190bV9kYXRhX3JlY2VpdmVkKTsKCmludCBuZmNf
dG1fYWN0aXZhdGVkKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiBwcm90b2NvbCwgdTggY29tbV9t
b2RlLAoJCSAgICAgY29uc3QgdTggKmdiLCBzaXplX3QgZ2JfbGVuKQp7CglpbnQgcmM7CgoJZGV2
aWNlX2xvY2soJmRldi0+ZGV2KTsKCglkZXYtPnBvbGxpbmcgPSBmYWxzZTsKCglpZiAoZ2IgIT0g
TlVMTCkgewoJCXJjID0gbmZjX3NldF9yZW1vdGVfZ2VuZXJhbF9ieXRlcyhkZXYsIGdiLCBnYl9s
ZW4pOwoJCWlmIChyYyA8IDApCgkJCWdvdG8gb3V0OwoJfQoKCWRldi0+cmZfbW9kZSA9IE5GQ19S
Rl9UQVJHRVQ7CgoJaWYgKHByb3RvY29sID09IE5GQ19QUk9UT19ORkNfREVQX01BU0spCgkJbmZj
X2RlcF9saW5rX2lzX3VwKGRldiwgMCwgY29tbV9tb2RlLCBORkNfUkZfVEFSR0VUKTsKCglyYyA9
IG5mY19nZW5sX3RtX2FjdGl2YXRlZChkZXYsIHByb3RvY29sKTsKCm91dDoKCWRldmljZV91bmxv
Y2soJmRldi0+ZGV2KTsKCglyZXR1cm4gcmM7Cn0KRVhQT1JUX1NZTUJPTChuZmNfdG1fYWN0aXZh
dGVkKTsKCmludCBuZmNfdG1fZGVhY3RpdmF0ZWQoc3RydWN0IG5mY19kZXYgKmRldikKewoJZGV2
LT5kZXBfbGlua191cCA9IGZhbHNlOwoJZGV2LT5yZl9tb2RlID0gTkZDX1JGX05PTkU7CgoJcmV0
dXJuIG5mY19nZW5sX3RtX2RlYWN0aXZhdGVkKGRldik7Cn0KRVhQT1JUX1NZTUJPTChuZmNfdG1f
ZGVhY3RpdmF0ZWQpOwoKLyoqCiAqIG5mY19hbGxvY19zZW5kX3NrYiAtIGFsbG9jYXRlIGEgc2ti
IGZvciBkYXRhIGV4Y2hhbmdlIHJlc3BvbnNlcwogKgogKiBAZGV2OiBkZXZpY2Ugc2VuZGluZyB0
aGUgcmVzcG9uc2UKICogQHNrOiBzb2NrZXQgc2VuZGluZyB0aGUgcmVzcG9uc2UKICogQGZsYWdz
OiBNU0dfRE9OVFdBSVQgZmxhZwogKiBAc2l6ZTogc2l6ZSB0byBhbGxvY2F0ZQogKiBAZXJyOiBw
b2ludGVyIHRvIG1lbW9yeSB0byBzdG9yZSB0aGUgZXJyb3IgY29kZQogKi8Kc3RydWN0IHNrX2J1
ZmYgKm5mY19hbGxvY19zZW5kX3NrYihzdHJ1Y3QgbmZjX2RldiAqZGV2LCBzdHJ1Y3Qgc29jayAq
c2ssCgkJCQkgICB1bnNpZ25lZCBpbnQgZmxhZ3MsIHVuc2lnbmVkIGludCBzaXplLAoJCQkJICAg
dW5zaWduZWQgaW50ICplcnIpCnsKCXN0cnVjdCBza19idWZmICpza2I7Cgl1bnNpZ25lZCBpbnQg
dG90YWxfc2l6ZTsKCgl0b3RhbF9zaXplID0gc2l6ZSArCgkJZGV2LT50eF9oZWFkcm9vbSArIGRl
di0+dHhfdGFpbHJvb20gKyBORkNfSEVBREVSX1NJWkU7CgoJc2tiID0gc29ja19hbGxvY19zZW5k
X3NrYihzaywgdG90YWxfc2l6ZSwgZmxhZ3MgJiBNU0dfRE9OVFdBSVQsIGVycik7CglpZiAoc2ti
KQoJCXNrYl9yZXNlcnZlKHNrYiwgZGV2LT50eF9oZWFkcm9vbSArIE5GQ19IRUFERVJfU0laRSk7
CgoJcmV0dXJuIHNrYjsKfQoKLyoqCiAqIG5mY19hbGxvY19yZWN2X3NrYiAtIGFsbG9jYXRlIGEg
c2tiIGZvciBkYXRhIGV4Y2hhbmdlIHJlc3BvbnNlcwogKgogKiBAc2l6ZTogc2l6ZSB0byBhbGxv
Y2F0ZQogKiBAZ2ZwOiBnZnAgZmxhZ3MKICovCnN0cnVjdCBza19idWZmICpuZmNfYWxsb2NfcmVj
dl9za2IodW5zaWduZWQgaW50IHNpemUsIGdmcF90IGdmcCkKewoJc3RydWN0IHNrX2J1ZmYgKnNr
YjsKCXVuc2lnbmVkIGludCB0b3RhbF9zaXplOwoKCXRvdGFsX3NpemUgPSBzaXplICsgMTsKCXNr
YiA9IGFsbG9jX3NrYih0b3RhbF9zaXplLCBnZnApOwoKCWlmIChza2IpCgkJc2tiX3Jlc2VydmUo
c2tiLCAxKTsKCglyZXR1cm4gc2tiOwp9CkVYUE9SVF9TWU1CT0wobmZjX2FsbG9jX3JlY3Zfc2ti
KTsKCi8qKgogKiBuZmNfdGFyZ2V0c19mb3VuZCAtIGluZm9ybSB0aGF0IHRhcmdldHMgd2VyZSBm
b3VuZAogKgogKiBAZGV2OiBUaGUgbmZjIGRldmljZSB0aGF0IGZvdW5kIHRoZSB0YXJnZXRzCiAq
IEB0YXJnZXRzOiBhcnJheSBvZiBuZmMgdGFyZ2V0cyBmb3VuZAogKiBAbl90YXJnZXRzOiB0YXJn
ZXRzIGFycmF5IHNpemUKICoKICogVGhlIGRldmljZSBkcml2ZXIgbXVzdCBjYWxsIHRoaXMgZnVu
Y3Rpb24gd2hlbiBvbmUgb3IgbWFueSBuZmMgdGFyZ2V0cwogKiBhcmUgZm91bmQuIEFmdGVyIGNh
bGxpbmcgdGhpcyBmdW5jdGlvbiwgdGhlIGRldmljZSBkcml2ZXIgbXVzdCBzdG9wCiAqIHBvbGxp
bmcgZm9yIHRhcmdldHMuCiAqIE5PVEU6IFRoaXMgZnVuY3Rpb24gY2FuIGJlIGNhbGxlZCB3aXRo
IHRhcmdldHM9TlVMTCBhbmQgbl90YXJnZXRzPTAgdG8KICogbm90aWZ5IGEgZHJpdmVyIGVycm9y
LCBtZWFuaW5nIHRoYXQgdGhlIHBvbGxpbmcgb3BlcmF0aW9uIGNhbm5vdCBjb21wbGV0ZS4KICog
SU1QT1JUQU5UOiB0aGlzIGZ1bmN0aW9uIG11c3Qgbm90IGJlIGNhbGxlZCBmcm9tIGFuIGF0b21p
YyBjb250ZXh0LgogKiBJbiBhZGRpdGlvbiwgaXQgbXVzdCBhbHNvIG5vdCBiZSBjYWxsZWQgZnJv
bSBhIGNvbnRleHQgdGhhdCB3b3VsZCBwcmV2ZW50CiAqIHRoZSBORkMgQ29yZSB0byBjYWxsIG90
aGVyIG5mYyBvcHMgZW50cnkgcG9pbnQgY29uY3VycmVudGx5LgogKi8KaW50IG5mY190YXJnZXRz
X2ZvdW5kKHN0cnVjdCBuZmNfZGV2ICpkZXYsCgkJICAgICAgc3RydWN0IG5mY190YXJnZXQgKnRh
cmdldHMsIGludCBuX3RhcmdldHMpCnsKCWludCBpOwoKCXByX2RlYnVnKCJkZXZfbmFtZT0lcyBu
X3RhcmdldHM9JWRcbiIsIGRldl9uYW1lKCZkZXYtPmRldiksIG5fdGFyZ2V0cyk7CgoJZm9yIChp
ID0gMDsgaSA8IG5fdGFyZ2V0czsgaSsrKQoJCXRhcmdldHNbaV0uaWR4ID0gZGV2LT50YXJnZXRf
bmV4dF9pZHgrKzsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmIChkZXYtPnBvbGxpbmcg
PT0gZmFsc2UpIHsKCQlkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CgkJcmV0dXJuIDA7Cgl9CgoJ
ZGV2LT5wb2xsaW5nID0gZmFsc2U7CgoJZGV2LT50YXJnZXRzX2dlbmVyYXRpb24rKzsKCglrZnJl
ZShkZXYtPnRhcmdldHMpOwoJZGV2LT50YXJnZXRzID0gTlVMTDsKCglpZiAodGFyZ2V0cykgewoJ
CWRldi0+dGFyZ2V0cyA9IGttZW1kdXAodGFyZ2V0cywKCQkJCSAgICAgICBuX3RhcmdldHMgKiBz
aXplb2Yoc3RydWN0IG5mY190YXJnZXQpLAoJCQkJICAgICAgIEdGUF9BVE9NSUMpOwoKCQlpZiAo
IWRldi0+dGFyZ2V0cykgewoJCQlkZXYtPm5fdGFyZ2V0cyA9IDA7CgkJCWRldmljZV91bmxvY2so
JmRldi0+ZGV2KTsKCQkJcmV0dXJuIC1FTk9NRU07CgkJfQoJfQoKCWRldi0+bl90YXJnZXRzID0g
bl90YXJnZXRzOwoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoKCW5mY19nZW5sX3RhcmdldHNf
Zm91bmQoZGV2KTsKCglyZXR1cm4gMDsKfQpFWFBPUlRfU1lNQk9MKG5mY190YXJnZXRzX2ZvdW5k
KTsKCi8qKgogKiBuZmNfdGFyZ2V0X2xvc3QgLSBpbmZvcm0gdGhhdCBhbiBhY3RpdmF0ZWQgdGFy
Z2V0IHdlbnQgb3V0IG9mIGZpZWxkCiAqCiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRoYXQgaGFk
IHRoZSBhY3RpdmF0ZWQgdGFyZ2V0IGluIGZpZWxkCiAqIEB0YXJnZXRfaWR4OiB0aGUgbmZjIGlu
ZGV4IG9mIHRoZSB0YXJnZXQKICoKICogVGhlIGRldmljZSBkcml2ZXIgbXVzdCBjYWxsIHRoaXMg
ZnVuY3Rpb24gd2hlbiB0aGUgYWN0aXZhdGVkIHRhcmdldAogKiBnb2VzIG91dCBvZiB0aGUgZmll
bGQuCiAqIElNUE9SVEFOVDogdGhpcyBmdW5jdGlvbiBtdXN0IG5vdCBiZSBjYWxsZWQgZnJvbSBh
biBhdG9taWMgY29udGV4dC4KICogSW4gYWRkaXRpb24sIGl0IG11c3QgYWxzbyBub3QgYmUgY2Fs
bGVkIGZyb20gYSBjb250ZXh0IHRoYXQgd291bGQgcHJldmVudAogKiB0aGUgTkZDIENvcmUgdG8g
Y2FsbCBvdGhlciBuZmMgb3BzIGVudHJ5IHBvaW50IGNvbmN1cnJlbnRseS4KICovCmludCBuZmNf
dGFyZ2V0X2xvc3Qoc3RydWN0IG5mY19kZXYgKmRldiwgdTMyIHRhcmdldF9pZHgpCnsKCWNvbnN0
IHN0cnVjdCBuZmNfdGFyZ2V0ICp0ZzsKCWludCBpOwoKCXByX2RlYnVnKCJkZXZfbmFtZSAlcyBu
X3RhcmdldCAlZFxuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSwgdGFyZ2V0X2lkeCk7CgoJZGV2aWNl
X2xvY2soJmRldi0+ZGV2KTsKCglmb3IgKGkgPSAwOyBpIDwgZGV2LT5uX3RhcmdldHM7IGkrKykg
ewoJCXRnID0gJmRldi0+dGFyZ2V0c1tpXTsKCQlpZiAodGctPmlkeCA9PSB0YXJnZXRfaWR4KQoJ
CQlicmVhazsKCX0KCglpZiAoaSA9PSBkZXYtPm5fdGFyZ2V0cykgewoJCWRldmljZV91bmxvY2so
JmRldi0+ZGV2KTsKCQlyZXR1cm4gLUVJTlZBTDsKCX0KCglkZXYtPnRhcmdldHNfZ2VuZXJhdGlv
bisrOwoJZGV2LT5uX3RhcmdldHMtLTsKCWRldi0+YWN0aXZlX3RhcmdldCA9IE5VTEw7CgoJaWYg
KGRldi0+bl90YXJnZXRzKSB7CgkJbWVtY3B5KCZkZXYtPnRhcmdldHNbaV0sICZkZXYtPnRhcmdl
dHNbaSArIDFdLAoJCSAgICAgICAoZGV2LT5uX3RhcmdldHMgLSBpKSAqIHNpemVvZihzdHJ1Y3Qg
bmZjX3RhcmdldCkpOwoJfSBlbHNlIHsKCQlrZnJlZShkZXYtPnRhcmdldHMpOwoJCWRldi0+dGFy
Z2V0cyA9IE5VTEw7Cgl9CgoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoKCW5mY19nZW5sX3Rh
cmdldF9sb3N0KGRldiwgdGFyZ2V0X2lkeCk7CgoJcmV0dXJuIDA7Cn0KRVhQT1JUX1NZTUJPTChu
ZmNfdGFyZ2V0X2xvc3QpOwoKaW5saW5lIHZvaWQgbmZjX2RyaXZlcl9mYWlsdXJlKHN0cnVjdCBu
ZmNfZGV2ICpkZXYsIGludCBlcnIpCnsKCW5mY190YXJnZXRzX2ZvdW5kKGRldiwgTlVMTCwgMCk7
Cn0KRVhQT1JUX1NZTUJPTChuZmNfZHJpdmVyX2ZhaWx1cmUpOwoKaW50IG5mY19hZGRfc2Uoc3Ry
dWN0IG5mY19kZXYgKmRldiwgdTMyIHNlX2lkeCwgdTE2IHR5cGUpCnsKCXN0cnVjdCBuZmNfc2Ug
KnNlOwoJaW50IHJjOwoKCXByX2RlYnVnKCIlcyBzZSBpbmRleCAlZFxuIiwgZGV2X25hbWUoJmRl
di0+ZGV2KSwgc2VfaWR4KTsKCglzZSA9IG5mY19maW5kX3NlKGRldiwgc2VfaWR4KTsKCWlmIChz
ZSkKCQlyZXR1cm4gLUVBTFJFQURZOwoKCXNlID0ga3phbGxvYyhzaXplb2Yoc3RydWN0IG5mY19z
ZSksIEdGUF9LRVJORUwpOwoJaWYgKCFzZSkKCQlyZXR1cm4gLUVOT01FTTsKCglzZS0+aWR4ID0g
c2VfaWR4OwoJc2UtPnR5cGUgPSB0eXBlOwoJc2UtPnN0YXRlID0gTkZDX1NFX0RJU0FCTEVEOwoJ
SU5JVF9MSVNUX0hFQUQoJnNlLT5saXN0KTsKCglsaXN0X2FkZCgmc2UtPmxpc3QsICZkZXYtPnNl
Y3VyZV9lbGVtZW50cyk7CgoJcmMgPSBuZmNfZ2VubF9zZV9hZGRlZChkZXYsIHNlX2lkeCwgdHlw
ZSk7CglpZiAocmMgPCAwKSB7CgkJbGlzdF9kZWwoJnNlLT5saXN0KTsKCQlrZnJlZShzZSk7CgoJ
CXJldHVybiByYzsKCX0KCglyZXR1cm4gMDsKfQpFWFBPUlRfU1lNQk9MKG5mY19hZGRfc2UpOwoK
aW50IG5mY19yZW1vdmVfc2Uoc3RydWN0IG5mY19kZXYgKmRldiwgdTMyIHNlX2lkeCkKewoJc3Ry
dWN0IG5mY19zZSAqc2UsICpuOwoJaW50IHJjOwoKCXByX2RlYnVnKCIlcyBzZSBpbmRleCAlZFxu
IiwgZGV2X25hbWUoJmRldi0+ZGV2KSwgc2VfaWR4KTsKCglsaXN0X2Zvcl9lYWNoX2VudHJ5X3Nh
ZmUoc2UsIG4sICZkZXYtPnNlY3VyZV9lbGVtZW50cywgbGlzdCkKCQlpZiAoc2UtPmlkeCA9PSBz
ZV9pZHgpIHsKCQkJcmMgPSBuZmNfZ2VubF9zZV9yZW1vdmVkKGRldiwgc2VfaWR4KTsKCQkJaWYg
KHJjIDwgMCkKCQkJCXJldHVybiByYzsKCgkJCWxpc3RfZGVsKCZzZS0+bGlzdCk7CgkJCWtmcmVl
KHNlKTsKCgkJCXJldHVybiAwOwoJCX0KCglyZXR1cm4gLUVJTlZBTDsKfQpFWFBPUlRfU1lNQk9M
KG5mY19yZW1vdmVfc2UpOwoKaW50IG5mY19zZV90cmFuc2FjdGlvbihzdHJ1Y3QgbmZjX2RldiAq
ZGV2LCB1OCBzZV9pZHgsCgkJICAgICAgIHN0cnVjdCBuZmNfZXZ0X3RyYW5zYWN0aW9uICpldnRf
dHJhbnNhY3Rpb24pCnsKCWludCByYzsKCglwcl9kZWJ1ZygidHJhbnNhY3Rpb246ICV4XG4iLCBz
ZV9pZHgpOwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CgoJaWYgKCFldnRfdHJhbnNhY3Rpb24p
IHsKCQlyYyA9IC1FUFJPVE87CgkJZ290byBvdXQ7Cgl9CgoJcmMgPSBuZmNfZ2VubF9zZV90cmFu
c2FjdGlvbihkZXYsIHNlX2lkeCwgZXZ0X3RyYW5zYWN0aW9uKTsKb3V0OgoJZGV2aWNlX3VubG9j
aygmZGV2LT5kZXYpOwoJcmV0dXJuIHJjOwp9CkVYUE9SVF9TWU1CT0wobmZjX3NlX3RyYW5zYWN0
aW9uKTsKCmludCBuZmNfc2VfY29ubmVjdGl2aXR5KHN0cnVjdCBuZmNfZGV2ICpkZXYsIHU4IHNl
X2lkeCkKewoJaW50IHJjOwoKCXByX2RlYnVnKCJjb25uZWN0aXZpdHk6ICV4XG4iLCBzZV9pZHgp
OwoKCWRldmljZV9sb2NrKCZkZXYtPmRldik7CglyYyA9IG5mY19nZW5sX3NlX2Nvbm5lY3Rpdml0
eShkZXYsIHNlX2lkeCk7CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CglyZXR1cm4gcmM7Cn0K
RVhQT1JUX1NZTUJPTChuZmNfc2VfY29ubmVjdGl2aXR5KTsKCnN0YXRpYyB2b2lkIG5mY19yZWxl
YXNlKHN0cnVjdCBkZXZpY2UgKmQpCnsKCXN0cnVjdCBuZmNfZGV2ICpkZXYgPSB0b19uZmNfZGV2
KGQpOwoJc3RydWN0IG5mY19zZSAqc2UsICpuOwoKCXByX2RlYnVnKCJkZXZfbmFtZT0lc1xuIiwg
ZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJbmZjX2dlbmxfZGF0YV9leGl0KCZkZXYtPmdlbmxfZGF0
YSk7CglrZnJlZShkZXYtPnRhcmdldHMpOwoKCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShzZSwg
biwgJmRldi0+c2VjdXJlX2VsZW1lbnRzLCBsaXN0KSB7CgkJCW5mY19nZW5sX3NlX3JlbW92ZWQo
ZGV2LCBzZS0+aWR4KTsKCQkJbGlzdF9kZWwoJnNlLT5saXN0KTsKCQkJa2ZyZWUoc2UpOwoJfQoK
CWlkYV9mcmVlKCZuZmNfaW5kZXhfaWRhLCBkZXYtPmlkeCk7CgoJa2ZyZWUoZGV2KTsKfQoKc3Rh
dGljIHZvaWQgbmZjX2NoZWNrX3ByZXNfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCnsK
CXN0cnVjdCBuZmNfZGV2ICpkZXYgPSBjb250YWluZXJfb2Yod29yaywgc3RydWN0IG5mY19kZXYs
CgkJCQkJICAgY2hlY2tfcHJlc193b3JrKTsKCWludCByYzsKCglkZXZpY2VfbG9jaygmZGV2LT5k
ZXYpOwoKCWlmIChkZXYtPmFjdGl2ZV90YXJnZXQgJiYgdGltZXJfcGVuZGluZygmZGV2LT5jaGVj
a19wcmVzX3RpbWVyKSA9PSAwKSB7CgkJcmMgPSBkZXYtPm9wcy0+Y2hlY2tfcHJlc2VuY2UoZGV2
LCBkZXYtPmFjdGl2ZV90YXJnZXQpOwoJCWlmIChyYyA9PSAtRU9QTk9UU1VQUCkKCQkJZ290byBl
eGl0OwoJCWlmIChyYykgewoJCQl1MzIgYWN0aXZlX3RhcmdldF9pZHggPSBkZXYtPmFjdGl2ZV90
YXJnZXQtPmlkeDsKCQkJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJCQluZmNfdGFyZ2V0X2xv
c3QoZGV2LCBhY3RpdmVfdGFyZ2V0X2lkeCk7CgkJCXJldHVybjsKCQl9CgoJCWlmICghZGV2LT5z
aHV0dGluZ19kb3duKQoJCQltb2RfdGltZXIoJmRldi0+Y2hlY2tfcHJlc190aW1lciwgamlmZmll
cyArCgkJCQkgIG1zZWNzX3RvX2ppZmZpZXMoTkZDX0NIRUNLX1BSRVNfRlJFUV9NUykpOwoJfQoK
ZXhpdDoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKfQoKc3RhdGljIHZvaWQgbmZjX2NoZWNr
X3ByZXNfdGltZW91dChzdHJ1Y3QgdGltZXJfbGlzdCAqdCkKewoJc3RydWN0IG5mY19kZXYgKmRl
diA9IGZyb21fdGltZXIoZGV2LCB0LCBjaGVja19wcmVzX3RpbWVyKTsKCglzY2hlZHVsZV93b3Jr
KCZkZXYtPmNoZWNrX3ByZXNfd29yayk7Cn0KCmNvbnN0IHN0cnVjdCBjbGFzcyBuZmNfY2xhc3Mg
PSB7CgkubmFtZSA9ICJuZmMiLAoJLmRldl9yZWxlYXNlID0gbmZjX3JlbGVhc2UsCn07CkVYUE9S
VF9TWU1CT0wobmZjX2NsYXNzKTsKCnN0YXRpYyBpbnQgbWF0Y2hfaWR4KHN0cnVjdCBkZXZpY2Ug
KmQsIGNvbnN0IHZvaWQgKmRhdGEpCnsKCXN0cnVjdCBuZmNfZGV2ICpkZXYgPSB0b19uZmNfZGV2
KGQpOwoJY29uc3QgdW5zaWduZWQgaW50ICppZHggPSBkYXRhOwoKCXJldHVybiBkZXYtPmlkeCA9
PSAqaWR4Owp9CgpzdHJ1Y3QgbmZjX2RldiAqbmZjX2dldF9kZXZpY2UodW5zaWduZWQgaW50IGlk
eCkKewoJc3RydWN0IGRldmljZSAqZDsKCglkID0gY2xhc3NfZmluZF9kZXZpY2UoJm5mY19jbGFz
cywgTlVMTCwgJmlkeCwgbWF0Y2hfaWR4KTsKCWlmICghZCkKCQlyZXR1cm4gTlVMTDsKCglyZXR1
cm4gdG9fbmZjX2RldihkKTsKfQoKLyoqCiAqIG5mY19hbGxvY2F0ZV9kZXZpY2UgLSBhbGxvY2F0
ZSBhIG5ldyBuZmMgZGV2aWNlCiAqCiAqIEBvcHM6IGRldmljZSBvcGVyYXRpb25zCiAqIEBzdXBw
b3J0ZWRfcHJvdG9jb2xzOiBORkMgcHJvdG9jb2xzIHN1cHBvcnRlZCBieSB0aGUgZGV2aWNlCiAq
IEB0eF9oZWFkcm9vbTogcmVzZXJ2ZWQgc3BhY2UgYXQgYmVnaW5uaW5nIG9mIHNrYgogKiBAdHhf
dGFpbHJvb206IHJlc2VydmVkIHNwYWNlIGF0IGVuZCBvZiBza2IKICovCnN0cnVjdCBuZmNfZGV2
ICpuZmNfYWxsb2NhdGVfZGV2aWNlKGNvbnN0IHN0cnVjdCBuZmNfb3BzICpvcHMsCgkJCQkgICAg
dTMyIHN1cHBvcnRlZF9wcm90b2NvbHMsCgkJCQkgICAgaW50IHR4X2hlYWRyb29tLCBpbnQgdHhf
dGFpbHJvb20pCnsKCXN0cnVjdCBuZmNfZGV2ICpkZXY7CglpbnQgcmM7CgoJaWYgKCFvcHMtPnN0
YXJ0X3BvbGwgfHwgIW9wcy0+c3RvcF9wb2xsIHx8ICFvcHMtPmFjdGl2YXRlX3RhcmdldCB8fAoJ
ICAgICFvcHMtPmRlYWN0aXZhdGVfdGFyZ2V0IHx8ICFvcHMtPmltX3RyYW5zY2VpdmUpCgkJcmV0
dXJuIE5VTEw7CgoJaWYgKCFzdXBwb3J0ZWRfcHJvdG9jb2xzKQoJCXJldHVybiBOVUxMOwoKCWRl
diA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCBuZmNfZGV2KSwgR0ZQX0tFUk5FTCk7CglpZiAoIWRl
dikKCQlyZXR1cm4gTlVMTDsKCglyYyA9IGlkYV9hbGxvYygmbmZjX2luZGV4X2lkYSwgR0ZQX0tF
Uk5FTCk7CglpZiAocmMgPCAwKQoJCWdvdG8gZXJyX2ZyZWVfZGV2OwoJZGV2LT5pZHggPSByYzsK
CglkZXYtPmRldi5jbGFzcyA9ICZuZmNfY2xhc3M7CglkZXZfc2V0X25hbWUoJmRldi0+ZGV2LCAi
bmZjJWQiLCBkZXYtPmlkeCk7CglkZXZpY2VfaW5pdGlhbGl6ZSgmZGV2LT5kZXYpOwoKCWRldi0+
b3BzID0gb3BzOwoJZGV2LT5zdXBwb3J0ZWRfcHJvdG9jb2xzID0gc3VwcG9ydGVkX3Byb3RvY29s
czsKCWRldi0+dHhfaGVhZHJvb20gPSB0eF9oZWFkcm9vbTsKCWRldi0+dHhfdGFpbHJvb20gPSB0
eF90YWlscm9vbTsKCUlOSVRfTElTVF9IRUFEKCZkZXYtPnNlY3VyZV9lbGVtZW50cyk7CgoJbmZj
X2dlbmxfZGF0YV9pbml0KCZkZXYtPmdlbmxfZGF0YSk7CgoJZGV2LT5yZl9tb2RlID0gTkZDX1JG
X05PTkU7CgoJLyogZmlyc3QgZ2VuZXJhdGlvbiBtdXN0IG5vdCBiZSAwICovCglkZXYtPnRhcmdl
dHNfZ2VuZXJhdGlvbiA9IDE7CgoJaWYgKG9wcy0+Y2hlY2tfcHJlc2VuY2UpIHsKCQl0aW1lcl9z
ZXR1cCgmZGV2LT5jaGVja19wcmVzX3RpbWVyLCBuZmNfY2hlY2tfcHJlc190aW1lb3V0LCAwKTsK
CQlJTklUX1dPUksoJmRldi0+Y2hlY2tfcHJlc193b3JrLCBuZmNfY2hlY2tfcHJlc193b3JrKTsK
CX0KCglyZXR1cm4gZGV2OwoKZXJyX2ZyZWVfZGV2OgoJa2ZyZWUoZGV2KTsKCglyZXR1cm4gTlVM
TDsKfQpFWFBPUlRfU1lNQk9MKG5mY19hbGxvY2F0ZV9kZXZpY2UpOwoKLyoqCiAqIG5mY19yZWdp
c3Rlcl9kZXZpY2UgLSByZWdpc3RlciBhIG5mYyBkZXZpY2UgaW4gdGhlIG5mYyBzdWJzeXN0ZW0K
ICoKICogQGRldjogVGhlIG5mYyBkZXZpY2UgdG8gcmVnaXN0ZXIKICovCmludCBuZmNfcmVnaXN0
ZXJfZGV2aWNlKHN0cnVjdCBuZmNfZGV2ICpkZXYpCnsKCWludCByYzsKCglwcl9kZWJ1ZygiZGV2
X25hbWU9JXNcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCW11dGV4X2xvY2soJm5mY19kZXZs
aXN0X211dGV4KTsKCW5mY19kZXZsaXN0X2dlbmVyYXRpb24rKzsKCXJjID0gZGV2aWNlX2FkZCgm
ZGV2LT5kZXYpOwoJbXV0ZXhfdW5sb2NrKCZuZmNfZGV2bGlzdF9tdXRleCk7CgoJaWYgKHJjIDwg
MCkKCQlyZXR1cm4gcmM7CgoJcmMgPSBuZmNfbGxjcF9yZWdpc3Rlcl9kZXZpY2UoZGV2KTsKCWlm
IChyYykKCQlwcl9lcnIoIkNvdWxkIG5vdCByZWdpc3RlciBsbGNwIGRldmljZVxuIik7CgoJZGV2
aWNlX2xvY2soJmRldi0+ZGV2KTsKCWRldi0+cmZraWxsID0gcmZraWxsX2FsbG9jKGRldl9uYW1l
KCZkZXYtPmRldiksICZkZXYtPmRldiwKCQkJCSAgIFJGS0lMTF9UWVBFX05GQywgJm5mY19yZmtp
bGxfb3BzLCBkZXYpOwoJaWYgKGRldi0+cmZraWxsKSB7CgkJaWYgKHJma2lsbF9yZWdpc3Rlcihk
ZXYtPnJma2lsbCkgPCAwKSB7CgkJCXJma2lsbF9kZXN0cm95KGRldi0+cmZraWxsKTsKCQkJZGV2
LT5yZmtpbGwgPSBOVUxMOwoJCX0KCX0KCWRldi0+c2h1dHRpbmdfZG93biA9IGZhbHNlOwoJZGV2
aWNlX3VubG9jaygmZGV2LT5kZXYpOwoKCXJjID0gbmZjX2dlbmxfZGV2aWNlX2FkZGVkKGRldik7
CglpZiAocmMpCgkJcHJfZGVidWcoIlRoZSB1c2Vyc3BhY2Ugd29uJ3QgYmUgbm90aWZpZWQgdGhh
dCB0aGUgZGV2aWNlICVzIHdhcyBhZGRlZFxuIiwKCQkJIGRldl9uYW1lKCZkZXYtPmRldikpOwoK
CXJldHVybiAwOwp9CkVYUE9SVF9TWU1CT0wobmZjX3JlZ2lzdGVyX2RldmljZSk7CgovKioKICog
bmZjX3VucmVnaXN0ZXJfZGV2aWNlIC0gdW5yZWdpc3RlciBhIG5mYyBkZXZpY2UgaW4gdGhlIG5m
YyBzdWJzeXN0ZW0KICoKICogQGRldjogVGhlIG5mYyBkZXZpY2UgdG8gdW5yZWdpc3RlcgogKi8K
dm9pZCBuZmNfdW5yZWdpc3Rlcl9kZXZpY2Uoc3RydWN0IG5mY19kZXYgKmRldikKewoJaW50IHJj
OwoKCXByX2RlYnVnKCJkZXZfbmFtZT0lc1xuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJcmMg
PSBuZmNfZ2VubF9kZXZpY2VfcmVtb3ZlZChkZXYpOwoJaWYgKHJjKQoJCXByX2RlYnVnKCJUaGUg
dXNlcnNwYWNlIHdvbid0IGJlIG5vdGlmaWVkIHRoYXQgdGhlIGRldmljZSAlcyAiCgkJCSAid2Fz
IHJlbW92ZWRcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCWRldmljZV9sb2NrKCZkZXYtPmRl
dik7CglpZiAoZGV2LT5yZmtpbGwpIHsKCQlyZmtpbGxfdW5yZWdpc3RlcihkZXYtPnJma2lsbCk7
CgkJcmZraWxsX2Rlc3Ryb3koZGV2LT5yZmtpbGwpOwoJCWRldi0+cmZraWxsID0gTlVMTDsKCX0K
CWRldi0+c2h1dHRpbmdfZG93biA9IHRydWU7CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CgoJ
aWYgKGRldi0+b3BzLT5jaGVja19wcmVzZW5jZSkgewoJCWRlbF90aW1lcl9zeW5jKCZkZXYtPmNo
ZWNrX3ByZXNfdGltZXIpOwoJCWNhbmNlbF93b3JrX3N5bmMoJmRldi0+Y2hlY2tfcHJlc193b3Jr
KTsKCX0KCgluZmNfbGxjcF91bnJlZ2lzdGVyX2RldmljZShkZXYpOwoKCW11dGV4X2xvY2soJm5m
Y19kZXZsaXN0X211dGV4KTsKCW5mY19kZXZsaXN0X2dlbmVyYXRpb24rKzsKCWRldmljZV9kZWwo
JmRldi0+ZGV2KTsKCW11dGV4X3VubG9jaygmbmZjX2Rldmxpc3RfbXV0ZXgpOwp9CkVYUE9SVF9T
WU1CT0wobmZjX3VucmVnaXN0ZXJfZGV2aWNlKTsKCnN0YXRpYyBpbnQgX19pbml0IG5mY19pbml0
KHZvaWQpCnsKCWludCByYzsKCglwcl9pbmZvKCJORkMgQ29yZSB2ZXIgJXNcbiIsIFZFUlNJT04p
OwoKCXJjID0gY2xhc3NfcmVnaXN0ZXIoJm5mY19jbGFzcyk7CglpZiAocmMpCgkJcmV0dXJuIHJj
OwoKCXJjID0gbmZjX2dlbmxfaW5pdCgpOwoJaWYgKHJjKQoJCWdvdG8gZXJyX2dlbmw7CgoJLyog
dGhlIGZpcnN0IGdlbmVyYXRpb24gbXVzdCBub3QgYmUgMCAqLwoJbmZjX2Rldmxpc3RfZ2VuZXJh
dGlvbiA9IDE7CgoJcmMgPSByYXdzb2NrX2luaXQoKTsKCWlmIChyYykKCQlnb3RvIGVycl9yYXdz
b2NrOwoKCXJjID0gbmZjX2xsY3BfaW5pdCgpOwoJaWYgKHJjKQoJCWdvdG8gZXJyX2xsY3Bfc29j
azsKCglyYyA9IGFmX25mY19pbml0KCk7CglpZiAocmMpCgkJZ290byBlcnJfYWZfbmZjOwoKCXJl
dHVybiAwOwoKZXJyX2FmX25mYzoKCW5mY19sbGNwX2V4aXQoKTsKZXJyX2xsY3Bfc29jazoKCXJh
d3NvY2tfZXhpdCgpOwplcnJfcmF3c29jazoKCW5mY19nZW5sX2V4aXQoKTsKZXJyX2dlbmw6Cglj
bGFzc191bnJlZ2lzdGVyKCZuZmNfY2xhc3MpOwoJcmV0dXJuIHJjOwp9CgpzdGF0aWMgdm9pZCBf
X2V4aXQgbmZjX2V4aXQodm9pZCkKewoJYWZfbmZjX2V4aXQoKTsKCW5mY19sbGNwX2V4aXQoKTsK
CXJhd3NvY2tfZXhpdCgpOwoJbmZjX2dlbmxfZXhpdCgpOwoJY2xhc3NfdW5yZWdpc3RlcigmbmZj
X2NsYXNzKTsKfQoKc3Vic3lzX2luaXRjYWxsKG5mY19pbml0KTsKbW9kdWxlX2V4aXQobmZjX2V4
aXQpOwoKTU9EVUxFX0FVVEhPUigiTGF1cm8gUmFtb3MgVmVuYW5jaW8gPGxhdXJvLnZlbmFuY2lv
QG9wZW5ib3NzYS5vcmc+Iik7Ck1PRFVMRV9ERVNDUklQVElPTigiTkZDIENvcmUgdmVyICIgVkVS
U0lPTik7Ck1PRFVMRV9WRVJTSU9OKFZFUlNJT04pOwpNT0RVTEVfTElDRU5TRSgiR1BMIik7Ck1P
RFVMRV9BTElBU19ORVRQUk9UTyhQRl9ORkMpOwpNT0RVTEVfQUxJQVNfR0VOTF9GQU1JTFkoTkZD
X0dFTkxfTkFNRSk7Cg==
--00000000000046641a062349c676
Content-Type: text/x-csrc; charset="US-ASCII"; name="new_core.c"
Content-Disposition: attachment; filename="new_core.c"
Content-Transfer-Encoding: base64
Content-ID: <f_m1o5y6uu2>
X-Attachment-Id: f_m1o5y6uu2

Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKLyoKICogQ29weXJp
Z2h0IChDKSAyMDExIEluc3RpdHV0byBOb2tpYSBkZSBUZWNub2xvZ2lhCiAqCiAqIEF1dGhvcnM6
CiAqICAgIExhdXJvIFJhbW9zIFZlbmFuY2lvIDxsYXVyby52ZW5hbmNpb0BvcGVuYm9zc2Eub3Jn
PgogKiAgICBBbG9pc2lvIEFsbWVpZGEgSnIgPGFsb2lzaW8uYWxtZWlkYUBvcGVuYm9zc2Eub3Jn
PgogKi8KCiNkZWZpbmUgcHJfZm10KGZtdCkgS0JVSUxEX01PRE5BTUUgIjogJXM6ICIgZm10LCBf
X2Z1bmNfXwoKI2luY2x1ZGUgPGxpbnV4L2luaXQuaD4KI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5o
PgojaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CiNpbmNsdWRlIDxsaW51eC9zbGFiLmg+CiNpbmNs
dWRlIDxsaW51eC9yZmtpbGwuaD4KI2luY2x1ZGUgPGxpbnV4L25mYy5oPgoKI2luY2x1ZGUgPG5l
dC9nZW5ldGxpbmsuaD4KCiNpbmNsdWRlICJuZmMuaCIKCiNkZWZpbmUgVkVSU0lPTiAiMC4xIgoK
I2RlZmluZSBORkNfQ0hFQ0tfUFJFU19GUkVRX01TCTIwMDAKCmludCBuZmNfZGV2bGlzdF9nZW5l
cmF0aW9uOwpERUZJTkVfTVVURVgobmZjX2Rldmxpc3RfbXV0ZXgpOwoKLyogTkZDIGRldmljZSBJ
RCBiaXRtYXAgKi8Kc3RhdGljIERFRklORV9JREEobmZjX2luZGV4X2lkYSk7CgppbnQgbmZjX2Z3
X2Rvd25sb2FkKHN0cnVjdCBuZmNfZGV2ICpkZXYsIGNvbnN0IGNoYXIgKmZpcm13YXJlX25hbWUp
CnsKCWludCByYyA9IDA7CgoJcHJfZGVidWcoIiVzIGRvIGZpcm13YXJlICVzXG4iLCBkZXZfbmFt
ZSgmZGV2LT5kZXYpLCBmaXJtd2FyZV9uYW1lKTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoK
CWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7Cgl9ZWxzZSBpZiAoZGV2
LT5kZXZfdXApIHsKCQlyYyA9IC1FQlVTWTsKCX1lbHNlIGlmICghZGV2LT5vcHMtPmZ3X2Rvd25s
b2FkKSB7CgkJcmMgPSAtRU9QTk9UU1VQUDsKCX1lbHNlewoJCWRldi0+ZndfZG93bmxvYWRfaW5f
cHJvZ3Jlc3MgPSB0cnVlOwoJCXJjID0gZGV2LT5vcHMtPmZ3X2Rvd25sb2FkKGRldiwgZmlybXdh
cmVfbmFtZSk7CgkJaWYgKHJjKQoJCQlkZXYtPmZ3X2Rvd25sb2FkX2luX3Byb2dyZXNzID0gZmFs
c2U7CgkJfQoKCQlkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CgkJcmV0dXJuIHJjOwp9CgoKLyoq
CiAqIG5mY19md19kb3dubG9hZF9kb25lIC0gaW5mb3JtIHRoYXQgYSBmaXJtd2FyZSBkb3dubG9h
ZCB3YXMgY29tcGxldGVkCiAqCiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRvIHdoaWNoIGZpcm13
YXJlIHdhcyBkb3dubG9hZGVkCiAqIEBmaXJtd2FyZV9uYW1lOiBUaGUgZmlybXdhcmUgZmlsZW5h
bWUKICogQHJlc3VsdDogVGhlIHBvc2l0aXZlIHZhbHVlIG9mIGEgc3RhbmRhcmQgZXJybm8gdmFs
dWUKICovCmludCBuZmNfZndfZG93bmxvYWRfZG9uZShzdHJ1Y3QgbmZjX2RldiAqZGV2LCBjb25z
dCBjaGFyICpmaXJtd2FyZV9uYW1lLAoJCQkgdTMyIHJlc3VsdCkKewoJZGV2LT5md19kb3dubG9h
ZF9pbl9wcm9ncmVzcyA9IGZhbHNlOwoKCXJldHVybiBuZmNfZ2VubF9md19kb3dubG9hZF9kb25l
KGRldiwgZmlybXdhcmVfbmFtZSwgcmVzdWx0KTsKfQpFWFBPUlRfU1lNQk9MKG5mY19md19kb3du
bG9hZF9kb25lKTsKCi8qKgogKiBuZmNfZGV2X3VwIC0gdHVybiBvbiB0aGUgTkZDIGRldmljZQog
KgogKiBAZGV2OiBUaGUgbmZjIGRldmljZSB0byBiZSB0dXJuZWQgb24KICoKICogVGhlIGRldmlj
ZSByZW1haW5zIHVwIHVudGlsIHRoZSBuZmNfZGV2X2Rvd24gZnVuY3Rpb24gaXMgY2FsbGVkLgog
Ki8KaW50IG5mY19kZXZfdXAoc3RydWN0IG5mY19kZXYgKmRldikKewoJaW50IHJjID0gMDsKCglw
cl9kZWJ1ZygiZGV2X25hbWU9JXNcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCWRldmljZV9s
b2NrKCZkZXYtPmRldik7CgoJaWYgKGRldi0+c2h1dHRpbmdfZG93bikgewoJCXJjID0gLUVOT0RF
VjsKCQlnb3RvIGVycm9yOwoJfQoKCWlmIChkZXYtPnJma2lsbCAmJiByZmtpbGxfYmxvY2tlZChk
ZXYtPnJma2lsbCkpIHsKCQlyYyA9IC1FUkZLSUxMOwoJCWdvdG8gZXJyb3I7Cgl9CgoJaWYgKGRl
di0+ZndfZG93bmxvYWRfaW5fcHJvZ3Jlc3MpIHsKCQlyYyA9IC1FQlVTWTsKCQlnb3RvIGVycm9y
OwoJfQoKCWlmIChkZXYtPmRldl91cCkgewoJCXJjID0gLUVBTFJFQURZOwoJCWdvdG8gZXJyb3I7
Cgl9CgoJaWYgKGRldi0+b3BzLT5kZXZfdXApCgkJcmMgPSBkZXYtPm9wcy0+ZGV2X3VwKGRldik7
CgoJaWYgKCFyYykKCQlkZXYtPmRldl91cCA9IHRydWU7CgoJLyogV2UgaGF2ZSB0byBlbmFibGUg
dGhlIGRldmljZSBiZWZvcmUgZGlzY292ZXJpbmcgU0VzICovCglpZiAoZGV2LT5vcHMtPmRpc2Nv
dmVyX3NlICYmIGRldi0+b3BzLT5kaXNjb3Zlcl9zZShkZXYpKQoJCXByX2VycigiU0UgZGlzY292
ZXJ5IGZhaWxlZFxuIik7CgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVy
biByYzsKfQoKLyoqCiAqIG5mY19kZXZfZG93biAtIHR1cm4gb2ZmIHRoZSBORkMgZGV2aWNlCiAq
CiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRvIGJlIHR1cm5lZCBvZmYKICovCmludCBuZmNfZGV2
X2Rvd24oc3RydWN0IG5mY19kZXYgKmRldikKewoJaW50IHJjID0gMDsKCglwcl9kZWJ1ZygiZGV2
X25hbWU9JXNcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCWRldmljZV9sb2NrKCZkZXYtPmRl
dik7CgoJaWYgKGRldi0+c2h1dHRpbmdfZG93bikgewoJCXJjID0gLUVOT0RFVjsKCQlnb3RvIGVy
cm9yOwoJfQoKCWlmICghZGV2LT5kZXZfdXApIHsKCQlyYyA9IC1FQUxSRUFEWTsKCQlnb3RvIGVy
cm9yOwoJfQoKCWlmIChkZXYtPnBvbGxpbmcgfHwgZGV2LT5hY3RpdmVfdGFyZ2V0KSB7CgkJcmMg
PSAtRUJVU1k7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5vcHMtPmRldl9kb3duKQoJCWRl
di0+b3BzLT5kZXZfZG93bihkZXYpOwoKCWRldi0+ZGV2X3VwID0gZmFsc2U7CgplcnJvcjoKCWRl
dmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQoKc3RhdGljIGludCBuZmNfcmZr
aWxsX3NldF9ibG9jayh2b2lkICpkYXRhLCBib29sIGJsb2NrZWQpCnsKCXN0cnVjdCBuZmNfZGV2
ICpkZXYgPSBkYXRhOwoKCXByX2RlYnVnKCIlcyBibG9ja2VkICVkIiwgZGV2X25hbWUoJmRldi0+
ZGV2KSwgYmxvY2tlZCk7CgoJaWYgKCFibG9ja2VkKQoJCXJldHVybiAwOwoKCW5mY19kZXZfZG93
bihkZXYpOwoKCXJldHVybiAwOwp9CgpzdGF0aWMgY29uc3Qgc3RydWN0IHJma2lsbF9vcHMgbmZj
X3Jma2lsbF9vcHMgPSB7Cgkuc2V0X2Jsb2NrID0gbmZjX3Jma2lsbF9zZXRfYmxvY2ssCn07Cgov
KioKICogbmZjX3N0YXJ0X3BvbGwgLSBzdGFydCBwb2xsaW5nIGZvciBuZmMgdGFyZ2V0cwogKgog
KiBAZGV2OiBUaGUgbmZjIGRldmljZSB0aGF0IG11c3Qgc3RhcnQgcG9sbGluZwogKiBAaW1fcHJv
dG9jb2xzOiBiaXRzZXQgb2YgbmZjIGluaXRpYXRvciBwcm90b2NvbHMgdG8gYmUgdXNlZCBmb3Ig
cG9sbGluZwogKiBAdG1fcHJvdG9jb2xzOiBiaXRzZXQgb2YgbmZjIHRyYW5zcG9ydCBwcm90b2Nv
bHMgdG8gYmUgdXNlZCBmb3IgcG9sbGluZwogKgogKiBUaGUgZGV2aWNlIHJlbWFpbnMgcG9sbGlu
ZyBmb3IgdGFyZ2V0cyB1bnRpbCBhIHRhcmdldCBpcyBmb3VuZCBvcgogKiB0aGUgbmZjX3N0b3Bf
cG9sbCBmdW5jdGlvbiBpcyBjYWxsZWQuCiAqLwppbnQgbmZjX3N0YXJ0X3BvbGwoc3RydWN0IG5m
Y19kZXYgKmRldiwgdTMyIGltX3Byb3RvY29scywgdTMyIHRtX3Byb3RvY29scykKewoJaW50IHJj
OwoKCXByX2RlYnVnKCJkZXZfbmFtZSAlcyBpbml0aWF0b3IgcHJvdG9jb2xzIDB4JXggdGFyZ2V0
IHByb3RvY29scyAweCV4XG4iLAoJCSBkZXZfbmFtZSgmZGV2LT5kZXYpLCBpbV9wcm90b2NvbHMs
IHRtX3Byb3RvY29scyk7CgoJaWYgKCFpbV9wcm90b2NvbHMgJiYgIXRtX3Byb3RvY29scykKCQly
ZXR1cm4gLUVJTlZBTDsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmIChkZXYtPnNodXR0
aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoIWRldi0+
ZGV2X3VwKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJyb3I7Cgl9CgoJaWYgKGRldi0+cG9s
bGluZykgewoJCXJjID0gLUVCVVNZOwoJCWdvdG8gZXJyb3I7Cgl9CgoJcmMgPSBkZXYtPm9wcy0+
c3RhcnRfcG9sbChkZXYsIGltX3Byb3RvY29scywgdG1fcHJvdG9jb2xzKTsKCWlmICghcmMpIHsK
CQlkZXYtPnBvbGxpbmcgPSB0cnVlOwoJCWRldi0+cmZfbW9kZSA9IE5GQ19SRl9OT05FOwoJfQoK
ZXJyb3I6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CglyZXR1cm4gcmM7Cn0KCi8qKgogKiBu
ZmNfc3RvcF9wb2xsIC0gc3RvcCBwb2xsaW5nIGZvciBuZmMgdGFyZ2V0cwogKgogKiBAZGV2OiBU
aGUgbmZjIGRldmljZSB0aGF0IG11c3Qgc3RvcCBwb2xsaW5nCiAqLwppbnQgbmZjX3N0b3BfcG9s
bChzdHJ1Y3QgbmZjX2RldiAqZGV2KQp7CglpbnQgcmMgPSAwOwoKCXByX2RlYnVnKCJkZXZfbmFt
ZT0lc1xuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2KTsK
CglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJyb3I7
Cgl9CgoJaWYgKCFkZXYtPnBvbGxpbmcpIHsKCQlyYyA9IC1FSU5WQUw7CgkJZ290byBlcnJvcjsK
CX0KCglkZXYtPm9wcy0+c3RvcF9wb2xsKGRldik7CglkZXYtPnBvbGxpbmcgPSBmYWxzZTsKCWRl
di0+cmZfbW9kZSA9IE5GQ19SRl9OT05FOwoKZXJyb3I6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRl
dik7CglyZXR1cm4gcmM7Cn0KCnN0YXRpYyBzdHJ1Y3QgbmZjX3RhcmdldCAqbmZjX2ZpbmRfdGFy
Z2V0KHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiB0YXJnZXRfaWR4KQp7CglpbnQgaTsKCglmb3Ig
KGkgPSAwOyBpIDwgZGV2LT5uX3RhcmdldHM7IGkrKykgewoJCWlmIChkZXYtPnRhcmdldHNbaV0u
aWR4ID09IHRhcmdldF9pZHgpCgkJCXJldHVybiAmZGV2LT50YXJnZXRzW2ldOwoJfQoKCXJldHVy
biBOVUxMOwp9CgppbnQgbmZjX2RlcF9saW5rX3VwKHN0cnVjdCBuZmNfZGV2ICpkZXYsIGludCB0
YXJnZXRfaW5kZXgsIHU4IGNvbW1fbW9kZSkKewoJaW50IHJjID0gMDsKCXU4ICpnYjsKCXNpemVf
dCBnYl9sZW47CglzdHJ1Y3QgbmZjX3RhcmdldCAqdGFyZ2V0OwoKCXByX2RlYnVnKCJkZXZfbmFt
ZT0lcyBjb21tICVkXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpLCBjb21tX21vZGUpOwoKCWlmICgh
ZGV2LT5vcHMtPmRlcF9saW5rX3VwKQoJCXJldHVybiAtRU9QTk9UU1VQUDsKCglkZXZpY2VfbG9j
aygmZGV2LT5kZXYpOwoKCWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7
CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5kZXBfbGlua191cCA9PSB0cnVlKSB7CgkJcmMg
PSAtRUFMUkVBRFk7CgkJZ290byBlcnJvcjsKCX0KCglnYiA9IG5mY19sbGNwX2dlbmVyYWxfYnl0
ZXMoZGV2LCAmZ2JfbGVuKTsKCWlmIChnYl9sZW4gPiBORkNfTUFYX0dUX0xFTikgewoJCXJjID0g
LUVJTlZBTDsKCQlnb3RvIGVycm9yOwoJfQoKCXRhcmdldCA9IG5mY19maW5kX3RhcmdldChkZXYs
IHRhcmdldF9pbmRleCk7CglpZiAodGFyZ2V0ID09IE5VTEwpIHsKCQlyYyA9IC1FTk9UQ09OTjsK
CQlnb3RvIGVycm9yOwoJfQoKCXJjID0gZGV2LT5vcHMtPmRlcF9saW5rX3VwKGRldiwgdGFyZ2V0
LCBjb21tX21vZGUsIGdiLCBnYl9sZW4pOwoJaWYgKCFyYykgewoJCWRldi0+YWN0aXZlX3Rhcmdl
dCA9IHRhcmdldDsKCQlkZXYtPnJmX21vZGUgPSBORkNfUkZfSU5JVElBVE9SOwoJfQoKZXJyb3I6
CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CglyZXR1cm4gcmM7Cn0KCmludCBuZmNfZGVwX2xp
bmtfZG93bihzdHJ1Y3QgbmZjX2RldiAqZGV2KQp7CglpbnQgcmMgPSAwOwoKCXByX2RlYnVnKCJk
ZXZfbmFtZT0lc1xuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSk7CgoJaWYgKCFkZXYtPm9wcy0+ZGVw
X2xpbmtfZG93bikKCQlyZXR1cm4gLUVPUE5PVFNVUFA7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2
KTsKCglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJy
b3I7Cgl9CgoJaWYgKGRldi0+ZGVwX2xpbmtfdXAgPT0gZmFsc2UpIHsKCQlyYyA9IC1FQUxSRUFE
WTsKCQlnb3RvIGVycm9yOwoJfQoKCXJjID0gZGV2LT5vcHMtPmRlcF9saW5rX2Rvd24oZGV2KTsK
CWlmICghcmMpIHsKCQlkZXYtPmRlcF9saW5rX3VwID0gZmFsc2U7CgkJZGV2LT5hY3RpdmVfdGFy
Z2V0ID0gTlVMTDsKCQlkZXYtPnJmX21vZGUgPSBORkNfUkZfTk9ORTsKCQluZmNfbGxjcF9tYWNf
aXNfZG93bihkZXYpOwoJCW5mY19nZW5sX2RlcF9saW5rX2Rvd25fZXZlbnQoZGV2KTsKCX0KCmVy
cm9yOgoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoKCXJldHVybiByYzsKfQoKaW50IG5mY19k
ZXBfbGlua19pc191cChzdHJ1Y3QgbmZjX2RldiAqZGV2LCB1MzIgdGFyZ2V0X2lkeCwKCQkgICAg
ICAgdTggY29tbV9tb2RlLCB1OCByZl9tb2RlKQp7CglkZXYtPmRlcF9saW5rX3VwID0gdHJ1ZTsK
CglpZiAoIWRldi0+YWN0aXZlX3RhcmdldCAmJiByZl9tb2RlID09IE5GQ19SRl9JTklUSUFUT1Ip
IHsKCQlzdHJ1Y3QgbmZjX3RhcmdldCAqdGFyZ2V0OwoKCQl0YXJnZXQgPSBuZmNfZmluZF90YXJn
ZXQoZGV2LCB0YXJnZXRfaWR4KTsKCQlpZiAodGFyZ2V0ID09IE5VTEwpCgkJCXJldHVybiAtRU5P
VENPTk47CgoJCWRldi0+YWN0aXZlX3RhcmdldCA9IHRhcmdldDsKCX0KCglkZXYtPnBvbGxpbmcg
PSBmYWxzZTsKCWRldi0+cmZfbW9kZSA9IHJmX21vZGU7CgoJbmZjX2xsY3BfbWFjX2lzX3VwKGRl
diwgdGFyZ2V0X2lkeCwgY29tbV9tb2RlLCByZl9tb2RlKTsKCglyZXR1cm4gbmZjX2dlbmxfZGVw
X2xpbmtfdXBfZXZlbnQoZGV2LCB0YXJnZXRfaWR4LCBjb21tX21vZGUsIHJmX21vZGUpOwp9CkVY
UE9SVF9TWU1CT0wobmZjX2RlcF9saW5rX2lzX3VwKTsKCi8qKgogKiBuZmNfYWN0aXZhdGVfdGFy
Z2V0IC0gcHJlcGFyZSB0aGUgdGFyZ2V0IGZvciBkYXRhIGV4Y2hhbmdlCiAqCiAqIEBkZXY6IFRo
ZSBuZmMgZGV2aWNlIHRoYXQgZm91bmQgdGhlIHRhcmdldAogKiBAdGFyZ2V0X2lkeDogaW5kZXgg
b2YgdGhlIHRhcmdldCB0aGF0IG11c3QgYmUgYWN0aXZhdGVkCiAqIEBwcm90b2NvbDogbmZjIHBy
b3RvY29sIHRoYXQgd2lsbCBiZSB1c2VkIGZvciBkYXRhIGV4Y2hhbmdlCiAqLwppbnQgbmZjX2Fj
dGl2YXRlX3RhcmdldChzdHJ1Y3QgbmZjX2RldiAqZGV2LCB1MzIgdGFyZ2V0X2lkeCwgdTMyIHBy
b3RvY29sKQp7CglpbnQgcmM7CglzdHJ1Y3QgbmZjX3RhcmdldCAqdGFyZ2V0OwoKCXByX2RlYnVn
KCJkZXZfbmFtZT0lcyB0YXJnZXRfaWR4PSV1IHByb3RvY29sPSV1XG4iLAoJCSBkZXZfbmFtZSgm
ZGV2LT5kZXYpLCB0YXJnZXRfaWR4LCBwcm90b2NvbCk7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2
KTsKCglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJy
b3I7Cgl9CgoJaWYgKGRldi0+YWN0aXZlX3RhcmdldCkgewoJCXJjID0gLUVCVVNZOwoJCWdvdG8g
ZXJyb3I7Cgl9CgoJdGFyZ2V0ID0gbmZjX2ZpbmRfdGFyZ2V0KGRldiwgdGFyZ2V0X2lkeCk7Cglp
ZiAodGFyZ2V0ID09IE5VTEwpIHsKCQlyYyA9IC1FTk9UQ09OTjsKCQlnb3RvIGVycm9yOwoJfQoK
CXJjID0gZGV2LT5vcHMtPmFjdGl2YXRlX3RhcmdldChkZXYsIHRhcmdldCwgcHJvdG9jb2wpOwoJ
aWYgKCFyYykgewoJCWRldi0+YWN0aXZlX3RhcmdldCA9IHRhcmdldDsKCQlkZXYtPnJmX21vZGUg
PSBORkNfUkZfSU5JVElBVE9SOwoKCQlpZiAoZGV2LT5vcHMtPmNoZWNrX3ByZXNlbmNlICYmICFk
ZXYtPnNodXR0aW5nX2Rvd24pCgkJCW1vZF90aW1lcigmZGV2LT5jaGVja19wcmVzX3RpbWVyLCBq
aWZmaWVzICsKCQkJCSAgbXNlY3NfdG9famlmZmllcyhORkNfQ0hFQ0tfUFJFU19GUkVRX01TKSk7
Cgl9CgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQoKLyoq
CiAqIG5mY19kZWFjdGl2YXRlX3RhcmdldCAtIGRlYWN0aXZhdGUgYSBuZmMgdGFyZ2V0CiAqCiAq
IEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRoYXQgZm91bmQgdGhlIHRhcmdldAogKiBAdGFyZ2V0X2lk
eDogaW5kZXggb2YgdGhlIHRhcmdldCB0aGF0IG11c3QgYmUgZGVhY3RpdmF0ZWQKICogQG1vZGU6
IGlkbGUgb3Igc2xlZXA/CiAqLwppbnQgbmZjX2RlYWN0aXZhdGVfdGFyZ2V0KHN0cnVjdCBuZmNf
ZGV2ICpkZXYsIHUzMiB0YXJnZXRfaWR4LCB1OCBtb2RlKQp7CglpbnQgcmMgPSAwOwoKCXByX2Rl
YnVnKCJkZXZfbmFtZT0lcyB0YXJnZXRfaWR4PSV1XG4iLAoJCSBkZXZfbmFtZSgmZGV2LT5kZXYp
LCB0YXJnZXRfaWR4KTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmIChkZXYtPnNodXR0
aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5h
Y3RpdmVfdGFyZ2V0ID09IE5VTEwpIHsKCQlyYyA9IC1FTk9UQ09OTjsKCQlnb3RvIGVycm9yOwoJ
fQoKCWlmIChkZXYtPmFjdGl2ZV90YXJnZXQtPmlkeCAhPSB0YXJnZXRfaWR4KSB7CgkJcmMgPSAt
RU5PVENPTk47CgkJZ290byBlcnJvcjsKCX0KCglpZiAoZGV2LT5vcHMtPmNoZWNrX3ByZXNlbmNl
KQoJCWRlbF90aW1lcl9zeW5jKCZkZXYtPmNoZWNrX3ByZXNfdGltZXIpOwoKCWRldi0+b3BzLT5k
ZWFjdGl2YXRlX3RhcmdldChkZXYsIGRldi0+YWN0aXZlX3RhcmdldCwgbW9kZSk7CglkZXYtPmFj
dGl2ZV90YXJnZXQgPSBOVUxMOwoKZXJyb3I6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7Cgly
ZXR1cm4gcmM7Cn0KCi8qKgogKiBuZmNfZGF0YV9leGNoYW5nZSAtIHRyYW5zY2VpdmUgZGF0YQog
KgogKiBAZGV2OiBUaGUgbmZjIGRldmljZSB0aGF0IGZvdW5kIHRoZSB0YXJnZXQKICogQHRhcmdl
dF9pZHg6IGluZGV4IG9mIHRoZSB0YXJnZXQKICogQHNrYjogZGF0YSB0byBiZSBzZW50CiAqIEBj
YjogY2FsbGJhY2sgY2FsbGVkIHdoZW4gdGhlIHJlc3BvbnNlIGlzIHJlY2VpdmVkCiAqIEBjYl9j
b250ZXh0OiBwYXJhbWV0ZXIgZm9yIHRoZSBjYWxsYmFjayBmdW5jdGlvbgogKgogKiBUaGUgdXNl
ciBtdXN0IHdhaXQgZm9yIHRoZSBjYWxsYmFjayBiZWZvcmUgY2FsbGluZyB0aGlzIGZ1bmN0aW9u
IGFnYWluLgogKi8KaW50IG5mY19kYXRhX2V4Y2hhbmdlKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUz
MiB0YXJnZXRfaWR4LCBzdHJ1Y3Qgc2tfYnVmZiAqc2tiLAoJCSAgICAgIGRhdGFfZXhjaGFuZ2Vf
Y2JfdCBjYiwgdm9pZCAqY2JfY29udGV4dCkKewoJaW50IHJjOwoKCXByX2RlYnVnKCJkZXZfbmFt
ZT0lcyB0YXJnZXRfaWR4PSV1IHNrYi0+bGVuPSV1XG4iLAoJCSBkZXZfbmFtZSgmZGV2LT5kZXYp
LCB0YXJnZXRfaWR4LCBza2ItPmxlbik7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2KTsKCglpZiAo
ZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJCWtmcmVlX3NrYihza2IpOwoJ
CWdvdG8gZXJyb3I7Cgl9CgoJaWYgKGRldi0+cmZfbW9kZSA9PSBORkNfUkZfSU5JVElBVE9SICYm
IGRldi0+YWN0aXZlX3RhcmdldCAhPSBOVUxMKSB7CgkJaWYgKGRldi0+YWN0aXZlX3RhcmdldC0+
aWR4ICE9IHRhcmdldF9pZHgpIHsKCQkJcmMgPSAtRUFERFJOT1RBVkFJTDsKCQkJa2ZyZWVfc2ti
KHNrYik7CgkJCWdvdG8gZXJyb3I7CgkJfQoKCQlpZiAoZGV2LT5vcHMtPmNoZWNrX3ByZXNlbmNl
KQoJCQlkZWxfdGltZXJfc3luYygmZGV2LT5jaGVja19wcmVzX3RpbWVyKTsKCgkJcmMgPSBkZXYt
Pm9wcy0+aW1fdHJhbnNjZWl2ZShkZXYsIGRldi0+YWN0aXZlX3RhcmdldCwgc2tiLCBjYiwKCQkJ
CQkgICAgIGNiX2NvbnRleHQpOwoKCQlpZiAoIXJjICYmIGRldi0+b3BzLT5jaGVja19wcmVzZW5j
ZSAmJiAhZGV2LT5zaHV0dGluZ19kb3duKQoJCQltb2RfdGltZXIoJmRldi0+Y2hlY2tfcHJlc190
aW1lciwgamlmZmllcyArCgkJCQkgIG1zZWNzX3RvX2ppZmZpZXMoTkZDX0NIRUNLX1BSRVNfRlJF
UV9NUykpOwoJfSBlbHNlIGlmIChkZXYtPnJmX21vZGUgPT0gTkZDX1JGX1RBUkdFVCAmJiBkZXYt
Pm9wcy0+dG1fc2VuZCAhPSBOVUxMKSB7CgkJcmMgPSBkZXYtPm9wcy0+dG1fc2VuZChkZXYsIHNr
Yik7Cgl9IGVsc2UgewoJCXJjID0gLUVOT1RDT05OOwoJCWtmcmVlX3NrYihza2IpOwoJCWdvdG8g
ZXJyb3I7Cgl9CgoKZXJyb3I6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7CglyZXR1cm4gcmM7
Cn0KCnN0cnVjdCBuZmNfc2UgKm5mY19maW5kX3NlKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiBz
ZV9pZHgpCnsKCXN0cnVjdCBuZmNfc2UgKnNlOwoKCWxpc3RfZm9yX2VhY2hfZW50cnkoc2UsICZk
ZXYtPnNlY3VyZV9lbGVtZW50cywgbGlzdCkKCQlpZiAoc2UtPmlkeCA9PSBzZV9pZHgpCgkJCXJl
dHVybiBzZTsKCglyZXR1cm4gTlVMTDsKfQpFWFBPUlRfU1lNQk9MKG5mY19maW5kX3NlKTsKCmlu
dCBuZmNfZW5hYmxlX3NlKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiBzZV9pZHgpCnsKCXN0cnVj
dCBuZmNfc2UgKnNlOwoJaW50IHJjOwoKCXByX2RlYnVnKCIlcyBzZSBpbmRleCAlZFxuIiwgZGV2
X25hbWUoJmRldi0+ZGV2KSwgc2VfaWR4KTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlm
IChkZXYtPnNodXR0aW5nX2Rvd24pIHsKCQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0K
CglpZiAoIWRldi0+ZGV2X3VwKSB7CgkJcmMgPSAtRU5PREVWOwoJCWdvdG8gZXJyb3I7Cgl9CgoJ
aWYgKGRldi0+cG9sbGluZykgewoJCXJjID0gLUVCVVNZOwoJCWdvdG8gZXJyb3I7Cgl9CgoJaWYg
KCFkZXYtPm9wcy0+ZW5hYmxlX3NlIHx8ICFkZXYtPm9wcy0+ZGlzYWJsZV9zZSkgewoJCXJjID0g
LUVPUE5PVFNVUFA7CgkJZ290byBlcnJvcjsKCX0KCglzZSA9IG5mY19maW5kX3NlKGRldiwgc2Vf
aWR4KTsKCWlmICghc2UpIHsKCQlyYyA9IC1FSU5WQUw7CgkJZ290byBlcnJvcjsKCX0KCglpZiAo
c2UtPnN0YXRlID09IE5GQ19TRV9FTkFCTEVEKSB7CgkJcmMgPSAtRUFMUkVBRFk7CgkJZ290byBl
cnJvcjsKCX0KCglyYyA9IGRldi0+b3BzLT5lbmFibGVfc2UoZGV2LCBzZV9pZHgpOwoJaWYgKHJj
ID49IDApCgkJc2UtPnN0YXRlID0gTkZDX1NFX0VOQUJMRUQ7CgplcnJvcjoKCWRldmljZV91bmxv
Y2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQoKaW50IG5mY19kaXNhYmxlX3NlKHN0cnVjdCBu
ZmNfZGV2ICpkZXYsIHUzMiBzZV9pZHgpCnsKCXN0cnVjdCBuZmNfc2UgKnNlOwoJaW50IHJjOwoK
CXByX2RlYnVnKCIlcyBzZSBpbmRleCAlZFxuIiwgZGV2X25hbWUoJmRldi0+ZGV2KSwgc2VfaWR4
KTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmIChkZXYtPnNodXR0aW5nX2Rvd24pIHsK
CQlyYyA9IC1FTk9ERVY7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoIWRldi0+ZGV2X3VwKSB7CgkJ
cmMgPSAtRU5PREVWOwoJCWdvdG8gZXJyb3I7Cgl9CgoJaWYgKCFkZXYtPm9wcy0+ZW5hYmxlX3Nl
IHx8ICFkZXYtPm9wcy0+ZGlzYWJsZV9zZSkgewoJCXJjID0gLUVPUE5PVFNVUFA7CgkJZ290byBl
cnJvcjsKCX0KCglzZSA9IG5mY19maW5kX3NlKGRldiwgc2VfaWR4KTsKCWlmICghc2UpIHsKCQly
YyA9IC1FSU5WQUw7CgkJZ290byBlcnJvcjsKCX0KCglpZiAoc2UtPnN0YXRlID09IE5GQ19TRV9E
SVNBQkxFRCkgewoJCXJjID0gLUVBTFJFQURZOwoJCWdvdG8gZXJyb3I7Cgl9CgoJcmMgPSBkZXYt
Pm9wcy0+ZGlzYWJsZV9zZShkZXYsIHNlX2lkeCk7CglpZiAocmMgPj0gMCkKCQlzZS0+c3RhdGUg
PSBORkNfU0VfRElTQUJMRUQ7CgplcnJvcjoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCXJl
dHVybiByYzsKfQoKaW50IG5mY19zZXRfcmVtb3RlX2dlbmVyYWxfYnl0ZXMoc3RydWN0IG5mY19k
ZXYgKmRldiwgY29uc3QgdTggKmdiLCB1OCBnYl9sZW4pCnsKCXByX2RlYnVnKCJkZXZfbmFtZT0l
cyBnYl9sZW49JWRcbiIsIGRldl9uYW1lKCZkZXYtPmRldiksIGdiX2xlbik7CgoJcmV0dXJuIG5m
Y19sbGNwX3NldF9yZW1vdGVfZ2IoZGV2LCBnYiwgZ2JfbGVuKTsKfQpFWFBPUlRfU1lNQk9MKG5m
Y19zZXRfcmVtb3RlX2dlbmVyYWxfYnl0ZXMpOwoKdTggKm5mY19nZXRfbG9jYWxfZ2VuZXJhbF9i
eXRlcyhzdHJ1Y3QgbmZjX2RldiAqZGV2LCBzaXplX3QgKmdiX2xlbikKewoJcHJfZGVidWcoImRl
dl9uYW1lPSVzXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpKTsKCglyZXR1cm4gbmZjX2xsY3BfZ2Vu
ZXJhbF9ieXRlcyhkZXYsIGdiX2xlbik7Cn0KRVhQT1JUX1NZTUJPTChuZmNfZ2V0X2xvY2FsX2dl
bmVyYWxfYnl0ZXMpOwoKaW50IG5mY190bV9kYXRhX3JlY2VpdmVkKHN0cnVjdCBuZmNfZGV2ICpk
ZXYsIHN0cnVjdCBza19idWZmICpza2IpCnsKCS8qIE9ubHkgTExDUCB0YXJnZXQgbW9kZSBmb3Ig
bm93ICovCglpZiAoZGV2LT5kZXBfbGlua191cCA9PSBmYWxzZSkgewoJCWtmcmVlX3NrYihza2Ip
OwoJCXJldHVybiAtRU5PTElOSzsKCX0KCglyZXR1cm4gbmZjX2xsY3BfZGF0YV9yZWNlaXZlZChk
ZXYsIHNrYik7Cn0KRVhQT1JUX1NZTUJPTChuZmNfdG1fZGF0YV9yZWNlaXZlZCk7CgppbnQgbmZj
X3RtX2FjdGl2YXRlZChzdHJ1Y3QgbmZjX2RldiAqZGV2LCB1MzIgcHJvdG9jb2wsIHU4IGNvbW1f
bW9kZSwKCQkgICAgIGNvbnN0IHU4ICpnYiwgc2l6ZV90IGdiX2xlbikKewoJaW50IHJjOwoKCWRl
dmljZV9sb2NrKCZkZXYtPmRldik7CgoJZGV2LT5wb2xsaW5nID0gZmFsc2U7CgoJaWYgKGdiICE9
IE5VTEwpIHsKCQlyYyA9IG5mY19zZXRfcmVtb3RlX2dlbmVyYWxfYnl0ZXMoZGV2LCBnYiwgZ2Jf
bGVuKTsKCQlpZiAocmMgPCAwKQoJCQlnb3RvIG91dDsKCX0KCglkZXYtPnJmX21vZGUgPSBORkNf
UkZfVEFSR0VUOwoKCWlmIChwcm90b2NvbCA9PSBORkNfUFJPVE9fTkZDX0RFUF9NQVNLKQoJCW5m
Y19kZXBfbGlua19pc191cChkZXYsIDAsIGNvbW1fbW9kZSwgTkZDX1JGX1RBUkdFVCk7CgoJcmMg
PSBuZmNfZ2VubF90bV9hY3RpdmF0ZWQoZGV2LCBwcm90b2NvbCk7CgpvdXQ6CglkZXZpY2VfdW5s
b2NrKCZkZXYtPmRldik7CgoJcmV0dXJuIHJjOwp9CkVYUE9SVF9TWU1CT0wobmZjX3RtX2FjdGl2
YXRlZCk7CgppbnQgbmZjX3RtX2RlYWN0aXZhdGVkKHN0cnVjdCBuZmNfZGV2ICpkZXYpCnsKCWRl
di0+ZGVwX2xpbmtfdXAgPSBmYWxzZTsKCWRldi0+cmZfbW9kZSA9IE5GQ19SRl9OT05FOwoKCXJl
dHVybiBuZmNfZ2VubF90bV9kZWFjdGl2YXRlZChkZXYpOwp9CkVYUE9SVF9TWU1CT0wobmZjX3Rt
X2RlYWN0aXZhdGVkKTsKCi8qKgogKiBuZmNfYWxsb2Nfc2VuZF9za2IgLSBhbGxvY2F0ZSBhIHNr
YiBmb3IgZGF0YSBleGNoYW5nZSByZXNwb25zZXMKICoKICogQGRldjogZGV2aWNlIHNlbmRpbmcg
dGhlIHJlc3BvbnNlCiAqIEBzazogc29ja2V0IHNlbmRpbmcgdGhlIHJlc3BvbnNlCiAqIEBmbGFn
czogTVNHX0RPTlRXQUlUIGZsYWcKICogQHNpemU6IHNpemUgdG8gYWxsb2NhdGUKICogQGVycjog
cG9pbnRlciB0byBtZW1vcnkgdG8gc3RvcmUgdGhlIGVycm9yIGNvZGUKICovCnN0cnVjdCBza19i
dWZmICpuZmNfYWxsb2Nfc2VuZF9za2Ioc3RydWN0IG5mY19kZXYgKmRldiwgc3RydWN0IHNvY2sg
KnNrLAoJCQkJICAgdW5zaWduZWQgaW50IGZsYWdzLCB1bnNpZ25lZCBpbnQgc2l6ZSwKCQkJCSAg
IHVuc2lnbmVkIGludCAqZXJyKQp7CglzdHJ1Y3Qgc2tfYnVmZiAqc2tiOwoJdW5zaWduZWQgaW50
IHRvdGFsX3NpemU7CgoJdG90YWxfc2l6ZSA9IHNpemUgKwoJCWRldi0+dHhfaGVhZHJvb20gKyBk
ZXYtPnR4X3RhaWxyb29tICsgTkZDX0hFQURFUl9TSVpFOwoKCXNrYiA9IHNvY2tfYWxsb2Nfc2Vu
ZF9za2Ioc2ssIHRvdGFsX3NpemUsIGZsYWdzICYgTVNHX0RPTlRXQUlULCBlcnIpOwoJaWYgKHNr
YikKCQlza2JfcmVzZXJ2ZShza2IsIGRldi0+dHhfaGVhZHJvb20gKyBORkNfSEVBREVSX1NJWkUp
OwoKCXJldHVybiBza2I7Cn0KCi8qKgogKiBuZmNfYWxsb2NfcmVjdl9za2IgLSBhbGxvY2F0ZSBh
IHNrYiBmb3IgZGF0YSBleGNoYW5nZSByZXNwb25zZXMKICoKICogQHNpemU6IHNpemUgdG8gYWxs
b2NhdGUKICogQGdmcDogZ2ZwIGZsYWdzCiAqLwpzdHJ1Y3Qgc2tfYnVmZiAqbmZjX2FsbG9jX3Jl
Y3Zfc2tiKHVuc2lnbmVkIGludCBzaXplLCBnZnBfdCBnZnApCnsKCXN0cnVjdCBza19idWZmICpz
a2I7Cgl1bnNpZ25lZCBpbnQgdG90YWxfc2l6ZTsKCgl0b3RhbF9zaXplID0gc2l6ZSArIDE7Cglz
a2IgPSBhbGxvY19za2IodG90YWxfc2l6ZSwgZ2ZwKTsKCglpZiAoc2tiKQoJCXNrYl9yZXNlcnZl
KHNrYiwgMSk7CgoJcmV0dXJuIHNrYjsKfQpFWFBPUlRfU1lNQk9MKG5mY19hbGxvY19yZWN2X3Nr
Yik7CgovKioKICogbmZjX3RhcmdldHNfZm91bmQgLSBpbmZvcm0gdGhhdCB0YXJnZXRzIHdlcmUg
Zm91bmQKICoKICogQGRldjogVGhlIG5mYyBkZXZpY2UgdGhhdCBmb3VuZCB0aGUgdGFyZ2V0cwog
KiBAdGFyZ2V0czogYXJyYXkgb2YgbmZjIHRhcmdldHMgZm91bmQKICogQG5fdGFyZ2V0czogdGFy
Z2V0cyBhcnJheSBzaXplCiAqCiAqIFRoZSBkZXZpY2UgZHJpdmVyIG11c3QgY2FsbCB0aGlzIGZ1
bmN0aW9uIHdoZW4gb25lIG9yIG1hbnkgbmZjIHRhcmdldHMKICogYXJlIGZvdW5kLiBBZnRlciBj
YWxsaW5nIHRoaXMgZnVuY3Rpb24sIHRoZSBkZXZpY2UgZHJpdmVyIG11c3Qgc3RvcAogKiBwb2xs
aW5nIGZvciB0YXJnZXRzLgogKiBOT1RFOiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjYWxsZWQgd2l0
aCB0YXJnZXRzPU5VTEwgYW5kIG5fdGFyZ2V0cz0wIHRvCiAqIG5vdGlmeSBhIGRyaXZlciBlcnJv
ciwgbWVhbmluZyB0aGF0IHRoZSBwb2xsaW5nIG9wZXJhdGlvbiBjYW5ub3QgY29tcGxldGUuCiAq
IElNUE9SVEFOVDogdGhpcyBmdW5jdGlvbiBtdXN0IG5vdCBiZSBjYWxsZWQgZnJvbSBhbiBhdG9t
aWMgY29udGV4dC4KICogSW4gYWRkaXRpb24sIGl0IG11c3QgYWxzbyBub3QgYmUgY2FsbGVkIGZy
b20gYSBjb250ZXh0IHRoYXQgd291bGQgcHJldmVudAogKiB0aGUgTkZDIENvcmUgdG8gY2FsbCBv
dGhlciBuZmMgb3BzIGVudHJ5IHBvaW50IGNvbmN1cnJlbnRseS4KICovCmludCBuZmNfdGFyZ2V0
c19mb3VuZChzdHJ1Y3QgbmZjX2RldiAqZGV2LAoJCSAgICAgIHN0cnVjdCBuZmNfdGFyZ2V0ICp0
YXJnZXRzLCBpbnQgbl90YXJnZXRzKQp7CglpbnQgaTsKCglwcl9kZWJ1ZygiZGV2X25hbWU9JXMg
bl90YXJnZXRzPSVkXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpLCBuX3RhcmdldHMpOwoKCWZvciAo
aSA9IDA7IGkgPCBuX3RhcmdldHM7IGkrKykKCQl0YXJnZXRzW2ldLmlkeCA9IGRldi0+dGFyZ2V0
X25leHRfaWR4Kys7CgoJZGV2aWNlX2xvY2soJmRldi0+ZGV2KTsKCglpZiAoZGV2LT5wb2xsaW5n
ID09IGZhbHNlKSB7CgkJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJCXJldHVybiAwOwoJfQoK
CWRldi0+cG9sbGluZyA9IGZhbHNlOwoKCWRldi0+dGFyZ2V0c19nZW5lcmF0aW9uKys7CgoJa2Zy
ZWUoZGV2LT50YXJnZXRzKTsKCWRldi0+dGFyZ2V0cyA9IE5VTEw7CgoJaWYgKHRhcmdldHMpIHsK
CQlkZXYtPnRhcmdldHMgPSBrbWVtZHVwKHRhcmdldHMsCgkJCQkgICAgICAgbl90YXJnZXRzICog
c2l6ZW9mKHN0cnVjdCBuZmNfdGFyZ2V0KSwKCQkJCSAgICAgICBHRlBfQVRPTUlDKTsKCgkJaWYg
KCFkZXYtPnRhcmdldHMpIHsKCQkJZGV2LT5uX3RhcmdldHMgPSAwOwoJCQlkZXZpY2VfdW5sb2Nr
KCZkZXYtPmRldik7CgkJCXJldHVybiAtRU5PTUVNOwoJCX0KCX0KCglkZXYtPm5fdGFyZ2V0cyA9
IG5fdGFyZ2V0czsKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCgluZmNfZ2VubF90YXJnZXRz
X2ZvdW5kKGRldik7CgoJcmV0dXJuIDA7Cn0KRVhQT1JUX1NZTUJPTChuZmNfdGFyZ2V0c19mb3Vu
ZCk7CgovKioKICogbmZjX3RhcmdldF9sb3N0IC0gaW5mb3JtIHRoYXQgYW4gYWN0aXZhdGVkIHRh
cmdldCB3ZW50IG91dCBvZiBmaWVsZAogKgogKiBAZGV2OiBUaGUgbmZjIGRldmljZSB0aGF0IGhh
ZCB0aGUgYWN0aXZhdGVkIHRhcmdldCBpbiBmaWVsZAogKiBAdGFyZ2V0X2lkeDogdGhlIG5mYyBp
bmRleCBvZiB0aGUgdGFyZ2V0CiAqCiAqIFRoZSBkZXZpY2UgZHJpdmVyIG11c3QgY2FsbCB0aGlz
IGZ1bmN0aW9uIHdoZW4gdGhlIGFjdGl2YXRlZCB0YXJnZXQKICogZ29lcyBvdXQgb2YgdGhlIGZp
ZWxkLgogKiBJTVBPUlRBTlQ6IHRoaXMgZnVuY3Rpb24gbXVzdCBub3QgYmUgY2FsbGVkIGZyb20g
YW4gYXRvbWljIGNvbnRleHQuCiAqIEluIGFkZGl0aW9uLCBpdCBtdXN0IGFsc28gbm90IGJlIGNh
bGxlZCBmcm9tIGEgY29udGV4dCB0aGF0IHdvdWxkIHByZXZlbnQKICogdGhlIE5GQyBDb3JlIHRv
IGNhbGwgb3RoZXIgbmZjIG9wcyBlbnRyeSBwb2ludCBjb25jdXJyZW50bHkuCiAqLwppbnQgbmZj
X3RhcmdldF9sb3N0KHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiB0YXJnZXRfaWR4KQp7Cgljb25z
dCBzdHJ1Y3QgbmZjX3RhcmdldCAqdGc7CglpbnQgaTsKCglwcl9kZWJ1ZygiZGV2X25hbWUgJXMg
bl90YXJnZXQgJWRcbiIsIGRldl9uYW1lKCZkZXYtPmRldiksIHRhcmdldF9pZHgpOwoKCWRldmlj
ZV9sb2NrKCZkZXYtPmRldik7CgoJZm9yIChpID0gMDsgaSA8IGRldi0+bl90YXJnZXRzOyBpKysp
IHsKCQl0ZyA9ICZkZXYtPnRhcmdldHNbaV07CgkJaWYgKHRnLT5pZHggPT0gdGFyZ2V0X2lkeCkK
CQkJYnJlYWs7Cgl9CgoJaWYgKGkgPT0gZGV2LT5uX3RhcmdldHMpIHsKCQlkZXZpY2VfdW5sb2Nr
KCZkZXYtPmRldik7CgkJcmV0dXJuIC1FSU5WQUw7Cgl9CgoJZGV2LT50YXJnZXRzX2dlbmVyYXRp
b24rKzsKCWRldi0+bl90YXJnZXRzLS07CglkZXYtPmFjdGl2ZV90YXJnZXQgPSBOVUxMOwoKCWlm
IChkZXYtPm5fdGFyZ2V0cykgewoJCW1lbWNweSgmZGV2LT50YXJnZXRzW2ldLCAmZGV2LT50YXJn
ZXRzW2kgKyAxXSwKCQkgICAgICAgKGRldi0+bl90YXJnZXRzIC0gaSkgKiBzaXplb2Yoc3RydWN0
IG5mY190YXJnZXQpKTsKCX0gZWxzZSB7CgkJa2ZyZWUoZGV2LT50YXJnZXRzKTsKCQlkZXYtPnRh
cmdldHMgPSBOVUxMOwoJfQoKCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCgluZmNfZ2VubF90
YXJnZXRfbG9zdChkZXYsIHRhcmdldF9pZHgpOwoKCXJldHVybiAwOwp9CkVYUE9SVF9TWU1CT0wo
bmZjX3RhcmdldF9sb3N0KTsKCmlubGluZSB2b2lkIG5mY19kcml2ZXJfZmFpbHVyZShzdHJ1Y3Qg
bmZjX2RldiAqZGV2LCBpbnQgZXJyKQp7CgluZmNfdGFyZ2V0c19mb3VuZChkZXYsIE5VTEwsIDAp
Owp9CkVYUE9SVF9TWU1CT0wobmZjX2RyaXZlcl9mYWlsdXJlKTsKCmludCBuZmNfYWRkX3NlKHN0
cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiBzZV9pZHgsIHUxNiB0eXBlKQp7CglzdHJ1Y3QgbmZjX3Nl
ICpzZTsKCWludCByYzsKCglwcl9kZWJ1ZygiJXMgc2UgaW5kZXggJWRcbiIsIGRldl9uYW1lKCZk
ZXYtPmRldiksIHNlX2lkeCk7CgoJc2UgPSBuZmNfZmluZF9zZShkZXYsIHNlX2lkeCk7CglpZiAo
c2UpCgkJcmV0dXJuIC1FQUxSRUFEWTsKCglzZSA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCBuZmNf
c2UpLCBHRlBfS0VSTkVMKTsKCWlmICghc2UpCgkJcmV0dXJuIC1FTk9NRU07CgoJc2UtPmlkeCA9
IHNlX2lkeDsKCXNlLT50eXBlID0gdHlwZTsKCXNlLT5zdGF0ZSA9IE5GQ19TRV9ESVNBQkxFRDsK
CUlOSVRfTElTVF9IRUFEKCZzZS0+bGlzdCk7CgoJbGlzdF9hZGQoJnNlLT5saXN0LCAmZGV2LT5z
ZWN1cmVfZWxlbWVudHMpOwoKCXJjID0gbmZjX2dlbmxfc2VfYWRkZWQoZGV2LCBzZV9pZHgsIHR5
cGUpOwoJaWYgKHJjIDwgMCkgewoJCWxpc3RfZGVsKCZzZS0+bGlzdCk7CgkJa2ZyZWUoc2UpOwoK
CQlyZXR1cm4gcmM7Cgl9CgoJcmV0dXJuIDA7Cn0KRVhQT1JUX1NZTUJPTChuZmNfYWRkX3NlKTsK
CmludCBuZmNfcmVtb3ZlX3NlKHN0cnVjdCBuZmNfZGV2ICpkZXYsIHUzMiBzZV9pZHgpCnsKCXN0
cnVjdCBuZmNfc2UgKnNlLCAqbjsKCWludCByYzsKCglwcl9kZWJ1ZygiJXMgc2UgaW5kZXggJWRc
biIsIGRldl9uYW1lKCZkZXYtPmRldiksIHNlX2lkeCk7CgoJbGlzdF9mb3JfZWFjaF9lbnRyeV9z
YWZlKHNlLCBuLCAmZGV2LT5zZWN1cmVfZWxlbWVudHMsIGxpc3QpCgkJaWYgKHNlLT5pZHggPT0g
c2VfaWR4KSB7CgkJCXJjID0gbmZjX2dlbmxfc2VfcmVtb3ZlZChkZXYsIHNlX2lkeCk7CgkJCWlm
IChyYyA8IDApCgkJCQlyZXR1cm4gcmM7CgoJCQlsaXN0X2RlbCgmc2UtPmxpc3QpOwoJCQlrZnJl
ZShzZSk7CgoJCQlyZXR1cm4gMDsKCQl9CgoJcmV0dXJuIC1FSU5WQUw7Cn0KRVhQT1JUX1NZTUJP
TChuZmNfcmVtb3ZlX3NlKTsKCmludCBuZmNfc2VfdHJhbnNhY3Rpb24oc3RydWN0IG5mY19kZXYg
KmRldiwgdTggc2VfaWR4LAoJCSAgICAgICBzdHJ1Y3QgbmZjX2V2dF90cmFuc2FjdGlvbiAqZXZ0
X3RyYW5zYWN0aW9uKQp7CglpbnQgcmM7CgoJcHJfZGVidWcoInRyYW5zYWN0aW9uOiAleFxuIiwg
c2VfaWR4KTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoKCWlmICghZXZ0X3RyYW5zYWN0aW9u
KSB7CgkJcmMgPSAtRVBST1RPOwoJCWdvdG8gb3V0OwoJfQoKCXJjID0gbmZjX2dlbmxfc2VfdHJh
bnNhY3Rpb24oZGV2LCBzZV9pZHgsIGV2dF90cmFuc2FjdGlvbik7Cm91dDoKCWRldmljZV91bmxv
Y2soJmRldi0+ZGV2KTsKCXJldHVybiByYzsKfQpFWFBPUlRfU1lNQk9MKG5mY19zZV90cmFuc2Fj
dGlvbik7CgppbnQgbmZjX3NlX2Nvbm5lY3Rpdml0eShzdHJ1Y3QgbmZjX2RldiAqZGV2LCB1OCBz
ZV9pZHgpCnsKCWludCByYzsKCglwcl9kZWJ1ZygiY29ubmVjdGl2aXR5OiAleFxuIiwgc2VfaWR4
KTsKCglkZXZpY2VfbG9jaygmZGV2LT5kZXYpOwoJcmMgPSBuZmNfZ2VubF9zZV9jb25uZWN0aXZp
dHkoZGV2LCBzZV9pZHgpOwoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJcmV0dXJuIHJjOwp9
CkVYUE9SVF9TWU1CT0wobmZjX3NlX2Nvbm5lY3Rpdml0eSk7CgpzdGF0aWMgdm9pZCBuZmNfcmVs
ZWFzZShzdHJ1Y3QgZGV2aWNlICpkKQp7CglzdHJ1Y3QgbmZjX2RldiAqZGV2ID0gdG9fbmZjX2Rl
dihkKTsKCXN0cnVjdCBuZmNfc2UgKnNlLCAqbjsKCglwcl9kZWJ1ZygiZGV2X25hbWU9JXNcbiIs
IGRldl9uYW1lKCZkZXYtPmRldikpOwoKCW5mY19nZW5sX2RhdGFfZXhpdCgmZGV2LT5nZW5sX2Rh
dGEpOwoJa2ZyZWUoZGV2LT50YXJnZXRzKTsKCglsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoc2Us
IG4sICZkZXYtPnNlY3VyZV9lbGVtZW50cywgbGlzdCkgewoJCQluZmNfZ2VubF9zZV9yZW1vdmVk
KGRldiwgc2UtPmlkeCk7CgkJCWxpc3RfZGVsKCZzZS0+bGlzdCk7CgkJCWtmcmVlKHNlKTsKCX0K
CglpZGFfZnJlZSgmbmZjX2luZGV4X2lkYSwgZGV2LT5pZHgpOwoKCWtmcmVlKGRldik7Cn0KCnN0
YXRpYyB2b2lkIG5mY19jaGVja19wcmVzX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQp7
CglzdHJ1Y3QgbmZjX2RldiAqZGV2ID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBuZmNfZGV2
LAoJCQkJCSAgIGNoZWNrX3ByZXNfd29yayk7CglpbnQgcmM7CgoJZGV2aWNlX2xvY2soJmRldi0+
ZGV2KTsKCglpZiAoZGV2LT5hY3RpdmVfdGFyZ2V0ICYmIHRpbWVyX3BlbmRpbmcoJmRldi0+Y2hl
Y2tfcHJlc190aW1lcikgPT0gMCkgewoJCXJjID0gZGV2LT5vcHMtPmNoZWNrX3ByZXNlbmNlKGRl
diwgZGV2LT5hY3RpdmVfdGFyZ2V0KTsKCQlpZiAocmMgPT0gLUVPUE5PVFNVUFApCgkJCWdvdG8g
ZXhpdDsKCQlpZiAocmMpIHsKCQkJdTMyIGFjdGl2ZV90YXJnZXRfaWR4ID0gZGV2LT5hY3RpdmVf
dGFyZ2V0LT5pZHg7CgkJCWRldmljZV91bmxvY2soJmRldi0+ZGV2KTsKCQkJbmZjX3RhcmdldF9s
b3N0KGRldiwgYWN0aXZlX3RhcmdldF9pZHgpOwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIWRldi0+
c2h1dHRpbmdfZG93bikKCQkJbW9kX3RpbWVyKCZkZXYtPmNoZWNrX3ByZXNfdGltZXIsIGppZmZp
ZXMgKwoJCQkJICBtc2Vjc190b19qaWZmaWVzKE5GQ19DSEVDS19QUkVTX0ZSRVFfTVMpKTsKCX0K
CmV4aXQ6CglkZXZpY2VfdW5sb2NrKCZkZXYtPmRldik7Cn0KCnN0YXRpYyB2b2lkIG5mY19jaGVj
a19wcmVzX3RpbWVvdXQoc3RydWN0IHRpbWVyX2xpc3QgKnQpCnsKCXN0cnVjdCBuZmNfZGV2ICpk
ZXYgPSBmcm9tX3RpbWVyKGRldiwgdCwgY2hlY2tfcHJlc190aW1lcik7CgoJc2NoZWR1bGVfd29y
aygmZGV2LT5jaGVja19wcmVzX3dvcmspOwp9Cgpjb25zdCBzdHJ1Y3QgY2xhc3MgbmZjX2NsYXNz
ID0gewoJLm5hbWUgPSAibmZjIiwKCS5kZXZfcmVsZWFzZSA9IG5mY19yZWxlYXNlLAp9OwpFWFBP
UlRfU1lNQk9MKG5mY19jbGFzcyk7CgpzdGF0aWMgaW50IG1hdGNoX2lkeChzdHJ1Y3QgZGV2aWNl
ICpkLCBjb25zdCB2b2lkICpkYXRhKQp7CglzdHJ1Y3QgbmZjX2RldiAqZGV2ID0gdG9fbmZjX2Rl
dihkKTsKCWNvbnN0IHVuc2lnbmVkIGludCAqaWR4ID0gZGF0YTsKCglyZXR1cm4gZGV2LT5pZHgg
PT0gKmlkeDsKfQoKc3RydWN0IG5mY19kZXYgKm5mY19nZXRfZGV2aWNlKHVuc2lnbmVkIGludCBp
ZHgpCnsKCXN0cnVjdCBkZXZpY2UgKmQ7CgoJZCA9IGNsYXNzX2ZpbmRfZGV2aWNlKCZuZmNfY2xh
c3MsIE5VTEwsICZpZHgsIG1hdGNoX2lkeCk7CglpZiAoIWQpCgkJcmV0dXJuIE5VTEw7CgoJcmV0
dXJuIHRvX25mY19kZXYoZCk7Cn0KCi8qKgogKiBuZmNfYWxsb2NhdGVfZGV2aWNlIC0gYWxsb2Nh
dGUgYSBuZXcgbmZjIGRldmljZQogKgogKiBAb3BzOiBkZXZpY2Ugb3BlcmF0aW9ucwogKiBAc3Vw
cG9ydGVkX3Byb3RvY29sczogTkZDIHByb3RvY29scyBzdXBwb3J0ZWQgYnkgdGhlIGRldmljZQog
KiBAdHhfaGVhZHJvb206IHJlc2VydmVkIHNwYWNlIGF0IGJlZ2lubmluZyBvZiBza2IKICogQHR4
X3RhaWxyb29tOiByZXNlcnZlZCBzcGFjZSBhdCBlbmQgb2Ygc2tiCiAqLwpzdHJ1Y3QgbmZjX2Rl
diAqbmZjX2FsbG9jYXRlX2RldmljZShjb25zdCBzdHJ1Y3QgbmZjX29wcyAqb3BzLAoJCQkJICAg
IHUzMiBzdXBwb3J0ZWRfcHJvdG9jb2xzLAoJCQkJICAgIGludCB0eF9oZWFkcm9vbSwgaW50IHR4
X3RhaWxyb29tKQp7CglzdHJ1Y3QgbmZjX2RldiAqZGV2OwoJaW50IHJjOwoKCWlmICghb3BzLT5z
dGFydF9wb2xsIHx8ICFvcHMtPnN0b3BfcG9sbCB8fCAhb3BzLT5hY3RpdmF0ZV90YXJnZXQgfHwK
CSAgICAhb3BzLT5kZWFjdGl2YXRlX3RhcmdldCB8fCAhb3BzLT5pbV90cmFuc2NlaXZlKQoJCXJl
dHVybiBOVUxMOwoKCWlmICghc3VwcG9ydGVkX3Byb3RvY29scykKCQlyZXR1cm4gTlVMTDsKCglk
ZXYgPSBremFsbG9jKHNpemVvZihzdHJ1Y3QgbmZjX2RldiksIEdGUF9LRVJORUwpOwoJaWYgKCFk
ZXYpCgkJcmV0dXJuIE5VTEw7CgoJcmMgPSBpZGFfYWxsb2MoJm5mY19pbmRleF9pZGEsIEdGUF9L
RVJORUwpOwoJaWYgKHJjIDwgMCkKCQlnb3RvIGVycl9mcmVlX2RldjsKCWRldi0+aWR4ID0gcmM7
CgoJZGV2LT5kZXYuY2xhc3MgPSAmbmZjX2NsYXNzOwoJZGV2X3NldF9uYW1lKCZkZXYtPmRldiwg
Im5mYyVkIiwgZGV2LT5pZHgpOwoJZGV2aWNlX2luaXRpYWxpemUoJmRldi0+ZGV2KTsKCglkZXYt
Pm9wcyA9IG9wczsKCWRldi0+c3VwcG9ydGVkX3Byb3RvY29scyA9IHN1cHBvcnRlZF9wcm90b2Nv
bHM7CglkZXYtPnR4X2hlYWRyb29tID0gdHhfaGVhZHJvb207CglkZXYtPnR4X3RhaWxyb29tID0g
dHhfdGFpbHJvb207CglJTklUX0xJU1RfSEVBRCgmZGV2LT5zZWN1cmVfZWxlbWVudHMpOwoKCW5m
Y19nZW5sX2RhdGFfaW5pdCgmZGV2LT5nZW5sX2RhdGEpOwoKCWRldi0+cmZfbW9kZSA9IE5GQ19S
Rl9OT05FOwoKCS8qIGZpcnN0IGdlbmVyYXRpb24gbXVzdCBub3QgYmUgMCAqLwoJZGV2LT50YXJn
ZXRzX2dlbmVyYXRpb24gPSAxOwoKCWlmIChvcHMtPmNoZWNrX3ByZXNlbmNlKSB7CgkJdGltZXJf
c2V0dXAoJmRldi0+Y2hlY2tfcHJlc190aW1lciwgbmZjX2NoZWNrX3ByZXNfdGltZW91dCwgMCk7
CgkJSU5JVF9XT1JLKCZkZXYtPmNoZWNrX3ByZXNfd29yaywgbmZjX2NoZWNrX3ByZXNfd29yayk7
Cgl9CgoJcmV0dXJuIGRldjsKCmVycl9mcmVlX2RldjoKCWtmcmVlKGRldik7CgoJcmV0dXJuIE5V
TEw7Cn0KRVhQT1JUX1NZTUJPTChuZmNfYWxsb2NhdGVfZGV2aWNlKTsKCi8qKgogKiBuZmNfcmVn
aXN0ZXJfZGV2aWNlIC0gcmVnaXN0ZXIgYSBuZmMgZGV2aWNlIGluIHRoZSBuZmMgc3Vic3lzdGVt
CiAqCiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRvIHJlZ2lzdGVyCiAqLwppbnQgbmZjX3JlZ2lz
dGVyX2RldmljZShzdHJ1Y3QgbmZjX2RldiAqZGV2KQp7CglpbnQgcmM7CgoJcHJfZGVidWcoImRl
dl9uYW1lPSVzXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpKTsKCgltdXRleF9sb2NrKCZuZmNfZGV2
bGlzdF9tdXRleCk7CgluZmNfZGV2bGlzdF9nZW5lcmF0aW9uKys7CglyYyA9IGRldmljZV9hZGQo
JmRldi0+ZGV2KTsKCW11dGV4X3VubG9jaygmbmZjX2Rldmxpc3RfbXV0ZXgpOwoKCWlmIChyYyA8
IDApCgkJcmV0dXJuIHJjOwoKCXJjID0gbmZjX2xsY3BfcmVnaXN0ZXJfZGV2aWNlKGRldik7Cglp
ZiAocmMpCgkJcHJfZXJyKCJDb3VsZCBub3QgcmVnaXN0ZXIgbGxjcCBkZXZpY2VcbiIpOwoKCWRl
dmljZV9sb2NrKCZkZXYtPmRldik7CglkZXYtPnJma2lsbCA9IHJma2lsbF9hbGxvYyhkZXZfbmFt
ZSgmZGV2LT5kZXYpLCAmZGV2LT5kZXYsCgkJCQkgICBSRktJTExfVFlQRV9ORkMsICZuZmNfcmZr
aWxsX29wcywgZGV2KTsKCWlmIChkZXYtPnJma2lsbCkgewoJCWlmIChyZmtpbGxfcmVnaXN0ZXIo
ZGV2LT5yZmtpbGwpIDwgMCkgewoJCQlyZmtpbGxfZGVzdHJveShkZXYtPnJma2lsbCk7CgkJCWRl
di0+cmZraWxsID0gTlVMTDsKCQl9Cgl9CglkZXYtPnNodXR0aW5nX2Rvd24gPSBmYWxzZTsKCWRl
dmljZV91bmxvY2soJmRldi0+ZGV2KTsKCglyYyA9IG5mY19nZW5sX2RldmljZV9hZGRlZChkZXYp
OwoJaWYgKHJjKQoJCXByX2RlYnVnKCJUaGUgdXNlcnNwYWNlIHdvbid0IGJlIG5vdGlmaWVkIHRo
YXQgdGhlIGRldmljZSAlcyB3YXMgYWRkZWRcbiIsCgkJCSBkZXZfbmFtZSgmZGV2LT5kZXYpKTsK
CglyZXR1cm4gMDsKfQpFWFBPUlRfU1lNQk9MKG5mY19yZWdpc3Rlcl9kZXZpY2UpOwoKLyoqCiAq
IG5mY191bnJlZ2lzdGVyX2RldmljZSAtIHVucmVnaXN0ZXIgYSBuZmMgZGV2aWNlIGluIHRoZSBu
ZmMgc3Vic3lzdGVtCiAqCiAqIEBkZXY6IFRoZSBuZmMgZGV2aWNlIHRvIHVucmVnaXN0ZXIKICov
CnZvaWQgbmZjX3VucmVnaXN0ZXJfZGV2aWNlKHN0cnVjdCBuZmNfZGV2ICpkZXYpCnsKCWludCBy
YzsKCglwcl9kZWJ1ZygiZGV2X25hbWU9JXNcbiIsIGRldl9uYW1lKCZkZXYtPmRldikpOwoKCXJj
ID0gbmZjX2dlbmxfZGV2aWNlX3JlbW92ZWQoZGV2KTsKCWlmIChyYykKCQlwcl9kZWJ1ZygiVGhl
IHVzZXJzcGFjZSB3b24ndCBiZSBub3RpZmllZCB0aGF0IHRoZSBkZXZpY2UgJXMgIgoJCQkgIndh
cyByZW1vdmVkXG4iLCBkZXZfbmFtZSgmZGV2LT5kZXYpKTsKCglkZXZpY2VfbG9jaygmZGV2LT5k
ZXYpOwoJaWYgKGRldi0+cmZraWxsKSB7CgkJcmZraWxsX3VucmVnaXN0ZXIoZGV2LT5yZmtpbGwp
OwoJCXJma2lsbF9kZXN0cm95KGRldi0+cmZraWxsKTsKCQlkZXYtPnJma2lsbCA9IE5VTEw7Cgl9
CglkZXYtPnNodXR0aW5nX2Rvd24gPSB0cnVlOwoJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoK
CWlmIChkZXYtPm9wcy0+Y2hlY2tfcHJlc2VuY2UpIHsKCQlkZWxfdGltZXJfc3luYygmZGV2LT5j
aGVja19wcmVzX3RpbWVyKTsKCQljYW5jZWxfd29ya19zeW5jKCZkZXYtPmNoZWNrX3ByZXNfd29y
ayk7Cgl9CgoJbmZjX2xsY3BfdW5yZWdpc3Rlcl9kZXZpY2UoZGV2KTsKCgltdXRleF9sb2NrKCZu
ZmNfZGV2bGlzdF9tdXRleCk7CgluZmNfZGV2bGlzdF9nZW5lcmF0aW9uKys7CglkZXZpY2VfZGVs
KCZkZXYtPmRldik7CgltdXRleF91bmxvY2soJm5mY19kZXZsaXN0X211dGV4KTsKfQpFWFBPUlRf
U1lNQk9MKG5mY191bnJlZ2lzdGVyX2RldmljZSk7CgpzdGF0aWMgaW50IF9faW5pdCBuZmNfaW5p
dCh2b2lkKQp7CglpbnQgcmM7CgoJcHJfaW5mbygiTkZDIENvcmUgdmVyICVzXG4iLCBWRVJTSU9O
KTsKCglyYyA9IGNsYXNzX3JlZ2lzdGVyKCZuZmNfY2xhc3MpOwoJaWYgKHJjKQoJCXJldHVybiBy
YzsKCglyYyA9IG5mY19nZW5sX2luaXQoKTsKCWlmIChyYykKCQlnb3RvIGVycl9nZW5sOwoKCS8q
IHRoZSBmaXJzdCBnZW5lcmF0aW9uIG11c3Qgbm90IGJlIDAgKi8KCW5mY19kZXZsaXN0X2dlbmVy
YXRpb24gPSAxOwoKCXJjID0gcmF3c29ja19pbml0KCk7CglpZiAocmMpCgkJZ290byBlcnJfcmF3
c29jazsKCglyYyA9IG5mY19sbGNwX2luaXQoKTsKCWlmIChyYykKCQlnb3RvIGVycl9sbGNwX3Nv
Y2s7CgoJcmMgPSBhZl9uZmNfaW5pdCgpOwoJaWYgKHJjKQoJCWdvdG8gZXJyX2FmX25mYzsKCgly
ZXR1cm4gMDsKCmVycl9hZl9uZmM6CgluZmNfbGxjcF9leGl0KCk7CmVycl9sbGNwX3NvY2s6Cgly
YXdzb2NrX2V4aXQoKTsKZXJyX3Jhd3NvY2s6CgluZmNfZ2VubF9leGl0KCk7CmVycl9nZW5sOgoJ
Y2xhc3NfdW5yZWdpc3RlcigmbmZjX2NsYXNzKTsKCXJldHVybiByYzsKfQoKc3RhdGljIHZvaWQg
X19leGl0IG5mY19leGl0KHZvaWQpCnsKCWFmX25mY19leGl0KCk7CgluZmNfbGxjcF9leGl0KCk7
CglyYXdzb2NrX2V4aXQoKTsKCW5mY19nZW5sX2V4aXQoKTsKCWNsYXNzX3VucmVnaXN0ZXIoJm5m
Y19jbGFzcyk7Cn0KCnN1YnN5c19pbml0Y2FsbChuZmNfaW5pdCk7Cm1vZHVsZV9leGl0KG5mY19l
eGl0KTsKCk1PRFVMRV9BVVRIT1IoIkxhdXJvIFJhbW9zIFZlbmFuY2lvIDxsYXVyby52ZW5hbmNp
b0BvcGVuYm9zc2Eub3JnPiIpOwpNT0RVTEVfREVTQ1JJUFRJT04oIk5GQyBDb3JlIHZlciAiIFZF
UlNJT04pOwpNT0RVTEVfVkVSU0lPTihWRVJTSU9OKTsKTU9EVUxFX0xJQ0VOU0UoIkdQTCIpOwpN
T0RVTEVfQUxJQVNfTkVUUFJPVE8oUEZfTkZDKTsKTU9EVUxFX0FMSUFTX0dFTkxfRkFNSUxZKE5G
Q19HRU5MX05BTUUpOwo=
--00000000000046641a062349c676
Content-Type: text/x-csrc; charset="US-ASCII"; name="test.c"
Content-Disposition: attachment; filename="test.c"
Content-Transfer-Encoding: base64
Content-ID: <f_m1o5y6v53>
X-Attachment-Id: f_m1o5y6v53

aW50IG5mY19md19kb3dubG9hZChzdHJ1Y3QgbmZjX2RldiAqZGV2LCBjb25zdCBjaGFyICpmaXJt
d2FyZV9uYW1lKQp7CglpbnQgcmMgPSAwOwoKCXByX2RlYnVnKCIlcyBkbyBmaXJtd2FyZSAlc1xu
IiwgZGV2X25hbWUoJmRldi0+ZGV2KSwgZmlybXdhcmVfbmFtZSk7CgoJZGV2aWNlX2xvY2soJmRl
di0+ZGV2KTsKCglpZiAoZGV2LT5zaHV0dGluZ19kb3duKSB7CgkJcmMgPSAtRU5PREVWOwoJfWVs
c2UgaWYgKGRldi0+ZGV2X3VwKSB7CgkJcmMgPSAtRUJVU1k7Cgl9ZWxzZSBpZiAoIWRldi0+b3Bz
LT5md19kb3dubG9hZCkgewoJCXJjID0gLUVPUE5PVFNVUFA7Cgl9ZWxzZXsKCQlkZXYtPmZ3X2Rv
d25sb2FkX2luX3Byb2dyZXNzID0gdHJ1ZTsKCQlyYyA9IGRldi0+b3BzLT5md19kb3dubG9hZChk
ZXYsIGZpcm13YXJlX25hbWUpOwoJCWlmIChyYykKCQkJZGV2LT5md19kb3dubG9hZF9pbl9wcm9n
cmVzcyA9IGZhbHNlOwoJCX0KCgkJZGV2aWNlX3VubG9jaygmZGV2LT5kZXYpOwoJCXJldHVybiBy
YzsKfQo=
--00000000000046641a062349c676
Content-Type: text/x-patch; charset="US-ASCII"; name="changes.patch"
Content-Disposition: attachment; filename="changes.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_m1o5y6t30>
X-Attachment-Id: f_m1o5y6t30

LS0tIGNvcmUuYwkyMDI0LTA5LTMwIDAxOjMyOjM0LjAzNzExMDA2NCArMDMwMAorKysgbmV3X2Nv
cmUuYwkyMDI0LTA5LTMwIDAxOjM2OjA4LjI3ODU0MDk2MSArMDMwMApAQCAtNTUsNiArNTUsNyBA
QAogCQlyZXR1cm4gcmM7CiB9CiAKKwogLyoqCiAgKiBuZmNfZndfZG93bmxvYWRfZG9uZSAtIGlu
Zm9ybSB0aGF0IGEgZmlybXdhcmUgZG93bmxvYWQgd2FzIGNvbXBsZXRlZAogICoK
--00000000000046641a062349c676--

